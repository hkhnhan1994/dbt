{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v12.json", "dbt_version": "1.8.7", "generated_at": "2024-10-07T03:33:22.894554Z", "invocation_id": "d9c7fc01-cd37-4861-82f5-2369ca3da9b0", "env": {}, "project_name": "project_dbt", "project_id": "24add0b5d3eb94b933e2edb35b83ec6d", "user_id": "ebd3139a-e9fa-4388-9204-db89aa4256c8", "send_anonymous_usage_stats": true, "adapter_type": "bigquery"}, "nodes": {"model.project_dbt.T0202_credit_transfers": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_NL", "name": "T0202_credit_transfers", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/NL/T0202_credit_transfers/T0202_credit_transfers.sql", "original_file_path": "models/PST3/mart/NL/T0202_credit_transfers/T0202_credit_transfers.sql", "unique_id": "model.project_dbt.T0202_credit_transfers", "fqn": ["project_dbt", "PST3", "mart", "NL", "T0202_credit_transfers", "T0202_credit_transfers"], "alias": "T0202_credit_transfers", "checksum": {"name": "sha256", "checksum": "5ed20b14aa844c155037a093bd93708c5d10407ac78cd03e020394bb2dcfff94"}, "config": {"enabled": true, "alias": "T0202_credit_transfers", "schema": "dm_pst3_NL", "database": null, "tags": ["pst3", "yearly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "yearly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/NL/T0202_credit_transfers/T0202_credit_transfers.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_NL", "alias": "T0202_credit_transfers", "tags": ["pst3", "yearly"]}, "created_at": 1728271772.331722, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_NL`.`T0202_credit_transfers`", "raw_code": "{% set period_time = period_calculate(time = 'yearly', selection_date=\"today\", prefix='', suffix='Y' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'NL' -%}\n\n\n        SELECT\n  CASE\n      WHEN DCA.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'GB' THEN 'Extra-EEA'\n      WHEN DCA.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'CH' THEN 'Extra-EEA'\n      WHEN DCA.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'NL' THEN 'Domestic'\n      ELSE DCA.FINANCIAL_INSTITUTION_COUNTRY_CODE\n  END AS payee_psp_country,\n  CASE\n      WHEN FAT.TRANSACTION_CHANNEL IN ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'Paper-based form'\n      WHEN FAT.TRANSACTION_CHANNEL IN ('TPP', 'OCS', 'H2H') THEN 'Electronically'\n      WHEN FAT.TRANSACTION_CHANNEL IS NULL THEN 'not applicable - return'\n      ELSE 'check the query'\n  END AS initiationChannel,\n  'remote' as remoteness,\n  CASE\n      WHEN FAT.TRANSACTION_CHANNEL IN ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'not applicable'\n      WHEN FAT.TRANSACTION_CHANNEL = 'TPP' THEN 'SCA'\n      WHEN FAT.TRANSACTION_CHANNEL = 'OCS'\n           AND TRANSACTION_CREDITOR_REFERENCE_VALUE LIKE 'REF.%/%/%' THEN 'Trusted Beneficiaries exemption'\n      WHEN FAT.TRANSACTION_CHANNEL = 'OCS'\n           AND TRANSACTION_END_TO_END_ID LIKE 'CAF%' THEN 'SCA'\n      WHEN FAT.TRANSACTION_CHANNEL = 'H2H' THEN 'secure corp process exemption'\n      WHEN FAT.TRANSACTION_CHANNEL IS NULL THEN 'not applicable - return'\n      ELSE 'check the query'\n  END AS SCAIndicator,\n  COUNT(DISTINCT FAT.T_SOURCE_PK_ID) AS outbound_ibis_payments_trx_count,\n  COALESCE(SUM(FAT.TRANSACTION_AMOUNT), 0) AS outbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\n\nFROM\n    {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN\n    {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n    ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\nLEFT JOIN\n    {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS DIAT\n    ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = DIAT.T_DIM_KEY\nINNER JOIN\n    {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS DBA\n    ON DIAT.T_D_BANK_ACCOUNT_DIM_KEY = DBA.T_DIM_KEY\nLEFT JOIN\n    {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS DCA\n    ON DCA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n\nWHERE\n    FAT.TRANSACTION_DIRECTION = 'OUTBOUND'\n    AND FAT.TRANSACTION_TYPE = 'REGULAR'\n    AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME('{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n    AND DIAT.ACCOUNT_TYPE = 'PAYMENT'\n    AND FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND DBA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\nGROUP BY 1,2,3,4\nORDER BY 1,2,3,4", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.T0202_credit_transfers_TPP_check": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_NL", "name": "T0202_credit_transfers_TPP_check", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/NL/T0202_credit_transfers_TPP_check/T0202_credit_transfers_TPP_check.sql", "original_file_path": "models/PST3/mart/NL/T0202_credit_transfers_TPP_check/T0202_credit_transfers_TPP_check.sql", "unique_id": "model.project_dbt.T0202_credit_transfers_TPP_check", "fqn": ["project_dbt", "PST3", "mart", "NL", "T0202_credit_transfers_TPP_check", "T0202_credit_transfers_TPP_check"], "alias": "T0202_credit_transfers_TPP_check", "checksum": {"name": "sha256", "checksum": "e26cca3bbe0af49152d9c275ba3c6ed25b9edbd6cde8725c96952dfe3eca6288"}, "config": {"enabled": true, "alias": "T0202_credit_transfers_TPP_check", "schema": "dm_pst3_NL", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/NL/T0202_credit_transfers_TPP_check/T0202_credit_transfers_TPP_check.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_NL", "alias": "T0202_credit_transfers_TPP_check", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3332965, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_NL`.`T0202_credit_transfers_TPP_check`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'NL' -%}\n\n\n        select\n  D.T_SOURCE_PK_ID,\n  D.T_SOURCE_PK_UUID,\n  D.SERVICE_PROVIDER_VERSION ,\n  D.SERVICE_PROVIDER_ACTIVE ,\n  D.SERVICE_PROVIDER_PSP_AUTHORITY_ID ,\n  D.SERVICE_PROVIDER_DISPLAY_NAME,\n  D.SERVICE_PROVIDER_CREATED_AT,\n  D.SERVICE_PROVIDER_UPDATED_AT,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nfrom {{ source('source_dwh_STRP','D_ASPSP_TPP_CURRENT') }} C\ninner join  {{ source('source_dwh_STRP','D_ASPSP_TPP_DECRYPTED') }} D\n  on C.T_SOURCE_PK_UUID = D.T_SOURCE_PK_UUID\nwhere D.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'\n  AND C.SERVICE_PROVIDER_CREATED_AT >= TIMESTAMP(DATETIME('{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND C.SERVICE_PROVIDER_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ASPSP_TPP_CURRENT"], ["source_dwh_STRP", "D_ASPSP_TPP_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.T0401_misc": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_NL", "name": "T0401_misc", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/NL/T0401_misc/T0401_misc.sql", "original_file_path": "models/PST3/mart/NL/T0401_misc/T0401_misc.sql", "unique_id": "model.project_dbt.T0401_misc", "fqn": ["project_dbt", "PST3", "mart", "NL", "T0401_misc", "T0401_misc"], "alias": "T0401_misc", "checksum": {"name": "sha256", "checksum": "d3564cae557265bc2d74ecdc60ebc3d9b997d30320ab4d67980ab7867bc77987"}, "config": {"enabled": true, "alias": "T0401_misc", "schema": "dm_pst3_NL", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/NL/T0401_misc/T0401_misc.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_NL", "alias": "T0401_misc", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3346233, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_NL`.`T0401_misc`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'NL' -%}\n\n\n        SELECT\n  FAM.MOVEMENT_FAMILY as bank_family,\n  FAM.MOVEMENT_SUBFAMILY as bank_subfamily,\n  count(*) as count,\n  COALESCE(SUM(FAM.MOVEMENT_AMOUNT), 0) as amount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_MOVEMENTS_DECRYPTED') }} AS FAM\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS DIAT\n  ON FAM.T_D_IBIS_ACCOUNT_DIM_KEY = DIAT.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS DBA\n  ON DIAT.T_D_BANK_ACCOUNT_DIM_KEY = DBA.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS DCA\n  ON DCA.T_DIM_KEY = FAM.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE DIAT.ACCOUNT_TYPE = 'PAYMENT'\n  AND DBA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND FAM.MOVEMENT_BOOKING_DATE_AT >= TIMESTAMP(DATETIME('{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND FAM.MOVEMENT_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2\nORDER BY 1,2", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_MOVEMENTS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.T0402_AIS_ASPSP_API": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_NL", "name": "T0402_AIS_ASPSP_API", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/NL/T0402_AIS_ASPSP_API/T0402_AIS_ASPSP_API.sql", "original_file_path": "models/PST3/mart/NL/T0402_AIS_ASPSP_API/T0402_AIS_ASPSP_API.sql", "unique_id": "model.project_dbt.T0402_AIS_ASPSP_API", "fqn": ["project_dbt", "PST3", "mart", "NL", "T0402_AIS_ASPSP_API", "T0402_AIS_ASPSP_API"], "alias": "T0402_AIS_ASPSP_API", "checksum": {"name": "sha256", "checksum": "57435f228424a1eb78fad11669898f856f1f554cf6f22229fb886acfe833ba48"}, "config": {"enabled": true, "alias": "T0402_AIS_ASPSP_API", "schema": "dm_pst3_NL", "database": null, "tags": ["pst3", "yearly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "yearly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/NL/T0402_AIS_ASPSP_API/T0402_AIS_ASPSP_API.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_NL", "alias": "T0402_AIS_ASPSP_API", "tags": ["pst3", "yearly"]}, "created_at": 1728271772.3358302, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_NL`.`T0402_AIS_ASPSP_API`", "raw_code": "{% set period_time = period_calculate(time = 'yearly', selection_date=\"today\", prefix='', suffix='Y' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'NL' -%}\n\n\n        select\n  left(t.SERVICE_PROVIDER_PSP_AUTHORITY_ID,2) countryOfAISP,\n  c.consent_iban,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nfrom {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} c\n    inner join {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} cc on c.T_DIM_KEY = cc.T_DIM_KEY\n    inner join {{ source('source_dwh_STRP','D_ASPSP_TPP') }} t on c.T_D_ASPSP_TPP_DIM_KEY = t.T_DIM_KEY\nwhere\n  c.CONSENT_STATUS = 'VALID'\n  and left(c.consent_iban,2) = '{{country_code}}'\n  and c.CONSENT_CREATED_AT >= TIMESTAMP(DATETIME('{{period_time['begin_date']}}', '{{time_zone}}'))\n  and c.CONSENT_EXPIRED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  and  t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_TPP"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.T0402_AIS_PXG": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_NL", "name": "T0402_AIS_PXG", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/NL/T0402_AIS_PXG/T0402_AIS_PXG.sql", "original_file_path": "models/PST3/mart/NL/T0402_AIS_PXG/T0402_AIS_PXG.sql", "unique_id": "model.project_dbt.T0402_AIS_PXG", "fqn": ["project_dbt", "PST3", "mart", "NL", "T0402_AIS_PXG", "T0402_AIS_PXG"], "alias": "T0402_AIS_PXG", "checksum": {"name": "sha256", "checksum": "ea344fdea8cb66abf6385a384dafbd37024d512f1dd3661b0336272f9d227a49"}, "config": {"enabled": true, "alias": "T0402_AIS_PXG", "schema": "dm_pst3_NL", "database": null, "tags": ["pst3", "yearly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "yearly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/NL/T0402_AIS_PXG/T0402_AIS_PXG.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_NL", "alias": "T0402_AIS_PXG", "tags": ["pst3", "yearly"]}, "created_at": 1728271772.3370593, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_NL`.`T0402_AIS_PXG`", "raw_code": "{% set period_time = period_calculate(time = 'yearly', selection_date=\"today\", prefix='', suffix='Y' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'NL' -%}\n\n\n        WITH obsolete_and_active_consents_count_in_reporting_period AS (\n  SELECT\n    'NL' as CountryofAISP,\n    ac.USER_TOKEN,\n    COUNT(*) AS number_of_consents,\n  FROM  {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO') }} AS ac\n  inner JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_CURRENT') }} AS pa\n    ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n   inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n    ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n  ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n    ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n    ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n    ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\n  WHERE\n      a.APPLICATION_NAME in ('PAY-PXG-BANQUPNL')\n      AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n      AND (\n          (ac.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME('{{period_time['begin_date']}}', '{{time_zone}}'))\n              AND ac.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n          )\n          OR (ac.ACCESS_CONSENT_STATUS_AT >= TIMESTAMP(DATETIME('{{period_time['begin_date']}}', '{{time_zone}}'))\n              AND ac.ACCESS_CONSENT_STATUS_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n              )\n      )\n  GROUP BY ac.USER_TOKEN\n  )\n  SELECT\n  COUNT(DISTINCT USER_TOKEN) AS unique_users_count_in_period,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\n  FROM obsolete_and_active_consents_count_in_reporting_period", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.T0401_nr_of_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_NL", "name": "T0401_nr_of_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/NL/T0401_nr_of_accounts/T0401_nr_of_accounts.sql", "original_file_path": "models/PST3/mart/NL/T0401_nr_of_accounts/T0401_nr_of_accounts.sql", "unique_id": "model.project_dbt.T0401_nr_of_accounts", "fqn": ["project_dbt", "PST3", "mart", "NL", "T0401_nr_of_accounts", "T0401_nr_of_accounts"], "alias": "T0401_nr_of_accounts", "checksum": {"name": "sha256", "checksum": "0bcdefc3e267a0c9b23ef4ace4e38347c1d10585054471d41a3d3eba7986ee1a"}, "config": {"enabled": true, "alias": "T0401_nr_of_accounts", "schema": "dm_pst3_NL", "database": null, "tags": ["pst3", "yearly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "yearly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/NL/T0401_nr_of_accounts/T0401_nr_of_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_NL", "alias": "T0401_nr_of_accounts", "tags": ["pst3", "yearly"]}, "created_at": 1728271772.3382115, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_NL`.`T0401_nr_of_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'yearly', selection_date=\"today\", prefix='', suffix='Y' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'NL' -%}\n\n\n        SELECT\ncount(*) nr_accounts,\nCURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n'{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} IACC\nleft join {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} BANK\n  on IACC.T_D_BANK_ACCOUNT_DIM_KEY = BANK.T_DIM_KEY\nWHERE ACCOUNT_TYPE = 'PAYMENT'\n  AND BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'NL'\n  AND (\n    IACC.ACCOUNT_STATUS = 'OPEN'\n    OR (\n      IACC.ACCOUNT_STATUS = 'CLOSED'\n      and IACC.ACCOUNT_UPDATED_AT > TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n      )\n  )\n  and IACC.ACCOUNT_CREATED_AT < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_C": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_C", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_C/KMS_C.sql", "original_file_path": "models/PST3/mart/LV/KMS_C/KMS_C.sql", "unique_id": "model.project_dbt.KMS_C", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_C", "KMS_C"], "alias": "KMS_C", "checksum": {"name": "sha256", "checksum": "1a76db97dcaa9121a20857b10481d5fa172b702c2b15b98df74ad07393238a3b"}, "config": {"enabled": true, "alias": "KMS_C", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_C/KMS_C.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_C", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.3398328, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_C`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        SELECT\n  CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS Payee_PSP_country,\n  count(*) as outbound_ibis_paymennts_trx_count,\n  sum(FAT.TRANSACTION_AMOUNT) AS outbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n  ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n  ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n  ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n  ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n\nWHERE FAT.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND FAT.TRANSACTION_TYPE = 'REGULAR'\n  AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND IA.ACCOUNT_TYPE = 'PAYMENT'\n  AND FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND FAT.TRANSACTION_CHANNEL <> 'CARDS'\n  AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\ngroup by 1", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_P21_Inbound_transactions": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_P21_Inbound_transactions", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_P21_Inbound_transactions/KMS_P21_Inbound_transactions.sql", "original_file_path": "models/PST3/mart/LV/KMS_P21_Inbound_transactions/KMS_P21_Inbound_transactions.sql", "unique_id": "model.project_dbt.KMS_P21_Inbound_transactions", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_P21_Inbound_transactions", "KMS_P21_Inbound_transactions"], "alias": "KMS_P21_Inbound_transactions", "checksum": {"name": "sha256", "checksum": "faee6be8cd0a35732e9bd45780adc33bc1c318416183a4af660de6b4549003ae"}, "config": {"enabled": true, "alias": "KMS_P21_Inbound_transactions", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_P21_Inbound_transactions/KMS_P21_Inbound_transactions.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_P21_Inbound_transactions", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3409643, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_P21_Inbound_transactions`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        SELECT\n   d_counterparty_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payer_psp_country,\n   COUNT(DISTINCT FAT.T_SOURCE_PK_ID) AS inbound_ibis_payments_trx_count,\n   COALESCE(SUM(FAT.TRANSACTION_AMOUNT), 0) AS inbound_ibis_payment_amount_sum_in_EUR,\n   CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n   '{{period_time['period']}}' AS PERIOD,\n FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\n LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS d_account_transaction ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = d_account_transaction.T_DIM_KEY\n LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS d_ibis_account ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = d_ibis_account.T_DIM_KEY\n INNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_bank_accounts ON d_ibis_account.T_D_BANK_ACCOUNT_DIM_KEY = d_bank_accounts.T_DIM_KEY\n LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_counterparty_bank_accounts ON d_counterparty_bank_accounts.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n WHERE FAT.TRANSACTION_DIRECTION = \"INBOUND\"\n     AND FAT.TRANSACTION_TYPE = 'REGULAR'\n     AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n     AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n     AND d_account_transaction.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n     AND d_ibis_account.ACCOUNT_TYPE = 'PAYMENT'\n     AND FAT.TRANSACTION_BANK_FAMILY = 'RCDT'\n     AND d_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n group by 1\n order by 1", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_P11_Outgoing_transactions": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_P11_Outgoing_transactions", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_P11_Outgoing_transactions/KMS_P11_Outgoing_transactions.sql", "original_file_path": "models/PST3/mart/LV/KMS_P11_Outgoing_transactions/KMS_P11_Outgoing_transactions.sql", "unique_id": "model.project_dbt.KMS_P11_Outgoing_transactions", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_P11_Outgoing_transactions", "KMS_P11_Outgoing_transactions"], "alias": "KMS_P11_Outgoing_transactions", "checksum": {"name": "sha256", "checksum": "727aeaf8c005c27c65d32f0c7bbb582cd76b4aa9bcfaaadc6857d3aedf5231e4"}, "config": {"enabled": true, "alias": "KMS_P11_Outgoing_transactions", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_P11_Outgoing_transactions/KMS_P11_Outgoing_transactions.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_P11_Outgoing_transactions", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3420632, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_P11_Outgoing_transactions`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        SELECT\n  CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS Payee_PSP_country,\n  count(*) as outbound_ibis_paymennts_trx_count,\n  sum(FAT.TRANSACTION_AMOUNT) AS outbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n  ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n  ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n  ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n  ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n\nWHERE FAT.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND FAT.TRANSACTION_TYPE = 'REGULAR'\n  AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND IA.ACCOUNT_TYPE = 'PAYMENT'\n  AND FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND FAT.TRANSACTION_CHANNEL <> 'CARDS'\n  AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  group by 1", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_MRA": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_MRA", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_MRA/KMS_MRA.sql", "original_file_path": "models/PST3/mart/LV/KMS_MRA/KMS_MRA.sql", "unique_id": "model.project_dbt.KMS_MRA", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_MRA", "KMS_MRA"], "alias": "KMS_MRA", "checksum": {"name": "sha256", "checksum": "ea85152e9230e5f390e727b9eba8dd57aec165d9695be764ee436020847f9834"}, "config": {"enabled": true, "alias": "KMS_MRA", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_MRA/KMS_MRA.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_MRA", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3431711, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_MRA`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        SELECT\n  BA.BANK_ACCOUNT_NUMBER as large_biller_account,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_MERCHANTS_CURRENT') }} AS M\nleft JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n  ON M.T_D_MRA_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\nWHERE M.T_D_MRA_BANK_ACCOUNT_DIM_KEY is not null\n  AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND MERCHANT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND MERCHANT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_MERCHANTS_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_MERCHANTS_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_P6a_number_of_AIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_P6a_number_of_AIS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_P6a_number_of_AIS/KMS_P6a_number_of_AIS.sql", "original_file_path": "models/PST3/mart/LV/KMS_P6a_number_of_AIS/KMS_P6a_number_of_AIS.sql", "unique_id": "model.project_dbt.KMS_P6a_number_of_AIS", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_P6a_number_of_AIS", "KMS_P6a_number_of_AIS"], "alias": "KMS_P6a_number_of_AIS", "checksum": {"name": "sha256", "checksum": "0ce453805683f91ce76e490562dcc2674ba61a8569c14537f73ee9f3889f91d9"}, "config": {"enabled": true, "alias": "KMS_P6a_number_of_AIS", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_P6a_number_of_AIS/KMS_P6a_number_of_AIS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_P6a_number_of_AIS", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3443928, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_P6a_number_of_AIS`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        WITH obsolete_and_active_consents_count_in_reporting_period AS (\n  SELECT\n    ac.USER_TOKEN,\n    COUNT(*) AS number_of_consents,\n  FROM  {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO') }} AS ac\n  inner JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_CURRENT') }} AS pa\n    ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n   inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n    ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n  ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n    ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n    ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n    ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\n  WHERE\n    a.APPLICATION_NAME in ('PAY-PXG-BANQUPLV')\n    AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS' -- consents on UPP's own accounts are not counted\n    AND ( ac.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n          AND ac.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n          OR (ac.ACCESS_CONSENT_STATUS_AT > TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n              AND ac.ACCESS_CONSENT_STATUS_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n            )\n    )\n  GROUP BY ac.USER_TOKEN\n  )\n  SELECT\n    COUNT(DISTINCT USER_TOKEN) AS unique_users_count_in_period,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n    '{{period_time['period']}}' AS PERIOD,\n  FROM obsolete_and_active_consents_count_in_reporting_period", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_P17_PIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_P17_PIS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_P17_PIS/KMS_P17_PIS.sql", "original_file_path": "models/PST3/mart/LV/KMS_P17_PIS/KMS_P17_PIS.sql", "unique_id": "model.project_dbt.KMS_P17_PIS", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_P17_PIS", "KMS_P17_PIS"], "alias": "KMS_P17_PIS", "checksum": {"name": "sha256", "checksum": "0a44a10b1776c2455f98df7ff0d83de5e5906f8953ff154a689d78c7e17cdda9"}, "config": {"enabled": true, "alias": "KMS_P17_PIS", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_P17_PIS/KMS_P17_PIS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_P17_PIS", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3455153, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_P17_PIS`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        SELECT\n  'Banqup applications' as TypeOfApplication,\n  credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE AS counterparty_country,\n  IT.INBOUND_TRANSACTION_CURRENCY_CODE  AS currency,\n  COUNT(*)  AS success_trx_count,\n  SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS success_trx_summed_value,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n    ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n    ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n    ON IP.T_DIM_KEY=IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n    ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n    ON IP.T_DIM_KEY=PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n    ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS debacc\n    ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n    ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\nWHERE FI.FINANCIAL_INSTITUTION_CODE  <> 'IBIS'\n    AND PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n    AND APP.APPLICATION_NAME = 'PAY-PXG-BANQUPLV'\n    AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n GROUP BY 1, 2, 3\n\nUNION ALL\n\nSELECT\n  'Banqup applications' as TypeOfApplication,\n  credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE AS counterparty_country,\n  IT.INBOUND_TRANSACTION_CURRENCY_CODE  AS currency,\n  COUNT(*)  AS success_trx_count,\n  SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS success_trx_summed_value,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n    ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n    ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n    ON IP.T_DIM_KEY = IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n    ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n    ON IP.T_DIM_KEY = PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n    ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} debacc\n    ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n    ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\n\nWHERE\n  PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n  AND APP.APPLICATION_NAME  = 'PAY-PXG-OCS'\n  AND FI.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n  AND credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,4) = 'PANX72'\n  AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n\nGROUP BY 1, 2, 3\nORDER BY 1,2 DESC", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_P7a_number_of_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_P7a_number_of_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_P7a_number_of_accounts/KMS_P7a_number_of_accounts.sql", "original_file_path": "models/PST3/mart/LV/KMS_P7a_number_of_accounts/KMS_P7a_number_of_accounts.sql", "unique_id": "model.project_dbt.KMS_P7a_number_of_accounts", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_P7a_number_of_accounts", "KMS_P7a_number_of_accounts"], "alias": "KMS_P7a_number_of_accounts", "checksum": {"name": "sha256", "checksum": "30179e97a65c9db6f1338e09d4be37fb984e0031a7ce2fd04d29ad711fed0c89"}, "config": {"enabled": true, "alias": "KMS_P7a_number_of_accounts", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_P7a_number_of_accounts/KMS_P7a_number_of_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_P7a_number_of_accounts", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.346638, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_P7a_number_of_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        SELECT\n  count(*) as number_of_accounts,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} IACC\nleft join {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} BANK on IACC.T_D_BANK_ACCOUNT_DIM_KEY = BANK.T_DIM_KEY\nwhere ACCOUNT_TYPE = 'PAYMENT'\n  AND BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND (\n      IACC.ACCOUNT_STATUS = 'OPEN'\n      OR (\n        IACC.ACCOUNT_STATUS = 'CLOSED'\n        AND IACC.ACCOUNT_UPDATED_AT >= TIMESTAMP(DATETIME('{{period_time['begin_date']}}', '{{time_zone}}'))\n      )\n    )\n  AND IACC.ACCOUNT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.KMS_C_non_euro_transactions": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LV", "name": "KMS_C_non_euro_transactions", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LV/KMS_C_non_euro_transactions/KMS_C_non_euro_transactions.sql", "original_file_path": "models/PST3/mart/LV/KMS_C_non_euro_transactions/KMS_C_non_euro_transactions.sql", "unique_id": "model.project_dbt.KMS_C_non_euro_transactions", "fqn": ["project_dbt", "PST3", "mart", "LV", "KMS_C_non_euro_transactions", "KMS_C_non_euro_transactions"], "alias": "KMS_C_non_euro_transactions", "checksum": {"name": "sha256", "checksum": "f8918d3362694eb6fe6c9d712cf99327d7918d24ea2f192715252f9f1fa0ca9d"}, "config": {"enabled": true, "alias": "KMS_C_non_euro_transactions", "schema": "dm_pst3_LV", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LV/KMS_C_non_euro_transactions/KMS_C_non_euro_transactions.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LV", "alias": "KMS_C_non_euro_transactions", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3477297, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LV`.`KMS_C_non_euro_transactions`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LV' -%}\n\n\n        SELECT\n  count(*) as number_of_non_EUR_transactions,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n  ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n  ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n  ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n  ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE FAT.TRANSACTION_CURRENCY <> 'EUR'\nAND TRANSACTION_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\nAND TRANSACTION_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_TROP_5845_IBIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_TROP_5845_IBIS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_TROP_5845_IBIS/PAY_TROP_5845_IBIS.sql", "original_file_path": "models/PST3/mart/PT/PAY_TROP_5845_IBIS/PAY_TROP_5845_IBIS.sql", "unique_id": "model.project_dbt.PAY_TROP_5845_IBIS", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_TROP_5845_IBIS", "PAY_TROP_5845_IBIS"], "alias": "PAY_TROP_5845_IBIS", "checksum": {"name": "sha256", "checksum": "615e752a5957ea4eec027e3b343a91ebbf82877e24812aee9befbf9789d33f7b"}, "config": {"enabled": true, "alias": "PAY_TROP_5845_IBIS", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "daily"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_TROP_5845_IBIS/PAY_TROP_5845_IBIS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_TROP_5845_IBIS", "tags": ["pst3", "daily"]}, "created_at": 1728271772.3491385, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_TROP_5845_IBIS`", "raw_code": "{% set period_time = period_calculate(time = 'daily', selection_date=\"today\", prefix='', suffix='D' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        WITH outbound as (\n  SELECT\n  'O' AS Ot,\n  fat.T_SOURCE_PK_ID AS Ref,\n  '' AS ORef,\n  baBA.BANK_ACCOUNT_NUMBER as debtor_account_identifier ,\n  baCB.BANK_ACCOUNT_NUMBER as creditor_account_identifier,\n  substr(baBA.BANK_ACCOUNT_NUMBER,5,4) AS Ord,\n  IF(left(baCB.BANK_ACCOUNT_NUMBER,2)='{{country_code}}', substr(baCB.BANK_ACCOUNT_NUMBER,5,4), '9999') AS Ben,\n  '' AS PayID,\n  baBA.BANK_ACCOUNT_BIC AS BICOrd,\n  baCB.BANK_ACCOUNT_BIC AS BICBen,\n  '' AS BICSen,\n  '' AS BICRec,\n  baBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasOrd,\n  baCB.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasBen,\n  '5493000RZ2KSLKCYNN98' AS LEIOrd,\n  '' AS LEIBen,\n  '4' AS Sch,\n  IF(baCB.BANK_ACCOUNT_BIC = 'PANXPTP2','3','9') AS Pro,\n  date(ats.TRANSACTION_BOOKING_DATE_AT) AS DtLiq,\n  cast(null as date) AS DtPISP,\n  '' AS TsOrd,\n  '' AS TsBen,\n  '1' AS TipTR,\n  fat.TRANSACTION_CURRENCY AS Div,\n  fat.TRANSACTION_AMOUNT AS Mont,\n  fat.TRANSACTION_AMOUNT AS MontOrg,\n  CASE\n    WHEN fat.TRANSACTION_CHANNEL = 'OTHER' THEN'8'\n    WHEN fat.TRANSACTION_CHANNEL IN ('TPP','OCS') THEN'4'\n    WHEN fat.TRANSACTION_CHANNEL = 'H2H' THEN'6'\n    ELSE 'check the query'\n  END AS TipCan,\n\n  CASE\n    WHEN fat.TRANSACTION_CHANNEL IN ('OTHER','TPP','OCS') THEN'2'\n    WHEN fat.TRANSACTION_CHANNEL = 'H2H' THEN'1'\n    ELSE 'check the query'\n  END AS FormEnv,\n\n  CASE\n    WHEN fat.TRANSACTION_CHANNEL IN ('TPP','OCS','H2H') THEN'Y'\n    WHEN fat.TRANSACTION_CHANNEL IN ('OTHER') THEN'N'\n    ELSE 'check the query'\n  END AS OperElet,\n\n  'Y' AS OperRem,\n  'Y' AS OperECom,\n  'N' AS IniPISP,\n  '1' AS ModAc,\n  CASE\n    WHEN fat.TRANSACTION_CHANNEL IN ('TPP','OCS','OTHER') THEN'Y'\n    WHEN fat.TRANSACTION_CHANNEL IN ('H2H') THEN'N'\n    ELSE 'check the query'\n  END AS SCA,\n\n  case\n    WHEN fat.TRANSACTION_CHANNEL IN ('TPP','OCS','OTHER') then ''\n    WHEN fat.TRANSACTION_CHANNEL IN ('H2H') then '5'\n    ELSE 'check the query'\n  END AS MnonSCA,\n\n  'N.E.' AS SI,\n  baBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasmC,\n  baCB.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasnC,\n  '' AS CPosm,\n  '' AS TipDoc,\n  '' AS NumDoc,\n  '' AS LEIC,\n  'N' AS ENI,\n  '' AS InfUltBen,\n  '' AS InfUltOrd,\n  \"{{period}}\"  AS Period,\n  CURRENT_TIMESTAMP AS load_timestamp,\n\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as fat\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} ibis\n  ON fat.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as baBA\n  ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = baBA.T_DIM_KEY\n  -- AND baBA.T_SOURCE_TABLE = \"READ_DWH_TRANSACTIONS\"\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as baCB\n  ON baCB.T_DIM_KEY = fat.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  -- AND baCB.T_SOURCE_TABLE = \"READ_DWH_TRANSACTIONS\"\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_DECRYPTED') }} AS ats\n  ON fat.T_D_ACCOUNT_TRANSACTION_DIM_KEY = ats.T_DIM_KEY\n\nWHERE fat.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND baBA.Financial_institution_country_code = '{{country_code}}'\n  AND (fat.TRANSACTION_TYPE ) = 'REGULAR'\n  AND (ats.TRANSACTION_STATUS ) IN ('RETURNED', 'SETTLED')\n  AND (ibis.ACCOUNT_TYPE ) = 'PAYMENT'\n  AND fat.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND fat.TRANSACTION_CHANNEL <> 'CARDS'\n  AND TIMESTAMP(ats.TRANSACTION_BOOKING_DATE_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n  AND TIMESTAMP(ats.TRANSACTION_BOOKING_DATE_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  --pt winter time\n),\ninbound as (\n  SELECT\n  'B' AS Ot,\n  fat.T_SOURCE_PK_ID AS Ref,\n  '' AS ORef,\n  baBA.BANK_ACCOUNT_NUMBER as debtor_account_identifier ,\n  baCB.BANK_ACCOUNT_NUMBER as creditor_account_identifier,\n  IF(left(baCB.BANK_ACCOUNT_NUMBER,2)='{{country_code}}', substr(baCB.BANK_ACCOUNT_NUMBER,5,4), '9999') AS Ord,\n  substr(baBA.BANK_ACCOUNT_NUMBER,5,4) AS Ben,\n  '' AS PayID,\n  baCB.BANK_ACCOUNT_BIC AS BICOrd,\n  baBA.BANK_ACCOUNT_BIC AS BICBen,\n  '' AS BICSen,\n  '' AS BICRec,\n  baCB.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasOrd,\n  baBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasBen,\n  '' AS LEIOrd,\n  '5493000RZ2KSLKCYNN98' AS LEIBen,\n  '4' AS Sch,\n  IF(baCB.BANK_ACCOUNT_BIC = 'PANXPTP2','3','9') AS Pro,\n  date(ats.TRANSACTION_BOOKING_DATE_AT) AS DtLiq,\n  cast(null as date) AS DtPISP,\n  '' AS TsOrd,\n  '' AS TsBen,\n  '1' AS TipTR,\n  fat.TRANSACTION_CURRENCY AS Div,\n  fat.TRANSACTION_AMOUNT AS Mont,\n  fat.TRANSACTION_AMOUNT AS MontOrg,\n  '' AS TipCan,\n  '' AS FormEnv,\n  '' AS OperElet,\n  '' AS OperRem,\n  'N' AS OperECom,\n  '' AS IniPISP,\n  '' AS ModAc,\n  '' AS SCA,\n  '' AS MnonSCA,\n  'N.E.' AS SI,\n  baBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasmC,\n  baBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasnC,\n  '' AS CPosm,\n  '' AS TipDoc,\n  '' AS NumDoc,\n  '' AS LEIC,\n  'N' AS ENI,\n  '' AS InfUltBen,\n  '' AS InfUltOrd,\n  \"{{period}}\"  AS Period,\n  CURRENT_TIMESTAMP AS load_timestamp,\n\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as fat\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} ibis\n  ON fat.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as baBA\n  ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = baBA.T_DIM_KEY\n  -- AND baBA.T_SOURCE_TABLE = \"READ_DWH_TRANSACTIONS\"\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as baCB\n  ON baCB.T_DIM_KEY = fat.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  -- AND baCB.T_SOURCE_TABLE = \"READ_DWH_TRANSACTIONS\"\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_DECRYPTED') }} AS ats\n  ON fat.T_D_ACCOUNT_TRANSACTION_DIM_KEY = ats.T_DIM_KEY\n\nWHERE fat.TRANSACTION_DIRECTION = \"INBOUND\"\n  AND baBA.Financial_institution_country_code = '{{country_code}}'\n  AND (fat.TRANSACTION_TYPE ) = 'REGULAR'\n  AND (ats.TRANSACTION_STATUS ) IN ('RETURNED', 'SETTLED')\n  AND (ibis.ACCOUNT_TYPE ) = 'PAYMENT'\n  AND fat.TRANSACTION_BANK_FAMILY = 'RCDT'\n  AND TIMESTAMP(ats.TRANSACTION_BOOKING_DATE_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n  AND TIMESTAMP(ats.TRANSACTION_BOOKING_DATE_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  --pt winter time\n)\nSELECT * FROM outbound\nUNION ALL\nSELECT * FROM inbound", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_CPCL": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_CPCL", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_CPCL/PAY_CPCL.sql", "original_file_path": "models/PST3/mart/PT/PAY_CPCL/PAY_CPCL.sql", "unique_id": "model.project_dbt.PAY_CPCL", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_CPCL", "PAY_CPCL"], "alias": "PAY_CPCL", "checksum": {"name": "sha256", "checksum": "eaf223b08fba21ad177e7e71d7b30b81b38342d031f3a1d614a28ec7be8caab4"}, "config": {"enabled": true, "alias": "PAY_CPCL", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_CPCL/PAY_CPCL.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_CPCL", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.35045, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_CPCL`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    \"Y\" AS Ot,\n    row_number() over () as IDReg,\n    LAST_DAY(date_add(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)) as DtRef,\n    'PSDBE-NBB-0649860804' as AISP,\n    '{{country_code}}' as PasCl,\n    COUNT(DISTINCT acic.USER_TOKEN) as NCl,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\nFROM {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_CURRENT') }} as acic\nJOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT') }} AS pac\n    ON pac.T_DIM_KEY = acic.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS') }} AS fp\n        ON pac.T_D_FINANCIAL_PLATFORM_DIM_KEY = fp.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n    ON fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY = fi.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS ci\n    ON ci.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY = pac.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO') }} AS aai\n    ON aai.T_DIM_KEY = ci.T_D_APPLICATION_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS ad\n    ON ad.T_DIM_KEY = aai.T_D_APPLICATION_DIM_KEY\nWHERE\n    -- ad.APPLICATION_NAME = 'PAY-PXG-BANQUPPT'\n    ad.APPLICATION_NAME in ('PAY-PXG-COMMUNITY', 'PAY-PXG-GOCOMPTA', 'PAY-PXG-MAGIC4BUSINESS', 'PAY-PXG-YOURSMINC', 'PAY-PXG-MIJNBOEKHOUDER')  -- Replace previous premise with thise for test with BE data\n    and fi.FINANCIAL_INSTITUTION_CODE != 'IBIS'\n    AND acic.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND acic.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,3,4,5,7,8", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_CPNC": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_CPNC", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_CPNC/PAY_CPNC.sql", "original_file_path": "models/PST3/mart/PT/PAY_CPNC/PAY_CPNC.sql", "unique_id": "model.project_dbt.PAY_CPNC", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_CPNC", "PAY_CPNC"], "alias": "PAY_CPNC", "checksum": {"name": "sha256", "checksum": "27598bd65f246d5d2e485f56a90dca4b1df7ed31195359a93c2db02257887dc3"}, "config": {"enabled": true, "alias": "PAY_CPNC", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_CPNC/PAY_CPNC.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_CPNC", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.351563, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_CPNC`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    \"X\" AS Ot,\n    row_number() over () as IDReg,\n    LAST_DAY(date_add(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)) as DtRef,\n    \"5845\" AS ASPSP,\n    \"5493000RZ2KSLKCYNN98\" AS LEIASPSP,\n    \"N.E.\" AS `If`,\n    \"2\" AS TipCont,\n    \"\" AS DepOvTr,\n    le.ENTERPRISE_ADDRESS_COUNTRY as PasTit,\n    le.ENTERPRISE_ADDRESS_POSTAL_CODE AS CPos,\n    pa.PAYMENT_ACCOUNT_CURRENCY AS Div,\n    \"Y\" AS ContrOB,\n    count(1) as NCont,\n    count(1) as NContAOn,\n    0 AS NContAISPM,\n    0 AS SaldoME,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} as iac\nJOIN {{ source('source_dwh_STRP','D_PAYMENT_ACCOUNT_DECRYPTED') }} AS pa\n    ON iac.T_D_PAYMENT_ACCOUNT_DIM_KEY = pa.T_DIM_KEY\n    AND LEFT(pa.PAYMENT_ACCOUNT_NUMBER,2) = '{{country_code}}'\nLEFT JOIN {{ source('source_dwh_STRP','F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES') }} AS lep\n        ON lep.T_D_PAYMENT_ACCOUNT_DIM_KEY = pa.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_LEGAL_ENTITY_DECRYPTED') }} AS le\n    ON le.T_DIM_KEY = lep.T_D_LEGAL_ENTITY_DIM_KEY\nWHERE\n    (\n        pa.PAYMENT_ACCOUNT_STATUS = 'ACTIVE'\n        OR(\n            pa.PAYMENT_ACCOUNT_STATUS != 'ACTIVE'\n            AND pa.PAYMENT_ACCOUNT_UPDATED_AT >= TIMESTAMP('{{period_time['begin_date']}}')\n        )\n    )\n    AND left(pa.PAYMENT_ACCOUNT_NUMBER,2) = '{{country_code}}'\n    AND pa.PAYMENT_ACCOUNT_CREATED_AT <= TIMESTAMP('{{period_time['end_date']}}')\nGROUP BY 1,3,4,5,6,7,8,9,10,11,12,15,16,17,18", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_PAYMENT_ACCOUNT_DECRYPTED"], ["source_dwh_STRP", "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES"], ["source_dwh_STRP", "D_LEGAL_ENTITY_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_TROP_5845": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_TROP_5845", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_TROP_5845/PAY_TROP_5845.sql", "original_file_path": "models/PST3/mart/PT/PAY_TROP_5845/PAY_TROP_5845.sql", "unique_id": "model.project_dbt.PAY_TROP_5845", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_TROP_5845", "PAY_TROP_5845"], "alias": "PAY_TROP_5845", "checksum": {"name": "sha256", "checksum": "e7b7ab4241d77bca3dc4e4a889e2b2502dce0f34f6d94d9bfc28e51442d504f0"}, "config": {"enabled": true, "alias": "PAY_TROP_5845", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "daily"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_TROP_5845/PAY_TROP_5845.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_TROP_5845", "tags": ["pst3", "daily"]}, "created_at": 1728271772.3527865, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_TROP_5845`", "raw_code": "{% set period_time = period_calculate(time = 'daily', selection_date=\"today\", prefix='', suffix='D' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  -- COALESCE(cmd_deb.identifier,cmd_cre.identifier) AS payment_account_number,\n  -- COALESCE(cmd_deb.enterprise_number,cmd_cre.enterprise_number) AS enterprise_number,\n  -- COALESCE(cmd_deb.legal_form,cmd_cre.legal_form) AS legal_form,\n  -- COALESCE(cmd_deb.country,cmd_cre.country) AS country,\n  -- COALESCE(cmd_deb.postal_code,cmd_cre.postal_code) AS postal_code,\n  bis.Ot,\n  bis.Ref,\n  bis.ORef,\n  bis.debtor_account_identifier,\n  bis.creditor_account_identifier,\n  bis.Ord,\n  bis.Ben,\n  bis.PayID,\n  bis.BICOrd,\n  bis.BICBen,\n  bis.BICSen,\n  bis.BICRec,\n  bis.PasOrd,\n  bis.PasBen,\n  bis.LEIOrd,\n  bis.LEIBen,\n  bis.Sch,\n  bis.Pro,\n  bis.DtLiq,\n  bis.DtPISP,\n  bis.TsOrd,\n  bis.TsBen,\n  bis.TipTR,\n  bis.Div,\n  bis.Mont,\n  bis.MontOrg,\n  bis.TipCan,\n  bis.FormEnv,\n  bis.OperElet,\n  bis.OperRem,\n  bis.OperECom,\n  bis.IniPISP,\n  bis.ModAc,\n  bis.SCA,\n  bis.MnonSCA,\n  bis.SI,\n  bis.PasmC,\n  bis.PasnC,\n  bis.CPosm,\n  bis.TipDoc,\n  bis.NumDoc,\n  bis.LEIC,\n  bis.ENI,\n  bis.InfUltBen,\n  bis.InfUltOrd,\n  bis.Period,\n  bis.load_timestamp,\nFROM {{ ref('PAY_TROP_5845_IBIS') }} AS bis\n-- LEFT JOIN {{ ref('PAY_TROP_5845_CMD') }} as cmd_deb\n--   ON bis.debtor_account_identifier = cmd_deb.identifier\n--   AND bis.Ot = 'O'\n-- LEFT JOIN {{ ref('PAY_TROP_5845_CMD') }} as cmd_cre\n--   ON bis.creditor_account_identifier = cmd_cre.identifier\n--   AND bis.Ot = 'B'\nUNION ALL\nSELECT\n  -- cmd_cre.identifier as payment_account_number,\n  -- cmd_cre.enterprise_number,\n  -- cmd_cre.legal_form,\n  -- cmd_cre.country,\n  -- cmd_cre.postal_code,\n  pis.Ot,\n  pis.Ref,\n  pis.ORef,\n  pis.debtor_account_identifier,\n  pis.creditor_account_identifier,\n  pis.Ord,\n  pis.Ben,\n  pis.PayID,\n  pis.BICOrd,\n  pis.BICBen,\n  pis.BICSen,\n  pis.BICRec,\n  pis.PasOrd,\n  pis.PasBen,\n  pis.LEIOrd,\n  pis.LEIBen,\n  pis.Sch,\n  pis.Pro,\n  NULL AS DtLiq,\n  pis.DtPISP,\n  pis.TsOrd,\n  pis.TsBen,\n  pis.TipTR,\n  pis.Div,\n  pis.Mont,\n  pis.MontOrg,\n  pis.TipCan,\n  pis.FormEnv,\n  pis.OperElet,\n  pis.OperRem,\n  pis.OperECom,\n  pis.IniPISP,\n  pis.ModAc,\n  pis.SCA,\n  pis.MnonSCA,\n  pis.SI,\n  pis.PasmC,\n  pis.PasnC,\n  pis.CPosm,\n  pis.TipDoc,\n  pis.NumDoc,\n  pis.LEIC,\n  pis.ENI,\n  pis.InfUltBen,\n  pis.InfUltOrd,\n  pis.Period,\n  pis.load_timestamp,\nFROM {{ ref('PAY_TROP_5845_PIS') }} AS pis\n-- LEFT JOIN {{ ref('PAY_TROP_5845_CMD') }} as cmd_cre\n--  ON pis.creditor_account_identifier = cmd_cre.identifier", "language": "sql", "refs": [{"name": "PAY_TROP_5845_IBIS", "package": null, "version": null}, {"name": "PAY_TROP_5845_CMD", "package": null, "version": null}, {"name": "PAY_TROP_5845_CMD", "package": null, "version": null}, {"name": "PAY_TROP_5845_PIS", "package": null, "version": null}, {"name": "PAY_TROP_5845_CMD", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["model.project_dbt.PAY_TROP_5845_IBIS", "model.project_dbt.PAY_TROP_5845_CMD", "model.project_dbt.PAY_TROP_5845_PIS"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_CPMC": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_CPMC", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_CPMC/PAY_CPMC.sql", "original_file_path": "models/PST3/mart/PT/PAY_CPMC/PAY_CPMC.sql", "unique_id": "model.project_dbt.PAY_CPMC", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_CPMC", "PAY_CPMC"], "alias": "PAY_CPMC", "checksum": {"name": "sha256", "checksum": "ddfedb64be098a2f5a6a5c5a218d0748f44d064e02a6cd83d6825c90d3b18a20"}, "config": {"enabled": true, "alias": "PAY_CPMC", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_CPMC/PAY_CPMC.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_CPMC", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3539276, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_CPMC`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        WITH operation_types AS (\n    (select 'ICDT' as family, 'ESCT' as subfamily, '22' as TipOper) union all\n    (select 'MCOP' as family, 'OTHR' as subfamily, '27' as TipOper) union all\n    (select 'MDOP' as family, 'OTHR' as subfamily, '28' as TipOper) union all\n    (select 'RCDT' as family, 'ESCT' as subfamily, '21' as TipOper) union all\n    (select 'RCDT' as family, 'RRTN' as subfamily, '21' as TipOper) union all\n    (select 'RDDT' as family, 'ESDD' as subfamily, '22' as TipOper) union all\n    (select 'RDDT' as family, 'OODD' as subfamily, '22' as TipOper)\n)\nSELECT\n    \"X\" AS Ot,\n    row_number() over () as IDReg,\n    LAST_DAY(date_add(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)) as DtRef,\n    \"5845\" AS ASPSP,\n    ifnull(t.TipOper, 'NA') AS TipOper,\n    count(1) as Quant,\n    sum(am.MOVEMENT_AMOUNT) as Mont,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_MOVEMENTS') }} as am\nJOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT') }} AS ia\n    ON am.T_D_IBIS_ACCOUNT_DIM_KEY = ia.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS bad\n        ON ia.T_D_BANK_ACCOUNT_DIM_KEY = bad.T_DIM_KEY\nLEFT JOIN operation_types t\n    ON t.family = am.MOVEMENT_FAMILY\n    AND t.subfamily = am.MOVEMENT_SUBFAMILY\nWHERE\n    left(bad.BANK_ACCOUNT_NUMBER,2) = '{{country_code}}'\n    AND am.MOVEMENT_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND am.MOVEMENT_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,3,4,5,8,9", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_MOVEMENTS"], ["source_dwh_STRP", "D_IBIS_ACCOUNT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_TROP_5845_PIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_TROP_5845_PIS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_TROP_5845_PIS/PAY_TROP_5845_PIS.sql", "original_file_path": "models/PST3/mart/PT/PAY_TROP_5845_PIS/PAY_TROP_5845_PIS.sql", "unique_id": "model.project_dbt.PAY_TROP_5845_PIS", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_TROP_5845_PIS", "PAY_TROP_5845_PIS"], "alias": "PAY_TROP_5845_PIS", "checksum": {"name": "sha256", "checksum": "f7cf8f25b557620e5efc67f1878149697757364a969416d32b7c18a1a314f469"}, "config": {"enabled": true, "alias": "PAY_TROP_5845_PIS", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "daily"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_TROP_5845_PIS/PAY_TROP_5845_PIS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_TROP_5845_PIS", "tags": ["pst3", "daily"]}, "created_at": 1728271772.3548162, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_TROP_5845_PIS`", "raw_code": "{% set period_time = period_calculate(time = 'daily', selection_date=\"today\", prefix='', suffix='D' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    'I' AS Ot,\n    '' AS Ref,\n    '' AS ORef,\n    IF(deb.FINANCIAL_INSTITUTION_COUNTRY_CODE ='{{country_code}}', substr(deb.BANK_ACCOUNT_NUMBER, 5,4), '9999') AS Ord,\n    IF(cred.FINANCIAL_INSTITUTION_COUNTRY_CODE  ='{{country_code}}', substr(cred.BANK_ACCOUNT_NUMBER,5,4), '9999') AS Ben,\n    pi.T_SOURCE_PK_ID  AS PayID,\n    deb.BANK_ACCOUNT_NUMBER  as debtor_account_identifier,\n    cred.BANK_ACCOUNT_NUMBER as creditor_account_identifier ,\n    '' AS BICOrd,\n    '' AS BICBen,\n    '' AS BICSen,\n    '' AS BICRec,\n    fi.FINANCIAL_INSTITUTION_COUNTRY AS PasOrd,\n    cred.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PasBen,\n    '' as LEIOrd,\n    '' as LEIBen,\n    '28' as Sch,\n    '' as Pro,\n    cast(null as DATE) as DatLiq,\n    date(pi.PAYMENT_INITIATION_CREATED_AT) as DtPISP,\n    '' AS TsOrd,\n    '' AS TsBen,\n    '1' AS TipTR,\n    it.INBOUND_TRANSACTION_CURRENCY_CODE as Div,\n    it.INBOUND_TRANSACTION_AMOUNT as Mont,\n    it.INBOUND_TRANSACTION_AMOUNT as MontOrg,\n    '4' as TipCan,\n    '2' as FormEnv,\n    'Y' as OperElet,\n    'Y' as OperRem,\n    'Y' as OperECom,\n    'N' as IniPISP,\n    '1' as ModAc,\n    'N' as SCA,\n    '10' as MnonSCA,\n    'N.E.' as SI,\n    '' as PasmC,\n    '' as PasnC,\n    '' as CPosm,\n    '' AS TipDoc,\n    '' AS NumDoc,\n    '' AS LEIC,\n    '' AS ENI,\n    '' AS InfUltBen,\n    '' AS InfUltOrd,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS load_timestamp,\n\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_DECRYPTED') }} AS ip\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }}\n    AS fp ON ip.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }}\n    AS fi ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }}\n    AS it ON ip.T_DIM_KEY=it.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO_DECRYPTED') }}\n    AS dit ON dit.T_DIM_KEY=it.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }}\n    AS pi ON ip.T_DIM_KEY=pi.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }}\n    AS app ON ip.T_D_APPLICATION_DIM_KEY = app.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }}\n    AS deb ON deb.T_DIM_KEY=ip.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }}\n    AS cred ON cred.T_DIM_KEY=it.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY\n\nWHERE pi.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n    AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n    AND (\n        app.APPLICATION_NAME IN ('PAY-PXG-COMMUNITY')\n        OR\n            (\n                app.APPLICATION_NAME IN ('PAY-PXG-OCS')\n                AND (cred.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n                AND substr(cred.BANK_ACCOUNT_NUMBER,5,3) = '504'    )\n            )\n        )\n    --  AND (\n    --     app.APPLICATION_NAME = 'PAY-PXG-BANQUPPT'\n    --     OR (\n    --         app.APPLICATION_NAME = 'PAY-PXG-OCS'\n    --         AND cred.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n    --         AND substr(cred.BANK_ACCOUNT_NUMBER,5,4) = '5845'\n    --         )\n    --     )-- creditor account is a PANX PT account\n    AND TIMESTAMP(dit.INBOUND_TRANSACTION_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n    AND TIMESTAMP(dit.INBOUND_TRANSACTION_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  --pt winter time", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_CPCA": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_CPCA", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_CPCA/PAY_CPCA.sql", "original_file_path": "models/PST3/mart/PT/PAY_CPCA/PAY_CPCA.sql", "unique_id": "model.project_dbt.PAY_CPCA", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_CPCA", "PAY_CPCA"], "alias": "PAY_CPCA", "checksum": {"name": "sha256", "checksum": "3686fd6139c4c40124306065a1084c459ddd9ace207f38db7dfaa30e5573de7f"}, "config": {"enabled": true, "alias": "PAY_CPCA", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_CPCA/PAY_CPCA.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_CPCA", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3559844, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_CPCA`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        WITH count_NContAISPS_last_six_months AS(\n  SELECT\n    row_number() over () as IDReg,\n    'Y' as Ot,     -- PXG perspective\n    LAST_DAY(date_add(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)) as DtRef,\n    substr(bad.BANK_ACCOUNT_NUMBER,5,4) as ASPSP,\n    'PSDBE-NBB-0649860804' as AISP,\n    '{{country_code}}' as PasASPSP,\n    '{{country_code}}' as PasAISP,\n    '' AS LEIASPSP,\n    '5493000RZ2KSLKCYNN98' AS LEIAISP,\n    '1' AS ModAc,\n    0 as NContAISPM,                                             -- Number of accounts with consent within reporting month (numbers are in next part of the union)\n    count(distinct bad.BANK_ACCOUNT_NUMBER) as NContAISPS,       -- Number of accounts with consent in last 6 months\n    0 as NPedInUt,                                               -- Number of access to account initiated by user within reporting month (numbers are in next part of the union)\n    0 as NPedSInUt,                                               -- Number of automatic access to account within reporting month (numbers are in next part of the union)\n  FROM {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_CURRENT') }} acic\n  JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT') }} pac\n    ON pac.T_DIM_KEY = acic.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} bad\n    ON pac.T_D_BANK_ACCOUNT_DIM_KEY = bad.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS') }} fp\n    ON pac.T_D_FINANCIAL_PLATFORM_DIM_KEY = fp.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} fi\n    ON fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY = fi.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} ci\n    ON ci.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY = pac.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO') }} aai\n    ON aai.T_DIM_KEY = ci.T_D_APPLICATION_ACCOUNT_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} ad\n    ON ad.T_DIM_KEY = aai.T_D_APPLICATION_DIM_KEY\n  WHERE\n  -- ad.APPLICATION_NAME = 'PAY-PXG-BANQUPPT' --PT\n  ad.APPLICATION_NAME in ('PAY-PXG-COMMUNITY', 'PAY-PXG-GOCOMPTA', 'PAY-PXG-MAGIC4BUSINESS', 'PAY-PXG-YOURSMINC', 'PAY-PXG-MIJNBOEKHOUDER')  -- BE data\n  AND fi.FINANCIAL_INSTITUTION_CODE != 'IBIS'\n  AND acic.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND (\n    acic.ACCESS_CONSENT_STATUS = 'ACTIVE'\n    OR DATE(acic.ACCESS_CONSENT_STATUS_AT) >= DATE_ADD(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -6 MONTH)\n  )\n  -- Created before the end of the reporting period AND still active or status last changed within 6 months before the reporting period\n  GROUP BY DtRef, bad.BANK_ACCOUNT_NUMBER\n),\ncount_NContAISPM_previous_month AS(\n  SELECT\n    row_number() over () as IDReg,\n   'Y' as Ot,     -- PXG perspective\n   LAST_DAY(date_add(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)) as DtRef,\n   substr(bad.BANK_ACCOUNT_NUMBER,5,4) as ASPSP,\n   'PSDBE-NBB-0649860804' as AISP,\n   '{{country_code}}' as PasASPSP,\n   '{{country_code}}' as PasAISP,\n   '' AS LEIASPSP,\n   '5493000RZ2KSLKCYNN98' AS LEIAISP,\n   '1' AS ModAc,\n    count(distinct bad.BANK_ACCOUNT_NUMBER) as NContAISPM,       -- Number of accounts with consent in month\n    0 as NContAISPS,                                             -- Number of accounts with consent in last 6 months (numbers were in previous part of the union)\n    count(distinct bad.BANK_ACCOUNT_NUMBER) as NPedInUt,         -- Assuming one access per day\n    4 * count(distinct bad.BANK_ACCOUNT_NUMBER) * extract(DAY FROM LAST_DAY(date_add(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)))  as NPedSInUt,     -- 4 * Number of days in month * number of accounts with consent in month\n  FROM {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_CURRENT') }} acic\n  JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT') }} pac\n    ON pac.T_DIM_KEY = acic.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} bad\n    ON pac.T_D_BANK_ACCOUNT_DIM_KEY = bad.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS') }} fp\n    ON pac.T_D_FINANCIAL_PLATFORM_DIM_KEY = fp.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} fi\n    ON fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY = fi.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} ci\n    ON ci.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY = pac.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO') }} aai\n    ON aai.T_DIM_KEY = ci.T_D_APPLICATION_ACCOUNT_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} ad\n    ON ad.T_DIM_KEY = aai.T_D_APPLICATION_DIM_KEY\n  WHERE\n  -- ad.APPLICATION_NAME = 'PAY-PXG-BANQUPPT' -- PT\n  ad.APPLICATION_NAME in ('PAY-PXG-COMMUNITY', 'PAY-PXG-GOCOMPTA', 'PAY-PXG-MAGIC4BUSINESS', 'PAY-PXG-YOURSMINC', 'PAY-PXG-MIJNBOEKHOUDER')  -- BE data\n  and fi.FINANCIAL_INSTITUTION_CODE != 'IBIS'\n  AND acic.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND (\n    acic.ACCESS_CONSENT_STATUS = 'ACTIVE'\n    OR DATE(acic.ACCESS_CONSENT_STATUS_AT) >= DATE_ADD(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)\n  )\n  -- Created before the end of the reporting period and (is still active or status last changed before the start of the reporting period)\n  GROUP BY DtRef, bad.BANK_ACCOUNT_NUMBER\n),\ncount_NContAISPM AS(\n  SELECT\n    ROW_NUMBER() OVER () AS IDReg,\n    'X' AS Ot,\n    -- PXG perspective\n    LAST_DAY(DATE_ADD(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)) AS DtRef,\n    '5845' AS ASPSP,\n    REPLACE (t.SERVICE_PROVIDER_PSP_AUTHORISATION_NUMBER, '.', '') as AISP,\n    '{{country_code}}' AS PasASPSP,\n    '{{country_code}}' AS PasAISP,\n    '' AS LEIASPSP,\n    '5493000RZ2KSLKCYNN98' AS LEIAISP,\n    '1' AS ModAc,\n    COUNT(*) AS NContAISPM,\n    -- Number of accounts with consent within reporting month (numbers are in next part of the union)\n    0 AS NContAISPS,\n    -- Number of accounts with consent in last 6 months\n    0 AS NPedInUt,\n    -- Number of access to account initiated by user within reporting month (numbers are in next part of the union)\n    0 AS NPedSInUt,                                         -- Number of automatic access to account within reporting month (numbers are in next part of the union)\n  FROM {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} c\n  INNER JOIN {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} cc\n    ON c.T_DIM_KEY = cc.T_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_ASPSP_TPP') }} t\n    ON c.T_D_ASPSP_TPP_DIM_KEY = t.T_DIM_KEY\n  WHERE\n    -- c.CONSENT_STATUS = 'VALID'\n    LEFT(c.consent_iban,2) ='{{country_code}}'\n    AND c.CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    -- AND (c.CONSENT_STATUS = 'VALID'\n    --   OR DATE(acic.ACCESS_CONSENT_STATUS_AT) >=  DATE_ADD(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)\n    --   ) -- ==> geen consent_status_at in DWH ook niet in DL\n    AND t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'\n  GROUP BY DtRef, t.SERVICE_PROVIDER_PSP_AUTHORISATION_NUMBER\n),\ncount_NContAISPS AS(\n  SELECT\n    ROW_NUMBER() OVER () AS IDReg,\n    'X' AS Ot,\n    -- PXG perspective\n    LAST_DAY(DATE_ADD(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -1 MONTH)) AS DtRef,\n    '5845' AS ASPSP,\n    REPLACE (t.SERVICE_PROVIDER_PSP_AUTHORISATION_NUMBER, '.', '') as AISP,\n    '{{country_code}}' AS PasASPSP,\n    '{{country_code}}' AS PasAISP,\n    '' AS LEIASPSP,\n    '5493000RZ2KSLKCYNN98' AS LEIAISP,\n    '1' AS ModAc,\n    0 AS NContAISPM,\n    -- Number of accounts with consent within reporting month (numbers are in next part of the union)\n    COUNT(*) AS NContAISPS,\n    -- Number of accounts with consent in last 6 months\n    0 AS NPedInUt,\n    -- Number of access to account initiated by user within reporting month (numbers are in next part of the union)\n    0 AS NPedSInUt                                               -- Number of automatic access to account within reporting month (numbers are in next part of the union)\n  FROM {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} c\n  INNER JOIN {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} cc\n  ON c.T_DIM_KEY = cc.T_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_ASPSP_TPP') }} t\n  ON c.T_D_ASPSP_TPP_DIM_KEY = t.T_DIM_KEY\n  WHERE\n    --  c.CONSENT_STATUS = 'VALID'\n    LEFT(c.consent_iban,2) ='{{country_code}}'\n    AND c.CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    -- AND (acic.ACCESS_CONSENT_STATUS = 'ACTIVE'\n    --   or DATE(acic.ACCESS_CONSENT_STATUS_AT) >= DATE_ADD(DATE(TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))), INTERVAL -6 MONTH)\n    --   ) ==> no consent status at?\n    AND t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'\n  GROUP BY DtRef, t.SERVICE_PROVIDER_PSP_AUTHORISATION_NUMBER\n)\nSELECT\n  Ot,IDReg,DtRef,ASPSP,AISP, PasASPSP,\n  PasAISP, LEIASPSP, LEIAISP, ModAc,\n  sum(NContAISPM) as NContAISPM,\n  sum(NContAISPS) as NContAISPS,\n  sum(NPedInUt) as NPedInUt,\n  sum(NPedSInUt) as NPedSInUt,\n  \"{{period}}\"  AS Period,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\nFROM (\n  SELECT * FROM count_NContAISPS_last_six_months\n  UNION ALL\n  SELECT * FROM count_NContAISPM_previous_month\n)\n-- This must still be unioned with data from the ASPSP API for TPPs other than UP (second perspective)\nGROUP BY 1,2,3,4,5,6,7,8,9,10\nUNION ALL\nSELECT\n  Ot,IDReg,DtRef,ASPSP,AISP, PasASPSP,\n  PasAISP, LEIASPSP, LEIAISP, ModAc,\n  sum(NContAISPM) as NContAISPM,\n  sum(NContAISPS) as NContAISPS,\n  sum(NPedInUt) as NPedInUt,\n  sum(NPedSInUt) as NPedSInUt,\n  \"{{period}}\"  AS Period,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\nFROM (\n  SELECT * FROM count_NContAISPM\n  UNION ALL\n  SELECT * FROM count_NContAISPS\n)\n-- This must still be unioned with data from the ASPSP API for TPPs other than UP (second perspective)\nGROUP BY 1,2,3,4,5,6,7,8,9,10", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_TPP"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_TPP"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_TROP_5845_CMD": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_TROP_5845_CMD", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_TROP_5845_CMD/PAY_TROP_5845_CMD.sql", "original_file_path": "models/PST3/mart/PT/PAY_TROP_5845_CMD/PAY_TROP_5845_CMD.sql", "unique_id": "model.project_dbt.PAY_TROP_5845_CMD", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_TROP_5845_CMD", "PAY_TROP_5845_CMD"], "alias": "PAY_TROP_5845_CMD", "checksum": {"name": "sha256", "checksum": "72686002d555c2b5da6c9831a593b389342914de3c1999bb98f7fff0e5eb947c"}, "config": {"enabled": true, "alias": "PAY_TROP_5845_CMD", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "daily"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_TROP_5845_CMD/PAY_TROP_5845_CMD.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_TROP_5845_CMD", "tags": ["pst3", "daily"]}, "created_at": 1728271772.35687, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_TROP_5845_CMD`", "raw_code": "{% set period_time = period_calculate(time = 'daily', selection_date=\"today\", prefix='', suffix='D' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    pa.PAYMENT_ACCOUNT_NUMBER AS identifier,\n    le.ENTERPRISE_ADDRESS_NUMBER AS enterprise_number,\n    le.ENTERPRISE_LEGAL_FORM AS legal_form,\n    le.ENTERPRISE_ADDRESS_COUNTRY AS country,\n    le.ENTERPRISE_ADDRESS_POSTAL_CODE AS postal_code,\nFROM(\n  WITH current_table AS (\n  SELECT *, ROW_NUMBER() OVER(PARTITION BY T_BUS_KEY ORDER BY T_INGESTION_TIMESTAMP desc, T_LOAD_TIMESTAMP desc) AS rn\n  FROM  {{ source('source_dwh_STRP','D_PAYMENT_ACCOUNT_DECRYPTED') }}\n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1\n)  AS pa\nLEFT JOIN(\nselect *,\nrow_number() over(partition by T_D_PAYMENT_ACCOUNT_DIM_KEY order by T_INGESTION_TIMESTAMP desc) as rn\nfrom {{ source('source_dwh_STRP','F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED') }}\n)  lepar\n    ON pa.T_DIM_KEY = lepar.T_D_PAYMENT_ACCOUNT_DIM_KEY AND lepar.T_FACT_KEY != 0\n    and rn = 1\nLEFT JOIN(\n  WITH current_table AS (\n    SELECT *, ROW_NUMBER() OVER(PARTITION BY T_BUS_KEY ORDER BY T_INGESTION_TIMESTAMP desc, T_LOAD_TIMESTAMP desc) AS rn\n    FROM  {{ source('source_dwh_STRP','D_LEGAL_ENTITY_DECRYPTED') }}\n  )\n  SELECT * EXCEPT(rn)\n  FROM current_table\n  WHERE rn = 1\n)  AS le\n    ON lepar.T_D_LEGAL_ENTITY_DIM_KEY = le.T_DIM_KEY AND le.T_DIM_KEY <> 0\nWHERE pa.T_DIM_KEY <> 0 AND pa.PAYMENT_ACCOUNT_COUNTRY = '{{country_code}}'\n    AND pa.T_SOURCE = 'P1_PCMD'", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_PAYMENT_ACCOUNT_DECRYPTED"], ["source_dwh_STRP", "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED"], ["source_dwh_STRP", "D_LEGAL_ENTITY_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PAY_TRRT_5845": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PT", "name": "PAY_TRRT_5845", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/PT/PAY_TRRT_5845/PAY_TRRT_5845.sql", "original_file_path": "models/PST3/mart/PT/PAY_TRRT_5845/PAY_TRRT_5845.sql", "unique_id": "model.project_dbt.PAY_TRRT_5845", "fqn": ["project_dbt", "PST3", "mart", "PT", "PAY_TRRT_5845", "PAY_TRRT_5845"], "alias": "PAY_TRRT_5845", "checksum": {"name": "sha256", "checksum": "67792c961c1212299b5654d05543b8a0c26d80db939e1afc0b5a345f0f75a7d6"}, "config": {"enabled": true, "alias": "PAY_TRRT_5845", "schema": "dm_pst3_PT", "database": null, "tags": ["pst3", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "daily"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/PT/PAY_TRRT_5845/PAY_TRRT_5845.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_PT", "alias": "PAY_TRRT_5845", "tags": ["pst3", "daily"]}, "created_at": 1728271772.3580706, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PT`.`PAY_TRRT_5845`", "raw_code": "{% set period_time = period_calculate(time = 'daily', selection_date=\"today\", prefix='', suffix='D' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    'O' AS Ot,\n    ftr.T_SOURCE_PK_ID AS Ref,\n    '' AS ORef,\n    IF(deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}',SUBSTR(deb.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ord,\n    IF(cred.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', SUBSTR(cred.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ben,\n    '' AS PayID,\n    deb.BANK_ACCOUNT_BIC AS BICOrd,\n    cred.BANK_ACCOUNT_BIC AS BICBen,\n    '' AS MotrTransSCT,\n    '' AS MotrTransInst,\n    '' AS MotrTransTns,\n    '' AS MotrTransTgtSwift,\n    DATE(dtr.TRANSACTION_BOOKING_DATE_AT) AS DtLiqRtrans,\n    '4' AS TiprTransTRF,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS load_timestamp,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n    ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n    ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n    ON cred.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n    ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nWHERE ftr.TRANSACTION_DIRECTION = 'OUTBOUND'\n    AND deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n    AND ftr.transaction_type = 'RETURN'\n    AND dtr.TRANSACTION_STATUS IN ('SETTLED', 'RETURNED')\n    AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND ftr.TRANSACTION_CHANNEL <> 'CARDS'\n    AND TIMESTAMP(dtr.TRANSACTION_BOOKING_DATE_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n    AND TIMESTAMP(dtr.TRANSACTION_BOOKING_DATE_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\nUNION ALL\nSELECT\n    'B' AS Ot,\n    ftr.T_SOURCE_PK_ID AS Ref,\n    '' AS ORef,\n    IF(deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}',SUBSTR(deb.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ord,\n    IF(cred.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', SUBSTR(cred.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ben,\n    '' AS PayID,\n    deb.BANK_ACCOUNT_BIC AS BICOrd,\n    cred.BANK_ACCOUNT_BIC AS BICBen,\n    '' AS MotrTransSCT,\n    '' AS MotrTransInst,\n    '' AS MotrTransTns,\n    '' AS MotrTransTgtSwift,\n    DATE(dtr.TRANSACTION_BOOKING_DATE_AT) AS DtLiqRtrans,\n    '4' AS TiprTransTRF,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS load_timestamp,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n    ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n    ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = cred.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n    ON deb.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n    ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nWHERE ftr.TRANSACTION_DIRECTION = 'INBOUND'\n    AND cred.FINANCIAL_INSTITUTION_COUNTRY_CODE in ('{{country_code}}')\n    AND iacc.ACCOUNT_TYPE = 'PAYMENT'\n    AND ftr.transaction_type IN ('RETURN')\n    AND dtr.TRANSACTION_STATUS IN ('SETTLED', 'RETURNED')\n    AND ftr.TRANSACTION_BANK_FAMILY = 'RCDT'\n    AND TIMESTAMP(dtr.TRANSACTION_BOOKING_DATE_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n    AND TIMESTAMP(dtr.TRANSACTION_BOOKING_DATE_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\n--UNMATCHED TRANSACTIONS\nUNION ALL\nSELECT\n    'O' AS Ot,\n    utr.T_SOURCE_PK_ID AS Ref,\n    '' AS ORef,\n    IF(deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}',SUBSTR(deb.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ord,\n    IF(cred.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', SUBSTR(cred.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ben,\n    '' AS PayID,\n    deb.BANK_ACCOUNT_BIC AS BICOrd,\n    cred.BANK_ACCOUNT_BIC AS BICBen,\n    '' AS MotrTransSCT,\n    '' AS MotrTransInst,\n    '' AS MotrTransTns,\n    '' AS MotrTransTgtSwift,\n    DATE(utr.TRANSACTION_BOOKING_DATE_AT) AS DtLiqRtrans,\n    '4' AS TiprTransTRF,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS load_timestamp,\nFROM {{ source('source_dwh_STRP','F_UNMATCHED_ACCOUNT_TRANSACTIONS') }} utr\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n    ON utr.T_D_MISSING_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n    ON cred.T_DIM_KEY = utr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n-- LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n--     ON utr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nWHERE utr.TRANSACTION_DIRECTION = 'OUTBOUND'\n    AND DEB.FINANCIAL_INSTITUTION_COUNTRY_CODE in ('{{country_code}}')\n    AND utr.transaction_type = 'RETURN'\n    AND utr.TRANSACTION_STATUS IN ('SETTLED', 'RETURNED')\n    AND utr.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND utr.TRANSACTION_CHANNEL <> 'CARDS'\n    AND TIMESTAMP(utr.TRANSACTION_BOOKING_DATE_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n    AND TIMESTAMP(utr.TRANSACTION_BOOKING_DATE_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\nUNION ALL\nSELECT\n    'B' AS Ot,\n    utr.T_SOURCE_PK_ID AS Ref,\n    '' AS ORef,\n    IF(deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}',SUBSTR(deb.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ord,\n    IF(cred.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', SUBSTR(cred.BANK_ACCOUNT_NUMBER, 5, 4), '9999') AS Ben,\n    '' AS PayID,\n    deb.BANK_ACCOUNT_BIC AS BICOrd,\n    cred.BANK_ACCOUNT_BIC AS BICBen,\n    '' AS MotrTransSCT,\n    '' AS MotrTransInst,\n    '' AS MotrTransTns,\n    '' AS MotrTransTgtSwift,\n    DATE(utr.TRANSACTION_BOOKING_DATE_AT) AS DtLiqRtrans,\n    '4' AS TiprTransTRF,\n    \"{{period}}\"  AS Period,\n    CURRENT_TIMESTAMP AS load_timestamp,\nFROM {{ source('source_dwh_STRP','F_UNMATCHED_ACCOUNT_TRANSACTIONS') }} utr\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} CRED\n    ON utr.T_D_MISSING_BANK_ACCOUNT_DIM_KEY = CRED.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} DEB\n    ON DEB.T_DIM_KEY = utr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n-- LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n--     ON utr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nWHERE utr.TRANSACTION_DIRECTION = 'INBOUND'\n    AND CRED.FINANCIAL_INSTITUTION_COUNTRY_CODE in ('{{country_code}}')\n    AND utr.transaction_type = 'RETURN'\n    AND utr.TRANSACTION_STATUS IN ('SETTLED', 'RETURNED')\n    AND utr.TRANSACTION_BANK_FAMILY = 'RCDT'\n    AND TIMESTAMP(utr.TRANSACTION_BOOKING_DATE_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n    AND TIMESTAMP(utr.TRANSACTION_BOOKING_DATE_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "F_UNMATCHED_ACCOUNT_TRANSACTIONS"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "F_UNMATCHED_ACCOUNT_TRANSACTIONS"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.F_UNMATCHED_ACCOUNT_TRANSACTIONS"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals.sql", "original_file_path": "models/PST3/mart/FR/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals.sql", "unique_id": "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "fqn": ["project_dbt", "PST3", "mart", "FR", "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals"], "alias": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "checksum": {"name": "sha256", "checksum": "f321437c037ec11c86c373d050191ee342d80a7ed1d28a7f8191d337bf1b450c"}, "config": {"enabled": true, "alias": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "daily"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "tags": ["pst3", "daily"]}, "created_at": 1728271772.359207, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals`", "raw_code": "{% set period_time = period_calculate(time = 'daily', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        SELECT\n    payee_psp_country,\n    outbound_ibis_payments_trx_count,\n    outbound_ibis_payments_amount_sum_in_EUR,\n    SUM(outbound_ibis_payments_trx_count) OVER(PARTITION BY period) AS total_outbound_ibis_payments_trx_count,\n    SUM(outbound_ibis_payments_amount_sum_in_EUR) OVER(PARTITION BY period) AS total_outbound_ibis_payments_amount_sum_in_EUR,\n    load_timestamp,\n    period\nFROM {{ ref('CT1_agMoyPaiTypeOpeCanalTransactZoneGeo') }}", "language": "sql", "refs": [{"name": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI/C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI.sql", "original_file_path": "models/PST3/mart/FR/C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI/C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI.sql", "unique_id": "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "fqn": ["project_dbt", "PST3", "mart", "FR", "C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI"], "alias": "C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "checksum": {"name": "sha256", "checksum": "34b8ad08d59012df36fd4acfbeaad24edcdd3468ce0b06a80eaa1329dab9b4d6"}, "config": {"enabled": true, "alias": "C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI/C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3603554, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        WITH country_codes AS (\nSELECT *\nFROM UNNEST (['FR','DE','AT','BE','BG','CY','HR','DK','ES','EE','FI','GR','HU','IE','IS','IT','LV','LI','LT','LU','MT','NO','NL','PL','PT','CZ','RO','SK','SI','SE']) as code\n),\nDM as (\n  SELECT\n    cred.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payee_psp_country,\n    COUNT(*) AS outbound_ibis_payments_trx_count,\n    ROUND(COALESCE(SUM(ftr.TRANSACTION_AMOUNT), 0.00), 2) AS outbound_ibis_payments_amount_sum_in_EUR,\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\n  LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n    ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n    ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n    ON cred.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n    ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\n  WHERE ftr.TRANSACTION_DIRECTION = 'OUTBOUND'\n    AND deb.FINANCIAL_INSTITUTION_COUNTRY_CODE =  '{{country_code}}'\n    AND iacc.ACCOUNT_TYPE = 'PAYMENT'\n    AND ftr.transaction_type  = 'REGULAR'\n    AND dtr.TRANSACTION_STATUS  IN ('SETTLED', 'RETURNED')\n    AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND ftr.TRANSACTION_CHANNEL <> 'CARDS'\n    AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  GROUP BY cred.FINANCIAL_INSTITUTION_COUNTRY_CODE\n  ORDER BY payee_psp_country ASC\n)\nSELECT\n   c.code,\n  DM.*,\n  (SELECT SUM(outbound_ibis_payments_trx_count) FROM DM WHERE payee_psp_country != 'FR') as total_trx_count_without_FR,\n  (SELECT SUM(outbound_ibis_payments_amount_sum_in_EUR) FROM DM WHERE payee_psp_country != 'FR') as total_amount_sum_without_FR,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM DM\nFULL OUTER JOIN country_codes as c on c.code = DM.payee_psp_country", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU/C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU.sql", "original_file_path": "models/PST3/mart/FR/C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU/C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU.sql", "unique_id": "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "fqn": ["project_dbt", "PST3", "mart", "FR", "C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU"], "alias": "C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "checksum": {"name": "sha256", "checksum": "3c10d676f9c84ee9486cfac3ac0faf7df4497cb8f93054d80ef1bb81341dd668"}, "config": {"enabled": true, "alias": "C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU/C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3614807, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        WITH country_codes AS (\nSELECT *\nFROM UNNEST (['FR','DE','AT','BE','BG','CY','HR','DK','ES','EE','FI','GR','HU','IE','IS','IT','LV','LI','LT','LU','MT','NO','NL','PL','PT','CZ','RO','SK','SI','SE']) as code\n),\nDM as (\nSELECT\n  deb.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payer_psp_country,\n  COUNT(*) AS inbound_ibis_payments_trx_count,\n  ROUND(COALESCE(SUM(ftr.TRANSACTION_AMOUNT), 0.00), 2) AS inbound_ibis_payments_amount_sum_in_EUR,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n  ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\n  AND iacc.ACCOUNT_TYPE = 'PAYMENT'\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n  ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = cred.T_DIM_KEY\n  AND cred.FINANCIAL_INSTITUTION_COUNTRY_CODE =  '{{country_code}}'\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n  ON deb.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\n  AND dtr.TRANSACTION_STATUS  IN ('SETTLED', 'RETURNED')\n  AND cred.FINANCIAL_INSTITUTION_COUNTRY_CODE =  '{{country_code}}'\n  AND ftr.TRANSACTION_BANK_FAMILY = 'RCDT'\n  AND iacc.ACCOUNT_TYPE = 'PAYMENT'\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nWHERE ftr.TRANSACTION_DIRECTION = 'INBOUND'\n  AND ftr.transaction_type  = 'REGULAR'\nGROUP BY deb.FINANCIAL_INSTITUTION_COUNTRY_CODE\nORDER BY payer_psp_country ASC\n)\nSELECT\n   c.code,\n  DM.*,\n  (SELECT SUM(inbound_ibis_payments_trx_count) FROM DM WHERE payer_psp_country != 'FR') as total_trx_count_without_FR,\n  (SELECT SUM(inbound_ibis_payments_amount_sum_in_EUR) FROM DM WHERE payer_psp_country != 'FR') as total_amount_sum_without_FR,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM DM\nFULL OUTER JOIN country_codes as c on c.code = DM.payer_psp_country", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE.sql", "original_file_path": "models/PST3/mart/FR/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE.sql", "unique_id": "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "fqn": ["project_dbt", "PST3", "mart", "FR", "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE"], "alias": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "checksum": {"name": "sha256", "checksum": "27d1522680b27529100970b87c3a151efa70dd650bf0895834297f6548cbcd43"}, "config": {"enabled": true, "alias": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3627162, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        WITH country_codes AS (\nSELECT *\nFROM UNNEST (['FR','DE','AT','BE','BG','CY','HR','DK','ES','EE','FI','GR','HU','IE','IS','IT','LV','LI','LT','LU','MT','NO','NL','PL','PT','CZ','RO','SK','SI','SE']) as code\n),\n  DM as (\n  SELECT\n    cred.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payee_psp_country,\n    COUNT(*) AS outbound_ibis_payments_trx_count,\n    ROUND(COALESCE(SUM(ftr.TRANSACTION_AMOUNT), 0.00), 2) AS outbound_ibis_payments_amount_sum_in_EUR,\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\n  JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n    ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n    ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n    ON cred.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n    ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\n    AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    AND dtr.TRANSACTION_STATUS  IN ('SETTLED', 'RETURNED')\n    AND deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n    AND iacc.ACCOUNT_TYPE = 'PAYMENT'\n  WHERE ftr.TRANSACTION_DIRECTION = 'OUTBOUND'\n    AND ftr.transaction_type  = 'REGULAR'\n    AND ftr.TRANSACTION_CHANNEL NOT IN ('DASHBOARD','ADMIN', 'OTHER', 'CARDS')\n    AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n  GROUP BY 1\n  ORDER BY 1\n)\nSELECT\n  c.code,\n  DM.*,\n  (SELECT SUM(outbound_ibis_payments_trx_count) FROM DM WHERE payee_psp_country != 'FR') as total_trx_count_without_FR,\n  (SELECT SUM(outbound_ibis_payments_amount_sum_in_EUR) FROM DM WHERE payee_psp_country != 'FR') as total_amount_sum_without_FR,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM DM\nFULL OUTER JOIN country_codes as c on c.code = DM.payee_psp_country", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG.sql", "original_file_path": "models/PST3/mart/FR/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG.sql", "unique_id": "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "fqn": ["project_dbt", "PST3", "mart", "FR", "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG"], "alias": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "checksum": {"name": "sha256", "checksum": "cdcc6e81f7c4e23a551a8173279da432a98d3ca8bb3bce3cd4460b81b5faeb8b"}, "config": {"enabled": true, "alias": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3638783, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        SELECT\n     COUNT(distinct c.consent_iban) AS COUNT,\n     CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n     \"{{period}}\"  AS Period,\nFROM\n     {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} c\n     INNER JOIN {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} cc\n          ON c.T_DIM_KEY = cc.T_DIM_KEY\n     INNER JOIN {{ source('source_dwh_STRP','D_ASPSP_TPP') }} t\n          ON c.T_D_ASPSP_TPP_DIM_KEY = t.T_DIM_KEY\nWHERE\n     c.CONSENT_STATUS = 'VALID'\n     AND LEFT(c.consent_iban, 2) = '{{country_code}}'\n     AND c.CONSENT_TRANSACTION_ACCESS_ALLOWED IS TRUE\n     AND c.CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n     AND c.CONSENT_EXPIRED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n     --AND  t.T_SOURCE_PK_ID <> '1'\n     AND t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_TPP"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo.sql", "original_file_path": "models/PST3/mart/FR/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo.sql", "unique_id": "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "fqn": ["project_dbt", "PST3", "mart", "FR", "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo"], "alias": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "checksum": {"name": "sha256", "checksum": "94e302a49da48a07bae8ba0a6721e3a655d8f2d17a4616dae36fe5d52a692e10"}, "config": {"enabled": true, "alias": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo/CT1_agMoyPaiTypeOpeCanalTransactZoneGeo.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.364766, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`CT1_agMoyPaiTypeOpeCanalTransactZoneGeo`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        SELECT\n    cred.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payee_psp_country,\n    COUNT(*) AS outbound_ibis_payments_trx_count,\n    round(SUM(ftr.TRANSACTION_AMOUNT)) AS outbound_ibis_payments_amount_sum_in_EUR,\n    CURRENT_TIMESTAMP AS Load_timestamp,\n    \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n  ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\n  AND iacc.ACCOUNT_TYPE = \"PAYMENT\"\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n  ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n  ON cred.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nWHERE ftr.TRANSACTION_DIRECTION = 'OUTBOUND'\n  AND deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND iacc.ACCOUNT_TYPE = \"PAYMENT\"\n  AND ftr.transaction_type  = 'REGULAR'\n  AND ftr.TRANSACTION_CHANNEL not IN ('DASHBOARD', 'OTHER', 'CARDS')\n  AND dtr.TRANSACTION_STATUS  IN ('SETTLED', 'RETURNED')\n  AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\ngroup by cred.FINANCIAL_INSTITUTION_COUNTRY_CODE\norder by payee_psp_country ASC", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo/C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo.sql", "original_file_path": "models/PST3/mart/FR/C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo/C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo.sql", "unique_id": "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "fqn": ["project_dbt", "PST3", "mart", "FR", "C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo"], "alias": "C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "checksum": {"name": "sha256", "checksum": "b5f71ac2f8348ae710af3ce5c614f418d59dfaee2c5745a1b748482470e4da80"}, "config": {"enabled": true, "alias": "C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo/C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3658917, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        SELECT\n     'Banqup applications' as TYPEOFOAPPLICATION,\n     IF(IT.INBOUND_TRANSACTION_CREDITOR_COUNTRY = 'NA', credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE, IT.INBOUND_TRANSACTION_CREDITOR_COUNTRY) AS COUNTERPARTY_COUNTRY,\n     IT.INBOUND_TRANSACTION_CURRENCY_CODE  AS CURRENCY,\n     COUNT(*)  AS SUCCESS_TRX_COUNT,\n     SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS SUCCESS_TRX_SUMMED_VALUE,\n     CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n     \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n     ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n     ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n     ON IP.T_DIM_KEY=IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n     ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n     ON IP.T_DIM_KEY=PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n     ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS debacc\n     ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n     ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\nWHERE FI.FINANCIAL_INSTITUTION_CODE  <> 'IBIS'\n     AND PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n     AND APP.APPLICATION_NAME = 'PAY-PXG-JEFACTURE'\n     AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'BE'\n          AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER ,5,3) = '504'\n          )\n     AND DIT.INBOUND_TRANSACTION_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n     AND DIT.INBOUND_TRANSACTION_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n\nGROUP BY 1, 2, 3\n\nUNION ALL\n\nSELECT\n     'OCS application' AS TYPEOFOAPPLICATION,\n     IF(IT.INBOUND_TRANSACTION_CREDITOR_COUNTRY = 'NA', credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE, IT.INBOUND_TRANSACTION_CREDITOR_COUNTRY) AS COUNTERPARTY_COUNTRY,\n     IT.INBOUND_TRANSACTION_CURRENCY_CODE AS CURRENCY,\n     COUNT(*)  AS SUCCESS_TRX_COUNT,\n     SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS SUCCESS_TRX_SUMMED_VALUE,\n     CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n     \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n     ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n     ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n     ON IP.T_DIM_KEY = IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n     ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n     ON IP.T_DIM_KEY = PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n     ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} debacc\n     ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n     ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\n\nWHERE\nPI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\nAND APP.APPLICATION_NAME  = 'PAY-PXG-OCS'\nAND FI.FINANCIAL_INSTITUTION_CODE  <> 'IBIS'\nAND (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\nAND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,5) = '27933')\nAND DIT.INBOUND_TRANSACTION_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\nAND DIT.INBOUND_TRANSACTION_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n\nGROUP BY 1, 2, 3\nORDER BY 4 DESC", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP.sql", "original_file_path": "models/PST3/mart/FR/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP.sql", "unique_id": "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "fqn": ["project_dbt", "PST3", "mart", "FR", "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP"], "alias": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "checksum": {"name": "sha256", "checksum": "7c0c7b59629655f129ebc6d931713a69a30247163805b797da6a3b3162f90e99"}, "config": {"enabled": true, "alias": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP/CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3671045, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        SELECT\n     d_access_consent_info.USER_EMAIL AS user_token,\n     COUNT(DISTINCT(d_access_consent_info.USER_EMAIL)) OVER(PARTITION BY d_access_consent_info.USER_EMAIL) unique_users_count_in_period,\n     COUNT(DISTINCT(d_access_consent_info.T_BUS_KEY)) OVER(PARTITION BY d_access_consent_info.T_BUS_KEY) number_of_consents,\n     CURRENT_TIMESTAMP AS Load_timestamp,\n     \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_DECRYPTED') }} AS d_pxg_payment_account\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS d_financial_platforms\n     ON d_pxg_payment_account.T_D_FINANCIAL_PLATFORM_DIM_KEY=d_financial_platforms.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS d_financial_institutions\n     ON d_financial_institutions.T_DIM_KEY = d_financial_platforms.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_DECRYPTED') }} AS d_access_consent_info\n     ON d_pxg_payment_account.T_DIM_KEY=d_access_consent_info.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS d_contract_info\n     ON d_pxg_payment_account.T_DIM_KEY=d_contract_info.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS d_application_account_info\n     ON d_contract_info.T_D_APPLICATION_ACCOUNT_DIM_KEY=d_application_account_info.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS d_applications\n     ON d_application_account_info.T_D_APPLICATION_DIM_KEY = d_applications.T_DIM_KEY\nWHERE  (\n     d_applications.APPLICATION_NAME  = 'PAY-PXG-JEFACTURE'\n     -- AND d_application_account_info.T_SOURCE_PK_ID not in ('8856', '4545', '4571', '5170', '5188', '5244', '5275', '5301',\n     --                                                        '5343', '5411', '5422', '5443', '5495', '5511', '5560', '5593',\n     --                                                        '5628', '5651', '5652', '5653', '5654', '5655', '5657', '5658',\n     --                                                        '5659', '5660', '5661', '5662', '6315', '6354', '6745', '6922',\n     --                                                        '6960', '7175', '7222', '7386', '7428', '7582', '7666', '7753', '7768'\n     --                                                        )\n     )\n     AND d_financial_institutions.FINANCIAL_INSTITUTION_CODE  <> 'IBIS'\n     AND\n     (\n          (\n          d_access_consent_info.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n          AND d_access_consent_info.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n          )\n     OR\n          (\n          d_access_consent_info.ACCESS_CONSENT_STATUS_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n          AND d_access_consent_info.ACCESS_CONSENT_STATUS_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n          )\n     )", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE.sql", "original_file_path": "models/PST3/mart/FR/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE.sql", "unique_id": "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "fqn": ["project_dbt", "PST3", "mart", "FR", "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE"], "alias": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "checksum": {"name": "sha256", "checksum": "41b835cf30603175daad6c1145df647eb406d93404aed1c34c9b9b9f4a538c7f"}, "config": {"enabled": true, "alias": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE/C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3682308, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        WITH country_codes AS (\nSELECT *\nFROM UNNEST (['FR','DE','AT','BE','BG','CY','HR','DK','ES','EE','FI','GR','HU','IE','IS','IT','LV','LI','LT','LU','MT','NO','NL','PL','PT','CZ','RO','SK','SI','SE']) as code\n),\nDM as (\n  SELECT\n    cred.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payee_psp_country,\n    COUNT(*) AS outbound_ibis_payments_trx_count,\n    ROUND(COALESCE(SUM(ftr.TRANSACTION_AMOUNT), 0.00), 2) AS outbound_ibis_payments_amount_sum_in_EUR,\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\n  JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n    ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n    ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n    ON cred.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n    ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\n    AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    AND dtr.TRANSACTION_STATUS  IN ('SETTLED', 'RETURNED')\n    AND deb.FINANCIAL_INSTITUTION_COUNTRY_CODE =  '{{country_code}}'\n    AND iacc.ACCOUNT_TYPE = 'PAYMENT'\n  WHERE ftr.TRANSACTION_DIRECTION = 'OUTBOUND'\n    AND ftr.transaction_type  = 'REGULAR'\n    AND ftr.TRANSACTION_CHANNEL IN ('DASHBOARD','ADMIN', 'OTHER', 'CARDS')\n    AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n\n  GROUP BY 1\n  ORDER BY 1\n)\nSELECT\n  c.code,\n  DM.*,\n  (SELECT SUM(outbound_ibis_payments_trx_count) FROM DM WHERE payee_psp_country != 'FR') as total_trx_count_without_FR,\n  (SELECT SUM(outbound_ibis_payments_amount_sum_in_EUR) FROM DM WHERE payee_psp_country != 'FR') as total_amount_sum_without_FR,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM DM\nFULL OUTER JOIN country_codes as c on c.code = DM.payee_psp_country", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Banque_en_ligne": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "Banque_en_ligne", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/Banque_en_ligne/Banque_en_ligne.sql", "original_file_path": "models/PST3/mart/FR/Banque_en_ligne/Banque_en_ligne.sql", "unique_id": "model.project_dbt.Banque_en_ligne", "fqn": ["project_dbt", "PST3", "mart", "FR", "Banque_en_ligne", "Banque_en_ligne"], "alias": "Banque_en_ligne", "checksum": {"name": "sha256", "checksum": "b65a84e54798c3f5af31e288279c76c10770ac81cdf1191e71546754bb7d5816"}, "config": {"enabled": true, "alias": "Banque_en_ligne", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/Banque_en_ligne/Banque_en_ligne.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "Banque_en_ligne", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3693461, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`Banque_en_ligne`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        SELECT\n  COUNT( distinct ibis.ACCOUNT_MASTER_DATA_ID) AS count,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS bank\n  ON bank.T_DIM_KEY = ibis.T_D_BANK_ACCOUNT_DIM_KEY\nWHERE ibis.ACCOUNT_TYPE = \"PAYMENT\"\nAND (ibis.ACCOUNT_STATUS = 'OPEN'\n  OR\n    (\n      ibis.ACCOUNT_STATUS = 'CLOSED'\n      AND ibis.ACCOUNT_UPDATED_AT >= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    )\n)\n-- as timezone('UTC', to_timestamp('2023-06-30 UTC+02', 'YYYY-MM-DD \"UTC\"TZH') + interval '1 day')))\nAND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\nAND ibis.ACCOUNT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n-- as timezone('UTC', to_timestamp('2023-06-30 UTC+02', 'YYYY-MM-DD \"UTC\"TZH') + interval '1 day')", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cross_join": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "Cross_join", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/Cross_join/Cross_join.sql", "original_file_path": "models/PST3/mart/FR/Cross_join/Cross_join.sql", "unique_id": "model.project_dbt.Cross_join", "fqn": ["project_dbt", "PST3", "mart", "FR", "Cross_join", "Cross_join"], "alias": "Cross_join", "checksum": {"name": "sha256", "checksum": "23d5afeae50c5b5f3a15a9f163785f85e3114ce1c6709effdce7ee576e55e663"}, "config": {"enabled": true, "alias": "Cross_join", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "daily"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/Cross_join/Cross_join.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "Cross_join", "tags": ["pst3", "daily"]}, "created_at": 1728271772.370458, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`Cross_join`", "raw_code": "{% set period_time = period_calculate(time = 'daily', selection_date=\"today\", prefix='', suffix='' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n        WITH type AS (\n  SELECT\n    'agMoyPaiTypeOpeCanalTransactZoneGeo' AS axe,\n    'VIREMENT' AS moyenPaiementtype,\n    'VIR_EMIS' AS Operationtype,\n    'ELECTRONIQUE' AS canaltype,\n    'DISTANCE' AS typeTransaction,\n    'axe1'  AS alias\n  UNION all\n  SELECT 'agMoyPaiTypeOpeCanalTransactZoneGeo', 'VIREMENT', 'VIR_EMIS', 'ELECTRONIQUE', 'PROXIMITE', 'axe1'\n  UNION all\n  SELECT 'agMoyPaiTypeOpeCanalTransactZoneGeoMcc', 'CARTE', 'CARTE_EMIS', 'ELECTRONIQUE', 'DISTANCE', 'axe2'\n  UNION all\n  SELECT 'agMoyPaiTypeOpeZoneGeo', 'PRELEVEM', 'PRELEVEM_EMIS', 'NA', 'NA', 'axe3'\n  UNION all\n  SELECT 'agMoyPaiTypeOpeZoneGeo', 'MON_ELEC', 'PAIEMT_ME_EMIS', 'NA', 'NA', 'axe3'\n  UNION all\n  SELECT 'agMoyPaiTypeOpeZoneGeo', 'CHEQ', 'CHEQ_RECU', 'NA', 'NA', 'axe3'\n),\nfinal as (\n  SELECT\n    axe,\n    alias,\n    moyenPaiementtype,\n    Operationtype,\n    canaltype,\n    typeTransaction,\n    ct.code as country_code,\n    mcc.Coded as MCC_code\n  FROM {{ source('source_dm_PPST_FR','COUNTRIES') }} ct\n  cross join type\n  cross join {{ source('source_dm_PPST_FR','MCC_CODES') }} mcc\n  where type.axe = 'agMoyPaiTypeOpeCanalTransactZoneGeoMcc' and typeTransaction = 'DISTANCE'\n  UNION ALL\n  SELECT\n    axe,\n    alias,\n    moyenPaiementtype,\n    Operationtype,\n    canaltype,\n    typeTransaction,\n    ct.code as country_code,\n    NULL as MCC_code,\n  FROM {{ source('source_dm_PPST_FR','COUNTRIES') }} ct\n  cross join type\n  cross join {{ source('source_dm_PPST_FR','MCC_CODES') }} mcc\n  where type.axe <> 'agMoyPaiTypeOpeCanalTransactZoneGeoMcc'\n)\nSELECT\naxe,\nalias,\nmoyenPaiementtype,\nOperationtype,\ncanaltype,\ntypeTransaction,\n'5493004MX17L5E8MUB29' AS LEI,\npayee_psp_country,\nCOALESCE(outbound_ibis_payments_trx_count, 0) AS outbound_ibis_payments_trx_count,\nCOALESCE(outbound_ibis_payments_amount_sum_in_EUR, 0) AS outbound_ibis_payments_amount_sum_in_EUR,\nCOALESCE(total_outbound_ibis_payments_trx_count, 0) AS total_outbound_ibis_payments_trx_count,\nCOALESCE(total_outbound_ibis_payments_amount_sum_in_EUR, 0) AS total_outbound_ibis_payments_amount_sum_in_EUR,\nload_timestamp,\nperiod,\nFROM final\nLEFT JOIN {{ ref('CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals') }}\nON payee_psp_country = country_code", "language": "sql", "refs": [{"name": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "package": null, "version": null}], "sources": [["source_dm_PPST_FR", "COUNTRIES"], ["source_dm_PPST_FR", "MCC_CODES"], ["source_dm_PPST_FR", "COUNTRIES"], ["source_dm_PPST_FR", "MCC_CODES"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dm_PPST_FR.COUNTRIES", "source.project_dbt.source_dm_PPST_FR.MCC_CODES", "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "C7_agMoyPaiTypeOpeSystZoneGeo", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/C7_agMoyPaiTypeOpeSystZoneGeo/C7_agMoyPaiTypeOpeSystZoneGeo.sql", "original_file_path": "models/PST3/mart/FR/C7_agMoyPaiTypeOpeSystZoneGeo/C7_agMoyPaiTypeOpeSystZoneGeo.sql", "unique_id": "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo", "fqn": ["project_dbt", "PST3", "mart", "FR", "C7_agMoyPaiTypeOpeSystZoneGeo", "C7_agMoyPaiTypeOpeSystZoneGeo"], "alias": "C7_agMoyPaiTypeOpeSystZoneGeo", "checksum": {"name": "sha256", "checksum": "c2352deec6e1021c3ca11445571d78ef636b3e6db58013547144c8779d261404"}, "config": {"enabled": true, "alias": "C7_agMoyPaiTypeOpeSystZoneGeo", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/C7_agMoyPaiTypeOpeSystZoneGeo/C7_agMoyPaiTypeOpeSystZoneGeo.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "C7_agMoyPaiTypeOpeSystZoneGeo", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3716652, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`C7_agMoyPaiTypeOpeSystZoneGeo`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        SELECT\n  case WHEN  SUBSTR(deb.BANK_ACCOUNT_NUMBER,5,5) = SUBSTR(cred.BANK_ACCOUNT_NUMBER,5,5) THEN 'ON-US'\n    WHEN SUBSTR(deb.BANK_ACCOUNT_NUMBER,5,5) <> SUBSTR(cred.BANK_ACCOUNT_NUMBER,5,5) THEN'OFF-US'\n    ELSE 'not_mapped'\n    END AS typeSysteme,\n  cred.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payee_psp_country,\n  COUNT(*) AS outbound_ibis_payments_trx_count,\n  ROUND(COALESCE(SUM(ftr.TRANSACTION_AMOUNT), 0.00), 2) AS outbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n  ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n  ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n  ON cred.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nWHERE ftr.TRANSACTION_DIRECTION = 'OUTBOUND'\n  AND deb.FINANCIAL_INSTITUTION_COUNTRY_CODE =  '{{country_code}}'\n  AND iacc.ACCOUNT_TYPE = 'PAYMENT'\n  AND ftr.transaction_type  = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS  IN ('SETTLED', 'RETURNED')\n  AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND ftr.TRANSACTION_CHANNEL <> 'CARDS'\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2\nORDER BY 1,2", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_FR", "name": "C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/FR/C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo/C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo.sql", "original_file_path": "models/PST3/mart/FR/C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo/C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo.sql", "unique_id": "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "fqn": ["project_dbt", "PST3", "mart", "FR", "C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo"], "alias": "C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "checksum": {"name": "sha256", "checksum": "ef6739f3f8dd37a87fd52254d168d7b5ce5af6faaf717c84f5033a9602d4ba45"}, "config": {"enabled": true, "alias": "C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "schema": "dm_pst3_FR", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/FR/C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo/C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_FR", "alias": "C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.372767, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_FR`.`C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'FR' -%}\n\n\n        WITH country_codes AS (\nSELECT *\nFROM UNNEST (['FR','DE','AT','BE','BG','CY','HR','DK','ES','EE','FI','GR','HU','IE','IS','IT','LV','LI','LT','LU','MT','NO','NL','PL','PT','CZ','RO','SK','SI','SE']) as code\n),\nDM as (\nSELECT\n  case WHEN ftr.TRANSACTION_CHANNEL IN ('TPP') THEN 'SCA'\n    WHEN ftr.TRANSACTION_CHANNEL IN ('OCS') AND ftr.TRANSACTION_CREDITOR_REFERENCE_VALUE LIKE 'REF.%/%/%' THEN 'Trusted Beneficiaries exemption'\n    WHEN ftr.TRANSACTION_CHANNEL IN ('OCS') AND ftr.TRANSACTION_END_TO_END_ID LIKE 'CAF%' THEN 'SCA'\n    WHEN ftr.TRANSACTION_CHANNEL = 'H2H' THEN 'secure corp process exemption'\n    WHEN ftr.TRANSACTION_CHANNEL IS NULL THEN 'not applicable - return'\n    ELSE 'check the query'\n    END SCAIndicator,\n  cred.FINANCIAL_INSTITUTION_COUNTRY_CODE AS payee_psp_country,\n  COUNT(*) AS outbound_ibis_payments_trx_count,\n  ROUND(COALESCE(SUM(ftr.TRANSACTION_AMOUNT), 0.00), 2) AS outbound_ibis_payments_amount_sum_in_EUR,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} ftr\nJOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n  ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\n  AND iacc.ACCOUNT_TYPE = 'PAYMENT'\nJOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} deb\n  ON iacc.T_D_BANK_ACCOUNT_DIM_KEY = deb.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} cred\n  ON cred.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} dtr\n  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\n  AND dtr.TRANSACTION_STATUS  IN ('SETTLED', 'RETURNED')\n  AND iacc.ACCOUNT_TYPE = 'PAYMENT'\n  AND deb.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\nWHERE ftr.TRANSACTION_DIRECTION = 'OUTBOUND'\n  AND ftr.transaction_type  = 'REGULAR'\n  AND ftr.TRANSACTION_CHANNEL NOT IN ('DASHBOARD','ADMIN', 'OTHER', 'CARDS')\n  AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND TIMESTAMP(ftr.TRANSACTION_DATE_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND TIMESTAMP(ftr.TRANSACTION_DATE_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2\nORDER BY 1,2\n)\nSELECT\n  c.code,\n  DM.*,\n  (SELECT SUM(outbound_ibis_payments_trx_count) FROM DM WHERE payee_psp_country != 'FR') as total_trx_count_without_FR,\n  (SELECT SUM(outbound_ibis_payments_amount_sum_in_EUR) FROM DM WHERE payee_psp_country != 'FR') as total_amount_sum_without_FR,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM DM\nFULL OUTER JOIN country_codes as c on c.code = DM.payee_psp_country", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V1230_number_of_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V1230_number_of_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V1230_number_of_accounts/V1230_number_of_accounts.sql", "original_file_path": "models/PST3/mart/LU/V1230_number_of_accounts/V1230_number_of_accounts.sql", "unique_id": "model.project_dbt.V1230_number_of_accounts", "fqn": ["project_dbt", "PST3", "mart", "LU", "V1230_number_of_accounts", "V1230_number_of_accounts"], "alias": "V1230_number_of_accounts", "checksum": {"name": "sha256", "checksum": "9e33b6da67d342d943c05ec74ab8bd70ae11655450251f0a203bb01a57dc2836"}, "config": {"enabled": true, "alias": "V1230_number_of_accounts", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V1230_number_of_accounts/V1230_number_of_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V1230_number_of_accounts", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3740995, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V1230_number_of_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        WITH obsolete_and_active_consents_count_in_reporting_period AS (\n   SELECT\n     'AISP' as PSPType,\n     fi.FINANCIAL_INSTITUTION_COUNTRY as Countryofcustomerresidence,\n     'VOLU' as Metric,\n     ac.USER_TOKEN,\n     COUNT(*) AS number_of_consents,\n   FROM  {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO') }} AS ac\n   inner JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_CURRENT') }} AS pa\n     ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n    inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n     ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\n   inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n   ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n   inner JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n     ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n   inner JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n     ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\n   inner JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n     ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\n   WHERE\n       a.APPLICATION_NAME in ('PAY-PXG-BANQUPLU')\n       AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS' -- consents on UPP's own accounts are not counted\n       AND (\n           (ac.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n               AND ac.ACCESS_CONSENT_CREATED_AT < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n           )\n           OR (ac.ACCESS_CONSENT_STATUS_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n               AND ac.ACCESS_CONSENT_STATUS_AT < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n               )\n       )\n   GROUP BY\n   1,2,3,4\n   )\n   SELECT\n     'AISP' as PSPType,\n     Countryofcustomerresidence,\n     'VOLU' as Metric,\n     COUNT(DISTINCT USER_TOKEN) AS unique_users_count_in_period,\n     CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n     \"{{period}}\"  AS Period,\n   FROM obsolete_and_active_consents_count_in_reporting_period\n   group by 1,2,3", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V130_direct_debits_reporting_as_creditors_PSP", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V130_direct_debits_reporting_as_creditors_PSP/V130_direct_debits_reporting_as_creditors_PSP.sql", "original_file_path": "models/PST3/mart/LU/V130_direct_debits_reporting_as_creditors_PSP/V130_direct_debits_reporting_as_creditors_PSP.sql", "unique_id": "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP", "fqn": ["project_dbt", "PST3", "mart", "LU", "V130_direct_debits_reporting_as_creditors_PSP", "V130_direct_debits_reporting_as_creditors_PSP"], "alias": "V130_direct_debits_reporting_as_creditors_PSP", "checksum": {"name": "sha256", "checksum": "86c10fcdecb318c45dfe6dbb252027035955bee63627897d08e9664f986d4e73"}, "config": {"enabled": true, "alias": "V130_direct_debits_reporting_as_creditors_PSP", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V130_direct_debits_reporting_as_creditors_PSP/V130_direct_debits_reporting_as_creditors_PSP.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V130_direct_debits_reporting_as_creditors_PSP", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3753119, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V130_direct_debits_reporting_as_creditors_PSP`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'CORP' as customerCategory,\n  IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n  'SEPA' as paymentScheme,\n  \"Electronic file/batch\" AS initiationChannel ,\n  '' as consent,\n  '' as fraudType,\n  counter.FINANCIAL_INSTITUTION_COUNTRY_CODE AS debtorPspCountry,\n  ftr.transaction_currency as currency,\n  'VOLU' as metric,\n  count(*) as reportedAmount,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n    ftr.TRANSACTION_DIRECTION = \"INBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND ftr.TRANSACTION_BANK_FAMILY = 'RDDT'\n  AND ftr.TRANSACTION_BANK_SUBFAMILY in ('RCDD', 'PRDD', 'UPDD','RIMB')\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\ngroup by 1,2,3,4,5,6,7,8\n\nunion all\n\nSELECT\n  'CORP' as customerCategory,\n   IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n  'SEPA' as paymentScheme,\n  \"Electronic file/batch\" AS initiationChannel ,\n  '' as consent,\n  '' as fraudType,\n  counter.FINANCIAL_INSTITUTION_COUNTRY_CODE AS debtorPspCountry,\n  ftr.transaction_currency as currency,\n  'VALE' as metric,\n  SUM(ftr.TRANSACTION_AMOUNT)  as reportedAmount,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n    ftr.TRANSACTION_DIRECTION = \"INBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND  ftr.TRANSACTION_BANK_FAMILY = 'RDDT'\n  AND ftr.TRANSACTION_BANK_SUBFAMILY in ('RCDD', 'PRDD', 'UPDD','RIMB')\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\ngroup by 1,2,3,4,5,6,7,8\norder by 1,2,3,4,5,6,7,8", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V121_customer_credit_transfers_received": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V121_customer_credit_transfers_received", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V121_customer_credit_transfers_received/V121_customer_credit_transfers_received.sql", "original_file_path": "models/PST3/mart/LU/V121_customer_credit_transfers_received/V121_customer_credit_transfers_received.sql", "unique_id": "model.project_dbt.V121_customer_credit_transfers_received", "fqn": ["project_dbt", "PST3", "mart", "LU", "V121_customer_credit_transfers_received", "V121_customer_credit_transfers_received"], "alias": "V121_customer_credit_transfers_received", "checksum": {"name": "sha256", "checksum": "9e9e58092fb5aa6df06ce4af2ff7f445c2881f00f870136ec97134105c6302e5"}, "config": {"enabled": true, "alias": "V121_customer_credit_transfers_received", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V121_customer_credit_transfers_received/V121_customer_credit_transfers_received.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V121_customer_credit_transfers_received", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3764408, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V121_customer_credit_transfers_received`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'CORP' as customerCategory,\n  IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n  counter.FINANCIAL_INSTITUTION_COUNTRY_CODE AS debtorPspCountry,\n  ftr.transaction_currency as currency,\n  'VOLU' as metric,\n  count(*) as reportedamount,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n  ftr.TRANSACTION_DIRECTION = \"INBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND ftr.TRANSACTION_BANK_FAMILY = 'RCDT'\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\ngroup by 1,2,3,4\n\nUNION ALL\n\nSELECT\n    'CORP' as customerCategory,\n    IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n    counter.FINANCIAL_INSTITUTION_COUNTRY_CODE AS debtorPspCountry,\n    ftr.transaction_currency as currency,\n    'VALE' as metric,\n    sum (ftr.TRANSACTION_AMOUNT) as reportedAmount,\n    CURRENT_TIMESTAMP AS Load_timestamp,\n    \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n    ftr.TRANSACTION_DIRECTION = \"INBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND  ftr.TRANSACTION_BANK_FAMILY = 'RCDT'\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\ngroup by 1,2,3,4", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V1222_stock_of_accessed_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V1222_stock_of_accessed_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V1222_stock_of_accessed_accounts/V1222_stock_of_accessed_accounts.sql", "original_file_path": "models/PST3/mart/LU/V1222_stock_of_accessed_accounts/V1222_stock_of_accessed_accounts.sql", "unique_id": "model.project_dbt.V1222_stock_of_accessed_accounts", "fqn": ["project_dbt", "PST3", "mart", "LU", "V1222_stock_of_accessed_accounts", "V1222_stock_of_accessed_accounts"], "alias": "V1222_stock_of_accessed_accounts", "checksum": {"name": "sha256", "checksum": "58e542d06966cbf3ead0aeb04144b9d9a6fbe30f446f09c068831b695f5881b9"}, "config": {"enabled": true, "alias": "V1222_stock_of_accessed_accounts", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V1222_stock_of_accessed_accounts/V1222_stock_of_accessed_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V1222_stock_of_accessed_accounts", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.377565, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V1222_stock_of_accessed_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        WITH obsolete_and_active_consents_count_in_reporting_period AS (\n  SELECT\n    'AISP' as PSPType,\n    fi.FINANCIAL_INSTITUTION_COUNTRY as Countryofcustomerresidence,\n    'VOLU' as Metric,\n    ac.USER_TOKEN,\n    COUNT(*) AS number_of_consents,\n  FROM  {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO') }} AS ac\n  inner JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_CURRENT') }} AS pa\n    ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n   inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n    ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n  ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n    ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n    ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n    ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\n  WHERE\n      a.APPLICATION_NAME in ('PAY-PXG-BANQUPLU')\n      AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS' -- consents on UPP's own accounts are not counted\n      AND (\n            ac.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n            AND ac.ACCESS_CONSENT_CREATED_AT < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n          )\n          OR (\n            ac.ACCESS_CONSENT_STATUS_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n            AND ac.ACCESS_CONSENT_STATUS_AT < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n              )\n  GROUP BY\n  1,2,3,4\n  )\n  SELECT\n    'AISP' as PSPType,\n    Countryofcustomerresidence as  countryOfASPSP,\n    '{{country_code}}' as countryOfAISP,\n    'VOLU' as Metric,\n    COUNT(DISTINCT USER_TOKEN) AS unique_users_count_in_period,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n    \"{{period}}\"  AS Period,\n  FROM obsolete_and_active_consents_count_in_reporting_period\n  group by 1,2,3\nunion all\n\n\nSELECT\n  'APSP' as PSPType,\n  '{{country_code}}' countryOfASPSP,\n  left(t.SERVICE_PROVIDER_PSP_AUTHORITY_ID,2) countryOfAISP,\n  'VOLU' as Metric,\n  COUNT(*) AS Numberofaccounts,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nfrom {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} c\ninner join {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} cc on c.T_DIM_KEY = cc.T_DIM_KEY\ninner join {{ source('source_dwh_STRP','D_ASPSP_TPP') }} t on c.T_D_ASPSP_TPP_DIM_KEY = t.T_DIM_KEY\nwhere\n  c.CONSENT_STATUS = 'VALID'\n  and left(c.consent_iban,2) ='{{country_code}}'\n  and  t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'\n  and  c.CONSENT_CREATED_AT <  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  and c.CONSENT_EXPIRED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\ngroup by 1,2,3", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_TPP"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V140_SEPA_R_transactions": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V140_SEPA_R_transactions", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V140_SEPA_R_transactions/V140_SEPA_R_transactions.sql", "original_file_path": "models/PST3/mart/LU/V140_SEPA_R_transactions/V140_SEPA_R_transactions.sql", "unique_id": "model.project_dbt.V140_SEPA_R_transactions", "fqn": ["project_dbt", "PST3", "mart", "LU", "V140_SEPA_R_transactions", "V140_SEPA_R_transactions"], "alias": "V140_SEPA_R_transactions", "checksum": {"name": "sha256", "checksum": "2558ef2b6d8d4284a75842e4f313b5264add6e69876a0cc841169d27d065b4d0"}, "config": {"enabled": true, "alias": "V140_SEPA_R_transactions", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V140_SEPA_R_transactions/V140_SEPA_R_transactions.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V140_SEPA_R_transactions", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.378688, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V140_SEPA_R_transactions`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n     'SEPA' as paymentScheme,\n   case when (ftr.TRANSACTION_DIRECTION = \"INBOUND\") then 'CPSP'\n        when (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\") then 'DPSP'\n        end RoleofReporting,\n   'CORP' as customerCategory,\n   case when ( (ftr.TRANSACTION_DIRECTION = \"INBOUND\" and substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}')\n        or (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\" and substr(counter.BANK_ACCOUNT_NUMBER,5,3) = substr(bank.BANK_ACCOUNT_NUMBER,5,3) and bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}')) then 'ONUS'\n              else 'PSPN'\n         end settlementChannel,\n  'SEPA Credit Transfer' as R_TransactionType,\n     case when  (ftr.TRANSACTION_DIRECTION = \"INBOUND\") then counter.FINANCIAL_INSTITUTION_COUNTRY_CODE\n          when (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\") then BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE\n          end creditorPspCountry,\n     case when (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\") then BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE\n          when (ftr.TRANSACTION_DIRECTION = \"INBOUND\") then counter.FINANCIAL_INSTITUTION_COUNTRY_CODE\n          end debtorPspCountry,\n     ftr.transaction_currency as currency,\n     'VOLU' as metric,\n     count(*) as reportedAmount,\n     CURRENT_TIMESTAMP AS Load_timestamp,\n     \"{{period}}\"  AS Period,\n\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  WHERE\n      ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND ftr.TRANSACTION_TYPE IN ('RETURN')\n  AND dtr.TRANSACTION_STATUS IN ('SETTLED', 'RETURNED')\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\n  AND ( bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n      or  COUNTER.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}')\n  group by 1,2,3,4,5,6,7,8\n\n  union all\n\n  SELECT\n        'SEPA' as paymentScheme,\n      case when (ftr.TRANSACTION_DIRECTION = \"INBOUND\") then 'CPSP'\n            when (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\") then 'DPSP'\n            end RoleofReporting,\n      'CORP' as customerCategory,\n      case when ( (ftr.TRANSACTION_DIRECTION = \"INBOUND\" and substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}')\n            or (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\" and substr(counter.BANK_ACCOUNT_NUMBER,5,3) = substr(bank.BANK_ACCOUNT_NUMBER,5,3) and bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}')) then 'ONUS'\n                  else 'PSPN'\n            end settlementChannel,\n      'SEPA Credit Transfer' as R_TransactionType,\n        case when  (ftr.TRANSACTION_DIRECTION = \"INBOUND\") then counter.FINANCIAL_INSTITUTION_COUNTRY_CODE\n              when (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\") then BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE\n              end creditorPspCountry,\n        case when (ftr.TRANSACTION_DIRECTION = \"OUTBOUND\") then BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE\n              when (ftr.TRANSACTION_DIRECTION = \"INBOUND\") then counter.FINANCIAL_INSTITUTION_COUNTRY_CODE\n              end debtorPspCountry,\n        ftr.transaction_currency as currency,\n        'VALE' as metric,\n        SUM(ftr.TRANSACTION_AMOUNT) as reportedAmount,\n        CURRENT_TIMESTAMP AS Load_timestamp,\n        \"{{period}}\"  AS Period,\n\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  WHERE\n      ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND ftr.TRANSACTION_TYPE IN ('RETURN')\n  AND dtr.TRANSACTION_STATUS IN ('SETTLED', 'RETURNED')\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\n  AND ( bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n      or  COUNTER.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}')\n  group by 1,2,3,4,5,6,7,8\n  order by 1,2,3,4,5,6,7,8", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V1220_stock_of_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V1220_stock_of_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V1220_stock_of_accounts/V1220_stock_of_accounts.sql", "original_file_path": "models/PST3/mart/LU/V1220_stock_of_accounts/V1220_stock_of_accounts.sql", "unique_id": "model.project_dbt.V1220_stock_of_accounts", "fqn": ["project_dbt", "PST3", "mart", "LU", "V1220_stock_of_accounts", "V1220_stock_of_accounts"], "alias": "V1220_stock_of_accounts", "checksum": {"name": "sha256", "checksum": "c2bb7fa5d644b79b3ffb8092566571bd273c4a2f91cc29d21f93d8573f2bc1e0"}, "config": {"enabled": true, "alias": "V1220_stock_of_accounts", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V1220_stock_of_accounts/V1220_stock_of_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V1220_stock_of_accounts", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3801801, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V1220_stock_of_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'PMAC' as AccountType,\n  case\n    when ACCOUNT_USAGE in ('CARE','CARE_EXPENSE','ESTATE') then 'HSNP' -- Households and NPISHs\n    when ACCOUNT_USAGE is null then 'CORP' -- Non-financial corporations\n    else 'check the query'\n  end as Customer_Category,\n  'VOLU' as metric,\n  count(*) as reportedAmount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} IACC\nleft join {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} BANK on IACC.T_D_BANK_ACCOUNT_DIM_KEY = BANK.T_DIM_KEY\nwhere ACCOUNT_TYPE = 'PAYMENT'\nand BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\nand IACC.ACCOUNT_STATUS = 'OPEN'\nor (\n  IACC.ACCOUNT_STATUS = 'CLOSED'\n  and IACC.ACCOUNT_UPDATED_AT > TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  )\nand IACC.ACCOUNT_CREATED_AT < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\ngroup by 1,2", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V150_card_transactions_with_cards_issued_by resident_PSPs", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V150_card_transactions_with_cards_issued_by resident_PSPs/V150_card_transactions_with_cards_issued_by resident_PSPs.sql", "original_file_path": "models/PST3/mart/LU/V150_card_transactions_with_cards_issued_by resident_PSPs/V150_card_transactions_with_cards_issued_by resident_PSPs.sql", "unique_id": "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs", "fqn": ["project_dbt", "PST3", "mart", "LU", "V150_card_transactions_with_cards_issued_by resident_PSPs", "V150_card_transactions_with_cards_issued_by resident_PSPs"], "alias": "V150_card_transactions_with_cards_issued_by resident_PSPs", "checksum": {"name": "sha256", "checksum": "30f1544d5b83935d97dd96daabf989caacce27eaa186ee48bc2ecd4cbcb98a8d"}, "config": {"enabled": true, "alias": "V150_card_transactions_with_cards_issued_by resident_PSPs", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V150_card_transactions_with_cards_issued_by resident_PSPs/V150_card_transactions_with_cards_issued_by resident_PSPs.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V150_card_transactions_with_cards_issued_by resident_PSPs", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3813417, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V150_card_transactions_with_cards_issued_by resident_PSPs`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'DECA' as Payment_Card_Type,\n  'MSTR' as Payment_Card_Scheme,\n  case when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ATM' then 'TATM'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'OTHER' then 'EPOS'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' then 'ECOM'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('MOTO' , 'MAIL') then 'MOTO'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL IS NULL then 'OTHR'\n      else 'check the query'\n  end as Terminal_Type,\n  case when FCT.CARD_TRANSACTION_TYPE = 'PURCHASE' AND FCT.CARD_TRANSACTION_MMC_CODE = '6011' then 'CADV'  -- merchant_category_code is best way to identify cash advances\n      when FCT.CARD_TRANSACTION_TYPE  = 'PURCHASE' then 'SALE'\n      when FCT.CARD_TRANSACTION_TYPE  = 'ATM_CASH_WITHDRAWAL' then 'ATMW'\n      when FCT.CARD_TRANSACTION_TYPE  = 'REFUND' then 'RFND'\n      when FCT.CARD_TRANSACTION_TYPE  = 'ORIGINAL_CREDIT_TRANSFER' then 'OTHC'\n      else 'check the query'\n  end as Operation_Type,\n  case when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' then 'RMTR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') AND FCT.CARD_TRANSACTION_PAN_ENTRY_MODE = 'CHIP_CONTACTLESS' then 'CNFC'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') then 'CNTR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL is null AND FCT.CARD_TRANSACTION_PIN_PRESENT = false then 'CNTR'\n      else 'check the query' end as Initiation_Channel,\n  case when  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') then 'REM0'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' then 'REM1'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL IS NULL then 'REM0'\n      else 'check the query'\n    end as Initiation_subchannel,\n  case when  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'CHALLENGE' AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'SUCCESSFUL' then 'SCA1'\n      when  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'FRICTIONLESS' AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'EXEMPTED' then 'RLOW'\n      when  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_ACQUIRER_EXEMPTION = 'RECURRING_PAYMENT' then 'RETR'\nwhen FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'MERCHANT_INITIATED_TRANSACTION' then 'MITR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'TRANSACTION_RISK_ANALYSIS' then 'RTRA'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'SECURE_CORPORATE_PAYMENT' then 'SECO'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) then 'OTHR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') AND FCT.CARD_TRANSACTION_PAN_ENTRY_MODE = 'CHIP_CONTACTLESS' AND FCT.CARD_TRANSACTION_PIN_PRESENT = false then 'CLOW'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') AND FCT.CARD_TRANSACTION_PIN_PRESENT = true then 'SCA1'\n      when FCT.CARD_TRANSACTION_PIN_PRESENT = false then 'OTHR'\n      else 'check the query'\n    end as SCA,\n  'NOAP' as Fraud_Type,\n  left(FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE,2) as Country_of_Acquirer,\n  left(FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE,2) as Country_of_terminal,\n  'VOLU' as metric,\n  count(*) AS ReportedAmount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_DECRYPTED') }}  FCT\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD') }} C on FCT.T_D_CI_CARD_TRANSACTION_DIM_KEY = C.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_TRANSACTION') }} DCT on DCT.T_DIM_KEY = FCT.T_D_CI_CARD_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_EVENT') }} FTE on FTE.T_D_CI_CARD_TRANSACTION_DIM_KEY = DCT.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_TRANSACTION_EVENT') }} DTE on FTE.T_D_CI_CARD_TRANSACTION_EVENT_DIM_KEY = DTE.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_PRODUCT_DECRYPTED') }} CP on C.T_D_CI_CARD_PRODUCT_DIM_KEY = CP.T_DIM_KEY\nwhere FCT.CARD_TRANSACTION_CLEARED_AMOUNT > 0\nAND  CP.CARD_PRODUCT_CARD_COUNTRY = '{{country_code}}'\nAND  FTE.TRANSACTION_EVENT_USER_TRANSACTION_TIME >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\nAND  FTE.TRANSACTION_EVENT_USER_TRANSACTION_TIME < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2,3,4,5,6,7,8,9,10,11\n\nUNION ALL\n\nSELECT\n  'DECA' as Payment_Card_Type,\n  'MSTR' as Payment_Card_Scheme,\n  case when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ATM' then 'TATM'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'OTHER' then 'EPOS'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' then 'ECOM'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('MOTO' , 'MAIL') then 'MOTO'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL IS NULL then 'OTHR'\n      else 'check the query'\n  end as Terminal_Type,\n  case when FCT.CARD_TRANSACTION_TYPE = 'PURCHASE' AND FCT.CARD_TRANSACTION_MMC_CODE = '6011' then 'CADV'  -- merchant_category_code is best way to identify cash advances\n      when FCT.CARD_TRANSACTION_TYPE  = 'PURCHASE' then 'SALE'\n      when FCT.CARD_TRANSACTION_TYPE  = 'ATM_CASH_WITHDRAWAL' then 'ATMW'\n      when FCT.CARD_TRANSACTION_TYPE  = 'REFUND' then 'RFND'\n      when FCT.CARD_TRANSACTION_TYPE  = 'ORIGINAL_CREDIT_TRANSFER' then 'OTHC'\n      else 'check the query'\n  end as Operation_Type,\n  case when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' then 'RMTR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') AND FCT.CARD_TRANSACTION_PAN_ENTRY_MODE = 'CHIP_CONTACTLESS' then 'CNFC'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') then 'CNTR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL is null AND FCT.CARD_TRANSACTION_PIN_PRESENT = false then 'CNTR'\n      else 'check the query' end as Initiation_Channel,\n  case when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') then 'REM0'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' then 'REM1'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL IS NULL then 'REM0'\n      else 'check the query'\n    end as Initiation_subchannel,\n  case when  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'CHALLENGE' AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'SUCCESSFUL' then 'SCA1'\n      when  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'FRICTIONLESS' AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'EXEMPTED' then 'RLOW'\n      when  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_ACQUIRER_EXEMPTION = 'RECURRING_PAYMENT' then 'RETR'\nwhen FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'MERCHANT_INITIATED_TRANSACTION' then 'MITR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'TRANSACTION_RISK_ANALYSIS' then 'RTRA'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS = 'SECURE_CORPORATE_PAYMENT' then 'SECO'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'AND (FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS in ('UNAVAILABLE','THREEDS_REQUESTER_SCA_EXEMPTION') or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null) then 'OTHR'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') AND FCT.CARD_TRANSACTION_PAN_ENTRY_MODE = 'CHIP_CONTACTLESS' AND FCT.CARD_TRANSACTION_PIN_PRESENT = false then 'CLOW'\n      when FCT.CARD_TRANSACTION_PAYMENT_CHANNEL in ('OTHER','ATM') AND FCT.CARD_TRANSACTION_PIN_PRESENT = true then 'SCA1'\n      when FCT.CARD_TRANSACTION_PIN_PRESENT = false then 'OTHR'\n      else 'check the query'\n    end as SCA,\n  'NOAP' as Fraud_Type,\n  left(FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE,2) as Country_of_Acquirer,\n  left(FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE,2) as Country_of_terminal,\n  'VALE' as metric,\n  sum (coalesce(FCT.CARD_TRANSACTION_CLEARED_AMOUNT ,0)) + sum(coalesce(CARD_TRANSACTION_REFUNDED_AMOUNT,0)) as total_sum,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_DECRYPTED') }}  FCT\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD') }} C on FCT.T_D_CI_CARD_TRANSACTION_DIM_KEY = C.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_TRANSACTION') }} DCT on DCT.T_DIM_KEY = FCT.T_D_CI_CARD_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_EVENT') }} FTE on FTE.T_D_CI_CARD_TRANSACTION_DIM_KEY = DCT.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_TRANSACTION_EVENT') }} DTE on FTE.T_D_CI_CARD_TRANSACTION_EVENT_DIM_KEY = DTE.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_PRODUCT_DECRYPTED') }} CP on C.T_D_CI_CARD_PRODUCT_DIM_KEY = CP.T_DIM_KEY\nwhere FCT.CARD_TRANSACTION_CLEARED_AMOUNT > 0\nAND   CP.CARD_PRODUCT_CARD_COUNTRY = '{{country_code}}'\nAND   FTE.TRANSACTION_EVENT_USER_TRANSACTION_TIME >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\nAND   FTE.TRANSACTION_EVENT_USER_TRANSACTION_TIME < TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2,3,4,5,6,7,8,9,10,11", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_CI_CARD_TRANSACTION_DECRYPTED"], ["source_dwh_STRP", "D_CI_CARD"], ["source_dwh_STRP", "D_CI_CARD_TRANSACTION"], ["source_dwh_STRP", "F_CI_CARD_TRANSACTION_EVENT"], ["source_dwh_STRP", "D_CI_CARD_TRANSACTION_EVENT"], ["source_dwh_STRP", "D_CI_CARD_PRODUCT_DECRYPTED"], ["source_dwh_STRP", "F_CI_CARD_TRANSACTION_DECRYPTED"], ["source_dwh_STRP", "D_CI_CARD"], ["source_dwh_STRP", "D_CI_CARD_TRANSACTION"], ["source_dwh_STRP", "F_CI_CARD_TRANSACTION_EVENT"], ["source_dwh_STRP", "D_CI_CARD_TRANSACTION_EVENT"], ["source_dwh_STRP", "D_CI_CARD_PRODUCT_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CI_CARD", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT", "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V120_customer_credit_transfers_sent": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V120_customer_credit_transfers_sent", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V120_customer_credit_transfers_sent/V120_customer_credit_transfers_sent.sql", "original_file_path": "models/PST3/mart/LU/V120_customer_credit_transfers_sent/V120_customer_credit_transfers_sent.sql", "unique_id": "model.project_dbt.V120_customer_credit_transfers_sent", "fqn": ["project_dbt", "PST3", "mart", "LU", "V120_customer_credit_transfers_sent", "V120_customer_credit_transfers_sent"], "alias": "V120_customer_credit_transfers_sent", "checksum": {"name": "sha256", "checksum": "b42824aa58893729e9e7987ed0f8c184b05339be86078be3d246466e659db148"}, "config": {"enabled": true, "alias": "V120_customer_credit_transfers_sent", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V120_customer_credit_transfers_sent/V120_customer_credit_transfers_sent.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V120_customer_credit_transfers_sent", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3824575, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V120_customer_credit_transfers_sent`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'CORP' AS customerCategory,\n  IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n  'SEPA' as paymentScheme,\n  case\n    when ftr.transaction_channel in ('DASHBOARD','ADMIN') then 'PAPR'\n    when ftr.transaction_channel in ('OCS','TPP') then 'WEBB'\n    when ftr.transaction_channel = 'H2H' then 'ELFB'\n  end initiationChannel ,\n  'REM1' as initiationSubchannel,\n  'CUST' as initiatorType,\n  case\n    when ftr.transaction_channel in ('DASHBOARD','ADMIN') then 'NOAP'\n    when ftr.transaction_channel in ('TPP') then 'SCA1'\n    when ftr.transaction_channel in ('OCS') and ftr.transaction_creditor_reference_value like 'REF.%/%/%' then 'TRBN'\n    when ftr.transaction_channel in ('OCS') and ftr.TRANSACTION_END_TO_END_ID like 'CAF%' then 'SCA1'\n    when ftr.transaction_channel = 'H2H' then 'SECO'\n  else 'check the query'\n  end SCA,\n  'NOAP' as fraudType,\n  counter.FINANCIAL_INSTITUTION_COUNTRY_CODE as creditorPspCountry,\n  ftr.transaction_currency as currency,\n  'VOLU' as metric,\n  COUNT(*) as reportedAmount,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS dtr\n  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis\n  ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS bank\n  ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS counter\n  ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n    ftr.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND ftr.transaction_channel <> 'CARDS'\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  -- +01 for winter time, +02 for summer time\n  -- AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\n\nGROUP BY 1,2,3,4,5,6,7,8,9,10\n\nUNION ALL\n\nSELECT\n  'CORP' AS customerCategory,\n  IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n  'SEPA' as paymentScheme,\n  case\n    when ftr.transaction_channel in ('DASHBOARD','ADMIN') then 'PAPR'\n    when ftr.transaction_channel in ('OCS','TPP') then 'WEBB'\n    when ftr.transaction_channel = 'H2H' then 'ELFB'\n  end initiationChannel ,\n  'REM1' as initiationSubchannel,\n  'CUST' as initiatorType,\n  case\n    when ftr.transaction_channel in ('DASHBOARD','ADMIN') then 'NOAP'\n    when ftr.transaction_channel in ('TPP') then 'SCA1'\n    when ftr.transaction_channel in ('OCS') and ftr.transaction_creditor_reference_value like 'REF.%/%/%' then 'TRBN'\n    when ftr.transaction_channel in ('OCS') and ftr.TRANSACTION_END_TO_END_ID like 'CAF%' then 'SCA1'\n    when ftr.transaction_channel = 'H2H' then 'SECO'\n    else 'check the query'\n  end SCA,\n  'NOAP' as fraudType,\n  counter.FINANCIAL_INSTITUTION_COUNTRY_CODE as creditorPspCountry,\n  ftr.transaction_currency as currency,\n  'VALE' as metric,\n  sum (ftr.TRANSACTION_AMOUNT) as reportedAmount,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS dtr\n  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis\n  ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS bank\n  ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS counter\n  ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n  ftr.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND  ftr.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND ftr.transaction_channel <> 'CARDS'\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\nGROUP BY 1,2,3,4,5,6,7,8,9,10\nORDER BY 1,2,3,4,5,6,7,8,9,10", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V152_card_transactions_acquired_by_resident_PSPs", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V152_card_transactions_acquired_by_resident_PSPs/V152_card_transactions_acquired_by_resident_PSPs.sql", "original_file_path": "models/PST3/mart/LU/V152_card_transactions_acquired_by_resident_PSPs/V152_card_transactions_acquired_by_resident_PSPs.sql", "unique_id": "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs", "fqn": ["project_dbt", "PST3", "mart", "LU", "V152_card_transactions_acquired_by_resident_PSPs", "V152_card_transactions_acquired_by_resident_PSPs"], "alias": "V152_card_transactions_acquired_by_resident_PSPs", "checksum": {"name": "sha256", "checksum": "60e34ccfd4ad577a747799389edfb2751c0993ee46c7d23089806a410db6e247"}, "config": {"enabled": true, "alias": "V152_card_transactions_acquired_by_resident_PSPs", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V152_card_transactions_acquired_by_resident_PSPs/V152_card_transactions_acquired_by_resident_PSPs.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V152_card_transactions_acquired_by_resident_PSPs", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.383567, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V152_card_transactions_acquired_by_resident_PSPs`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'CRCA' as PaymentCardType,\n  case when f_payment_transactions.card_network = 'MASTERCARD' then 'MSTR'\n    when f_payment_transactions.card_network = 'VISA' then 'VISA'\n    else 'OTHER' END PaymentCardScheme,\n  'ECOM' as TerminalType,\n  IF(f_payment_transactions.PAYMENT_TRANSACTION_TYPE = 'REFUND', 'DPSP', 'CPSP') as OperationType,\n  'RMTR' as InitiationChannel,\n  'REM1' as InitiationsubChannel,\n  'MITR' as SCA,\n  'NOAP' as FraudType,\n  d_merchants.MERCHANT_COUNTRY AS CountryofIssuer,\n  d_merchants.MERCHANT_COUNTRY AS  CountryofTerminal,\n  d_payment_item_info.PAYMENT_ITEM_CURRENCY_CODE as currency,\n  'Volu' as Metric,\n  count(*) as ReportedAmount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_PAYMENT_ITEM_INFO_DECRYPTED') }} AS d_payment_item_info\nINNER JOIN {{ source('source_dwh_STRP','F_PAYMENT_ITEMS') }} AS f_payment_items\n  ON d_payment_item_info.T_DIM_KEY = f_payment_items.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_MERCHANTS_DECRYPTED') }} AS d_merchants\n  ON f_payment_items.T_D_MERCHANT_DIM_KEY = d_merchants.T_DIM_KEY AND d_merchants.T_SOURCE = \"P1_PBEE\"\nLEFT JOIN {{ source('source_dwh_STRP','F_PAYMENT_TRANSACTIONS_DECRYPTED') }}  AS f_payment_transactions\n  ON d_payment_item_info.T_DIM_KEY = f_payment_transactions.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS d_payment_transaction_info\n  ON d_payment_transaction_info.T_DIM_KEY =f_payment_transactions.T_D_PAYMENT_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_PRODUCTS') }} AS d_payment_products\n  ON f_payment_transactions.T_D_PRODUCT_DIM_KEY = d_payment_products.T_DIM_KEY\nWHERE (d_merchants.MERCHANT_COUNTRY )= '{{country_code}}'\n  AND d_payment_products.PRODUCT_CODE IN ('SILVERFLOW_CARDS')\n  AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_ITEMS"], ["source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_PRODUCTS"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V1110_payment_initiation_services": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V1110_payment_initiation_services", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V1110_payment_initiation_services/V1110_payment_initiation_services.sql", "original_file_path": "models/PST3/mart/LU/V1110_payment_initiation_services/V1110_payment_initiation_services.sql", "unique_id": "model.project_dbt.V1110_payment_initiation_services", "fqn": ["project_dbt", "PST3", "mart", "LU", "V1110_payment_initiation_services", "V1110_payment_initiation_services"], "alias": "V1110_payment_initiation_services", "checksum": {"name": "sha256", "checksum": "96d0adc7cc303141334507260b90ab47f59fe80af78c8c0175de054b0388b44d"}, "config": {"enabled": true, "alias": "V1110_payment_initiation_services", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V1110_payment_initiation_services/V1110_payment_initiation_services.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V1110_payment_initiation_services", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3847826, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V1110_payment_initiation_services`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        with pre_source AS(\n  SELECT\n  'Banqup applications' as TYPEOFAPPLICATION,\n  IT.INBOUND_TRANSACTION_CURRENCY_CODE  AS CURRENCY,\n  credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE AS COUNTERPARTY_COUNTRY,\n  COUNT(*)  AS SUCCESS_TRX_COUNT,\n  SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS SUCCESS_TRX_SUMMED_VALUE,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n    ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n    ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n    ON IP.T_DIM_KEY=IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n    ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n    ON IP.T_DIM_KEY=PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n    ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS debacc\n    ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n    ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\nWHERE FI.FINANCIAL_INSTITUTION_CODE  <> 'IBIS'\n    AND PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n    AND (\n        APP.APPLICATION_NAME  = '\tPAY-PXG-BANQUPLU')\n    AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  --pt winter time\n    AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\n\n\nGROUP BY 1, 2, 3\n\nUNION ALL\n\nSELECT\n      'OCS application' AS TYPEOFAPPLICATION,\n      IT.INBOUND_TRANSACTION_CURRENCY_CODE AS CURRENCY,\n      credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE AS COUNTERPARTY_COUNTRY,\n      COUNT(*)  AS SUCCESS_TRX_COUNT,\n      SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS SUCCESS_TRX_SUMMED_VALUE,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n    ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n    ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n    ON IP.T_DIM_KEY = IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n    ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n    ON IP.T_DIM_KEY = PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n    ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} debacc\n    ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n    ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\n\nWHERE\n  PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n  AND APP.APPLICATION_NAME  = 'PAY-PXG-OCS'\n  AND FI.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'LU' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,3) = '625')\n  AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  --pt winter time\n  AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\n\nGROUP BY 1, 2, 3\nORDER BY 4 DESC\n),\n  country_mapping AS (\n      SELECT 'Bulgaria' AS country, 'BG' AS code UNION ALL\n      SELECT 'Croatia', 'HR' UNION ALL\n      SELECT 'Cyprus', 'CY' UNION ALL\n      SELECT 'Czechia', 'CZ' UNION ALL\n      SELECT 'Denmark', 'DK' UNION ALL\n      SELECT 'Estonia', 'EE' UNION ALL\n      SELECT 'Finland', 'FI' UNION ALL\n      SELECT 'France', 'FR' UNION ALL\n      SELECT 'Germany', 'DE' UNION ALL\n      SELECT 'Greece', 'GR' UNION ALL\n      SELECT 'Hungary', 'HU' UNION ALL\n      SELECT 'Ireland', 'IE' UNION ALL\n      SELECT 'Italy', 'IT' UNION ALL\n      SELECT 'Latvia', 'LV' UNION ALL\n      SELECT 'Lithuania', 'LT' UNION ALL\n      SELECT 'Luxembourg', 'LU' UNION ALL\n      SELECT 'Malta', 'MT' UNION ALL\n      SELECT 'Netherlands', 'NL' UNION ALL\n      SELECT 'Poland', 'PL' UNION ALL\n      SELECT 'Portugal', 'PT' UNION ALL\n      SELECT 'Romania', 'RO' UNION ALL\n      SELECT 'Slovakia', 'SK' UNION ALL\n      SELECT 'Slovenia', 'SI' UNION ALL\n      SELECT 'Spain', 'ES' UNION ALL\n      SELECT 'Sweden', 'SE' UNION ALL\n      SELECT 'Iceland', 'IS' UNION ALL\n      SELECT 'Liechtenstein', 'LI' UNION ALL\n      SELECT 'Norway', 'NO' UNION ALL\n      SELECT 'Belgium', 'BE' UNION ALL\n      SELECT 'Extra EEA', ''\n\n  )\n  SELECT\n      pre_source.*,\n      country,\n      CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n      CAST (\"{{period}}\" AS STRING) AS Period,\n      TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n      TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\n  FROM pre_source\n  LEFT JOIN country_mapping on country_mapping.code =pre_source.COUNTERPARTY_COUNTRY", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V142_intermediated_payment_transactions": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V142_intermediated_payment_transactions", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V142_intermediated_payment_transactions/V142_intermediated_payment_transactions.sql", "original_file_path": "models/PST3/mart/LU/V142_intermediated_payment_transactions/V142_intermediated_payment_transactions.sql", "unique_id": "model.project_dbt.V142_intermediated_payment_transactions", "fqn": ["project_dbt", "PST3", "mart", "LU", "V142_intermediated_payment_transactions", "V142_intermediated_payment_transactions"], "alias": "V142_intermediated_payment_transactions", "checksum": {"name": "sha256", "checksum": "3f3aeb686e7f1f6618a825a4ee131621531d6691bb1fc16b8b6fb76f4dbc37db"}, "config": {"enabled": true, "alias": "V142_intermediated_payment_transactions", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V142_intermediated_payment_transactions/V142_intermediated_payment_transactions.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V142_intermediated_payment_transactions", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3859231, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V142_intermediated_payment_transactions`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'CUCT' as PaymentInstructionType,\n  'PSPN' as CustomerType,\n  'CPSP' as RoleofReporting,\n  'PSPN' as Settlementchannel,\n  d_payment_transaction_info.payment_transaction_payer_country   as debtorPSPs,\n  '{{country_code}}' as CreditorPSPs,\n  d_payment_transaction_info.payment_transaction_currency_code as currency,\n  'Volu' as Metric,\n  count(*) as ReportedAmount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_PAYMENT_ITEM_INFO_DECRYPTED') }}\n    AS d_payment_item_info\nINNER JOIN {{ source('source_dwh_STRP','F_PAYMENT_ITEMS') }} AS f_payment_items ON d_payment_item_info.T_DIM_KEY = f_payment_items.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_MERCHANTS_DECRYPTED') }} AS d_merchants ON f_payment_items.T_D_MERCHANT_DIM_KEY = d_merchants.T_DIM_KEY AND d_merchants.T_SOURCE = \"P1_PBEE\"\nLEFT JOIN {{ source('source_dwh_STRP','F_PAYMENT_TRANSACTIONS_DECRYPTED') }}  AS f_payment_transactions ON d_payment_item_info.T_DIM_KEY = f_payment_transactions.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS d_payment_transaction_info ON d_payment_transaction_info.T_DIM_KEY =f_payment_transactions.\nT_D_PAYMENT_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_PRODUCTS') }} AS d_payment_products ON f_payment_transactions.T_D_PRODUCT_DIM_KEY = d_payment_products.T_DIM_KEY\nWHERE\n    f_payment_transactions.PAYMENT_TRANSACTION_TYPE != 'REFUND'\n    AND (d_merchants.MERCHANT_COUNTRY )= '{{country_code}}'\n    AND d_payment_products.PRODUCT_CODE IN ('SILVERFLOW_CARDS')\n    AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n    AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}')) -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\n  group by 1,2,3,4,5,6,7,8\nunion all\n\nSELECT\n  'CUCT' as PaymentInstructionType,\n  'PSPN' as CustomerType,\n  IF(f_payment_transactions.PAYMENT_TRANSACTION_TYPE = 'REFUND', 'DPSP', 'CPSP') as RoleofReporting,\n  'PSPN' as Settlementchannel,\n  IF(f_payment_transactions.PAYMENT_TRANSACTION_TYPE = 'REFUND', '{{country_code}}', d_payment_transaction_info.payment_transaction_payer_country)   as debtorPSPs,\n  IF(f_payment_transactions.PAYMENT_TRANSACTION_TYPE = 'REFUND', REFUND.payment_transaction_payer_country, '{{country_code}}') as CreditorPSPs,\n  IF(f_payment_transactions.PAYMENT_TRANSACTION_TYPE = 'REFUND', REFUND.payment_transaction_currency_code,  d_payment_transaction_info.payment_transaction_currency_code) as currency,\n  'Vale' as Metric,\n  sum ( f_payment_items.PAYMENT_ITEM_AMOUNT) as ReportedAmount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_PAYMENT_ITEM_INFO_DECRYPTED') }}\n    AS d_payment_item_info\nINNER JOIN {{ source('source_dwh_STRP','F_PAYMENT_ITEMS') }} AS f_payment_items ON d_payment_item_info.T_DIM_KEY = f_payment_items.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_MERCHANTS_DECRYPTED') }} AS d_merchants ON f_payment_items.T_D_MERCHANT_DIM_KEY = d_merchants.T_DIM_KEY AND d_merchants.T_SOURCE = \"P1_PBEE\"\nLEFT JOIN {{ source('source_dwh_STRP','F_PAYMENT_TRANSACTIONS_DECRYPTED') }}  AS f_payment_transactions ON d_payment_item_info.T_DIM_KEY = f_payment_transactions.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS d_payment_transaction_info ON d_payment_transaction_info.T_DIM_KEY =f_payment_transactions.T_D_PAYMENT_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_PRODUCTS') }} AS d_payment_products ON f_payment_transactions.T_D_PRODUCT_DIM_KEY = d_payment_products.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS REFUND ON REFUND.T_DIM_KEY = f_payment_transactions.REFUND_ORIGINAL_PAYMENT_TRANSACTION_DIM_KEY\nWHERE (d_merchants.MERCHANT_COUNTRY )= '{{country_code}}'\n    AND d_payment_products.PRODUCT_CODE IN ('SILVERFLOW_CARDS')\n    AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n    AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}')) -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\ngroup by 1,2,3,4,5,6,7,8\nunion all\n\nSELECT\n\n  'CUCT' as PaymentInstructionType,\n  'PSPN' as CustomerType,\n    'DPSP' as RoleofReporting,\n  'PSPN' as Settlementchannel,\n  '{{country_code}}'  as debtorPSPs,\n    REFUND.payment_transaction_payer_country as CreditorPSPs,\n    REFUND.payment_transaction_currency_code as currency,\n    'Volu' as Metric,\n    count(*) as ReportedAmount,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n    \"{{period}}\"  AS Period,\n\n  FROM {{ source('source_dwh_STRP','D_PAYMENT_ITEM_INFO_DECRYPTED') }}\n      AS d_payment_item_info\n  INNER JOIN {{ source('source_dwh_STRP','F_PAYMENT_ITEMS') }} AS f_payment_items ON d_payment_item_info.T_DIM_KEY = f_payment_items.T_D_PAYMENT_ITEM_INFO_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_MERCHANTS_DECRYPTED') }} AS d_merchants ON f_payment_items.T_D_MERCHANT_DIM_KEY = d_merchants.T_DIM_KEY AND d_merchants.T_SOURCE = \"P1_PBEE\"\n  LEFT JOIN {{ source('source_dwh_STRP','F_PAYMENT_TRANSACTIONS_DECRYPTED') }}  AS f_payment_transactions ON d_payment_item_info.T_DIM_KEY = f_payment_transactions.T_D_PAYMENT_ITEM_INFO_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS d_payment_transaction_info ON d_payment_transaction_info.T_DIM_KEY =f_payment_transactions.\n  T_D_PAYMENT_TRANSACTION_INFO_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_PRODUCTS') }} AS d_payment_products ON f_payment_transactions.T_D_PRODUCT_DIM_KEY = d_payment_products.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS REFUND ON REFUND.T_DIM_KEY = f_payment_transactions.REFUND_ORIGINAL_PAYMENT_TRANSACTION_DIM_KEY\n  WHERE\n      f_payment_transactions.PAYMENT_TRANSACTION_TYPE = 'REFUND'\n      AND (d_merchants.MERCHANT_COUNTRY )= '{{country_code}}'\n      AND d_payment_products.PRODUCT_CODE IN ('SILVERFLOW_CARDS')\n      AND REFUND.PAYMENT_TRANSACTION_CUTOFF_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n      AND REFUND.PAYMENT_TRANSACTION_CUTOFF_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}')) -- like timez\n    group by 1,2,3,4,5,6,7,8\n    union all\n\nSELECT\n  'CUCT' as PaymentInstructionType,\n  'PSPN' as CustomerType,\n    'DPSP' as RoleofReporting,\n  'PSPN' as Settlementchannel,\n  '{{country_code}}'  as debtorPSPs,\n  REFUND.payment_transaction_payer_country as CreditorPSPs,\n  REFUND.payment_transaction_currency_code as currency,\n  'Vale' as Metric,\n  sum ( f_payment_items.PAYMENT_ITEM_AMOUNT) as ReportedAmount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n\nFROM {{ source('source_dwh_STRP','D_PAYMENT_ITEM_INFO_DECRYPTED') }}\n    AS d_payment_item_info\nINNER JOIN {{ source('source_dwh_STRP','F_PAYMENT_ITEMS') }} AS f_payment_items ON d_payment_item_info.T_DIM_KEY = f_payment_items.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_MERCHANTS_DECRYPTED') }} AS d_merchants ON f_payment_items.T_D_MERCHANT_DIM_KEY = d_merchants.T_DIM_KEY AND d_merchants.T_SOURCE = \"P1_PBEE\"\nLEFT JOIN {{ source('source_dwh_STRP','F_PAYMENT_TRANSACTIONS_DECRYPTED') }}  AS f_payment_transactions ON d_payment_item_info.T_DIM_KEY = f_payment_transactions.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS d_payment_transaction_info ON d_payment_transaction_info.T_DIM_KEY =f_payment_transactions.\nT_D_PAYMENT_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_PRODUCTS') }} AS d_payment_products ON f_payment_transactions.T_D_PRODUCT_DIM_KEY = d_payment_products.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS REFUND ON REFUND.T_DIM_KEY = f_payment_transactions.REFUND_ORIGINAL_PAYMENT_TRANSACTION_DIM_KEY\nWHERE\n    f_payment_transactions.PAYMENT_TRANSACTION_TYPE = 'REFUND'\n    AND (d_merchants.MERCHANT_COUNTRY )= '{{country_code}}'\n    AND d_payment_products.PRODUCT_CODE IN ('SILVERFLOW_CARDS')\n    AND REFUND.PAYMENT_TRANSACTION_CUTOFF_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n    AND REFUND.PAYMENT_TRANSACTION_CUTOFF_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}')) -- like timez\n  group by 1,2,3,4,5,6,7,8", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_ITEMS"], ["source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_PRODUCTS"], ["source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_ITEMS"], ["source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_PRODUCTS"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_ITEMS"], ["source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_PRODUCTS"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_ITEMS"], ["source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_PRODUCTS"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_LU", "name": "V131_direct_debits_reporting_as_debtors_PSP", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/LU/V131_direct_debits_reporting_as_debtors_PSP/V131_direct_debits_reporting_as_debtors_PSP.sql", "original_file_path": "models/PST3/mart/LU/V131_direct_debits_reporting_as_debtors_PSP/V131_direct_debits_reporting_as_debtors_PSP.sql", "unique_id": "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP", "fqn": ["project_dbt", "PST3", "mart", "LU", "V131_direct_debits_reporting_as_debtors_PSP", "V131_direct_debits_reporting_as_debtors_PSP"], "alias": "V131_direct_debits_reporting_as_debtors_PSP", "checksum": {"name": "sha256", "checksum": "95f6e8fcbde986a684216c02423af291efdbc778b61cbf9d18944713252f927f"}, "config": {"enabled": true, "alias": "V131_direct_debits_reporting_as_debtors_PSP", "schema": "dm_pst3_LU", "database": null, "tags": ["pst3", "monthly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "monthly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/LU/V131_direct_debits_reporting_as_debtors_PSP/V131_direct_debits_reporting_as_debtors_PSP.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_LU", "alias": "V131_direct_debits_reporting_as_debtors_PSP", "tags": ["pst3", "monthly"]}, "created_at": 1728271772.3870509, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_LU`.`V131_direct_debits_reporting_as_debtors_PSP`", "raw_code": "{% set period_time = period_calculate(time = 'monthly', selection_date=\"today\", prefix='', suffix='M' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'LU' -%}\n\n\n        SELECT\n  'CORP' as customerCategory,\n  IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n  'SEPA' as paymentScheme,\n  \"Electronic file/batch\" AS initiationChannel ,\n  '' as consent,\n  '' as fraudType,\n  counter.FINANCIAL_INSTITUTION_COUNTRY_CODE AS debtorPspCountry,\n  ftr.transaction_currency as currency,\n  'VOLU' as metric,\n  count(*) as reportedAmount,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n    ftr.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND ftr.TRANSACTION_BANK_FAMILY = 'RDDT'\n  AND ftr.TRANSACTION_BANK_SUBFAMILY in ('ESDD', 'OODD', 'BBDD')\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\ngroup by 1,2,3,4,5,6,7,8\nunion all\n\nSELECT\n    'CORP' as customerCategory,\n    IF(substr(bank.BANK_ACCOUNT_NUMBER,5,3) = substr(counter.BANK_ACCOUNT_NUMBER,5,3) and counter.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', 'ONUS', 'PSPN') AS settlementChannel,\n    'SEPA' as paymentScheme,\n    \"Electronic file/batch\" AS initiationChannel ,\n    '' as consent,\n    '' as fraudType,\n    counter.FINANCIAL_INSTITUTION_COUNTRY_CODE AS debtorPspCountry,\n    ftr.transaction_currency as currency,\n    'VALE' as metric,\n    SUM(ftr.TRANSACTION_AMOUNT)  as reportedAmount,\n    CURRENT_TIMESTAMP AS Load_timestamp,\n    \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} as ftr\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} as dtr  ON ftr.T_D_ACCOUNT_TRANSACTION_DIM_KEY = dtr.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis ON ftr.T_D_IBIS_ACCOUNT_DIM_KEY = ibis.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as bank ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} as counter ON counter.T_DIM_KEY = ftr.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE\n    ftr.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND ftr.TRANSACTION_TYPE = 'REGULAR'\n  AND dtr.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND ibis.ACCOUNT_TYPE = 'PAYMENT'\n  AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND ftr.TRANSACTION_BANK_FAMILY = 'RDDT'\n  AND ftr.TRANSACTION_BANK_SUBFAMILY in ('ESDD', 'OODD', 'BBDD')\n  AND dtr.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- +01 for winter time, +02 for summer time\n  AND dtr.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  -- like timezone('UTC', to_timestamp('2023-12-31 UTC+01', 'YYYY-MM-DD \"\"UTC\"\"TZH') + interval '1 day') -- +01 for winter time, +02 for summer time\ngroup by 1,2,3,4,5,6,7,8\norder by 1,2,3,4,5,6,7,8", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PI_FINAL_QUERY": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PI_FINAL_QUERY", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PI_FINAL_QUERY/PI_FINAL_QUERY.sql", "original_file_path": "models/PST3/mart/BE/PI_FINAL_QUERY/PI_FINAL_QUERY.sql", "unique_id": "model.project_dbt.PI_FINAL_QUERY", "fqn": ["project_dbt", "PST3", "mart", "BE", "PI_FINAL_QUERY", "PI_FINAL_QUERY"], "alias": "PI_FINAL_QUERY", "checksum": {"name": "sha256", "checksum": "b596ccdaee183dcb29fafd9efeae42b86d4ab4044511b2a36f28340fb4c32523"}, "config": {"enabled": true, "alias": "PI_FINAL_QUERY", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PI_FINAL_QUERY/PI_FINAL_QUERY.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PI_FINAL_QUERY", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3883827, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PI_FINAL_QUERY`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  a.APPLICATION_NAME AS Application_name,\n  fi.FINANCIAL_INSTITUTION_COUNTRY as CountryOfAISP,\n  count(*) AS number_of_consents,\n  \"{{period}}\"  AS Period,\n  CURRENT_TIMESTAMP AS load_timestamp,\n  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\nFROM {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_CURRENT') }} AS ac\nJOIN {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_DECRYPTED') }} acd on acd.T_DIM_KEY = ac.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_DECRYPTED') }}\n  AS pa ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }}\n  AS fp ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }}\n  AS fi ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO_CURRENT') }}\n  AS c ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }}\n  AS aa ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }}\n  AS a ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATION_OWNERS_DECRYPTED') }}\n  AS ao ON a.T_D_OWNER_DIM_KEY =  ao.T_DIM_KEY\nWHERE\n  fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n  AND (\n    (\n    TIMESTAMP(ac.ACCESS_CONSENT_STATUS_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  --pt winter time\n    AND TIMESTAMP(ac.ACCESS_CONSENT_STATUS_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\n    )\n    OR\n    (\n    TIMESTAMP(ac.ACCESS_CONSENT_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  --pt winter time\n    AND TIMESTAMP(ac.ACCESS_CONSENT_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\n    )\n  )\nGROUP BY 1,2", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], ["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO_CURRENT"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATION_OWNERS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCP_ATM": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCP_ATM", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCP_ATM/PCP_ATM.sql", "original_file_path": "models/PST3/mart/BE/PCP_ATM/PCP_ATM.sql", "unique_id": "model.project_dbt.PCP_ATM", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCP_ATM", "PCP_ATM"], "alias": "PCP_ATM", "checksum": {"name": "sha256", "checksum": "518bfcf1e8ae2dc7b5d61b701f6c0372ff291d304bc3fef5f7bc8fd8d73acb82"}, "config": {"enabled": true, "alias": "PCP_ATM", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCP_ATM/PCP_ATM.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCP_ATM", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3896165, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCP_ATM`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE AS Counterpart_area,\n  FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE AS POS_location,\n  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL AS remote_non_remote_initiation,\n  COUNT(*) AS number_of_transactions,\n  SUM(FCT.card_transaction_cleared_amount) + SUM(FCT.card_transaction_refunded_amount) AS total_sum,\n  \"{{period}}\"  AS Period,\n  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\nFROM {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_DECRYPTED') }}  FCT\nINNER JOIN {{ source('source_dwh_STRP','D_CI_CARD') }} C on FCT.T_D_CI_CARD_DIM_KEY = C.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_CI_CARD_TRANSACTION') }} DCT on DCT.T_DIM_KEY = FCT.T_D_CI_CARD_TRANSACTION_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_EVENT') }} FTE on FTE.T_D_CI_CARD_TRANSACTION_DIM_KEY = DCT.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_CI_CARD_PRODUCT_DECRYPTED') }} CP on C.T_D_CI_CARD_PRODUCT_DIM_KEY = CP.T_DIM_KEY\nWHERE\nFCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ATM'\nAND CP.CARD_PRODUCT_CARD_COUNTRY = 'BE'\n-- AND FCT.CARD_TRANSACTION_USER_TIME >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n-- AND FCT.CARD_TRANSACTION_USER_TIME <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2,3", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_CI_CARD_TRANSACTION_DECRYPTED"], ["source_dwh_STRP", "D_CI_CARD"], ["source_dwh_STRP", "D_CI_CARD_TRANSACTION"], ["source_dwh_STRP", "F_CI_CARD_TRANSACTION_EVENT"], ["source_dwh_STRP", "D_CI_CARD_PRODUCT_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CI_CARD", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT", "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCP_BREAKDOWN_BY_SCA": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCP_BREAKDOWN_BY_SCA", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCP_BREAKDOWN_BY_SCA/PCP_BREAKDOWN_BY_SCA.sql", "original_file_path": "models/PST3/mart/BE/PCP_BREAKDOWN_BY_SCA/PCP_BREAKDOWN_BY_SCA.sql", "unique_id": "model.project_dbt.PCP_BREAKDOWN_BY_SCA", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCP_BREAKDOWN_BY_SCA", "PCP_BREAKDOWN_BY_SCA"], "alias": "PCP_BREAKDOWN_BY_SCA", "checksum": {"name": "sha256", "checksum": "16274af325f4356e7298cdaac2c6c5cf5f3e04000ac2a979ff8a0ebb0fd01017"}, "config": {"enabled": true, "alias": "PCP_BREAKDOWN_BY_SCA", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCP_BREAKDOWN_BY_SCA/PCP_BREAKDOWN_BY_SCA.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCP_BREAKDOWN_BY_SCA", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3907356, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCP_BREAKDOWN_BY_SCA`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    ma.COUNT_AREA,\n    ma.TRMNL_LCTN,\n    ma.INTTN_CHNNL,\n    ma.RMT_INTTN,\n    ma.PYMNT_SCHM,\n    ma.SCA,\n    ma.FRD_TYP,\n    COUNT(ma.TRANSACTION_PUBLIC_IDENTIFIER) AS COUNT_OF_TRANSACTION_PUBLIC_IDENTIFIER,\n    SUM(ma.AMOUNT) AS SUM_OF_AMOUNT,\n    ma.Period,\n    ma.Period_begin_date,\n    ma.Period_end_date,\n    ma.LOAD_TIMESTAMP,\nFROM {{ ref('PCP_MERCHANT_ACCT_TRX') }} as ma\nGROUP BY 1,2,3,4,5,6,7,10,11,12,13", "language": "sql", "refs": [{"name": "PCP_MERCHANT_ACCT_TRX", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["model.project_dbt.PCP_MERCHANT_ACCT_TRX"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCT_INITIATED_BY_PISP": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCT_INITIATED_BY_PISP", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCT_INITIATED_BY_PISP/PCT_INITIATED_BY_PISP.sql", "original_file_path": "models/PST3/mart/BE/PCT_INITIATED_BY_PISP/PCT_INITIATED_BY_PISP.sql", "unique_id": "model.project_dbt.PCT_INITIATED_BY_PISP", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCT_INITIATED_BY_PISP", "PCT_INITIATED_BY_PISP"], "alias": "PCT_INITIATED_BY_PISP", "checksum": {"name": "sha256", "checksum": "952b9adb7817bc36a39a97cc98f8b5757b7259d46d11840347f1ed7e52337857"}, "config": {"enabled": true, "alias": "PCT_INITIATED_BY_PISP", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCT_INITIATED_BY_PISP/PCT_INITIATED_BY_PISP.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCT_INITIATED_BY_PISP", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3918543, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCT_INITIATED_BY_PISP`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  CASE\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'Paper-based form'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('OCS', 'H2H') THEN 'Electronic'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('TPP') AND  TPP.T_SOURCE_PK_ID = '1' then 'Electronic'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('TPP') AND  TPP.T_SOURCE_PK_ID <> '1' then 'PISP'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL IS NULL THEN 'not applicable - return'\n    ELSE 'check the query'\n  END INITIATIONCHANNEL,\n  CASE\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'not applicable'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('TPP') THEN 'SCA'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('OCS') AND TRANSACTION_CREDITOR_REFERENCE_VALUE like 'REF.%/%/%' THEN 'Trusted Beneficiaries exemption'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL in ('OCS') AND TRANSACTION_END_TO_END_ID like 'CAF%' THEN 'SCA'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL = 'H2H' THEN 'secure corp process exemption'\n    WHEN f_account_transactions.TRANSACTION_CHANNEL IS NULL THEN 'not applicable - return'\n    ELSE 'check the query'\n  END SCAINDICATOR,\n  d_counterparty_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PAYEE_PSP_COUNTRY,\n  COUNT(DISTINCT f_account_transactions.T_SOURCE_PK_ID) AS OUTBOUND_IBIS_PAYMENTS_TRX_COUNT,\n  COALESCE(SUM(f_account_transactions.TRANSACTION_AMOUNT), 0) AS OUTBOUND_IBIS_PAYMENTS_AMOUNT_SUM_IN_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS f_account_transactions\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS d_account_transaction\n    ON f_account_transactions.T_D_ACCOUNT_TRANSACTION_DIM_KEY = d_account_transaction.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS d_ibis_account\n    ON f_account_transactions.T_D_IBIS_ACCOUNT_DIM_KEY = d_ibis_account.T_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_bank_accounts\n    ON d_ibis_account.T_D_BANK_ACCOUNT_DIM_KEY = d_bank_accounts.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_counterparty_bank_accounts\n    ON d_counterparty_bank_accounts.T_DIM_KEY = f_account_transactions.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','F_ASPSP_PAYMENT_INITIATION') }} PI\n    ON PI.T_D_ACCOUNT_TRANSACTION_DIM_KEY = d_account_transaction.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_ASPSP_TPP') }} TPP\n  ON TPP.T_DIM_KEY = PI.T_D_ASPSP_PAYMENT_INITIATIONS_INFO_DIM_KEY\n  WHERE\n    f_account_transactions.TRANSACTION_DIRECTION = \"OUTBOUND\"\n    AND f_account_transactions.TRANSACTION_TYPE = 'REGULAR'\n     AND (\n           d_account_transaction.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n           AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n        )\n      AND d_account_transaction.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n      AND d_ibis_account.ACCOUNT_TYPE = 'PAYMENT'\n      AND  f_account_transactions.TRANSACTION_BANK_FAMILY = 'ICDT'\n      AND d_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\ngroup by 1,2,3", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ASPSP_PAYMENT_INITIATION"], ["source_dwh_STRP", "D_ASPSP_TPP"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_ASPSP_PAYMENT_INITIATION", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCP": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCP", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCP/PCP.sql", "original_file_path": "models/PST3/mart/BE/PCP/PCP.sql", "unique_id": "model.project_dbt.PCP", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCP", "PCP"], "alias": "PCP", "checksum": {"name": "sha256", "checksum": "7cc8ae808b41d803b7413d7e13d9c7330245d397189f30a0334dc4fff508f715"}, "config": {"enabled": true, "alias": "PCP", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCP/PCP.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCP", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3927178, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCP`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        with source as(\nSELECT\n  d_payment_products.PRODUCT_CODE AS PRODUCT,\n  d_payment_transaction_info.PAYMENT_TRANSACTION_PAYER_COUNTRY  AS PAYERCOUNTRY,\n  d_merchants.MERCHANT_COUNTRY  AS MERCHANTCOUNTRY,\n    CASE\n        WHEN d_payment_products.PRODUCT_CODE = 'BANCONTACT_COLLECT' THEN 'Bancontact'\n        WHEN d_payment_products.PRODUCT_CODE = 'SILVERFLOW_CARDS' AND f_payment_transactions.CARD_NETWORK = 'MASTERCARD' THEN 'Mastercard'\n        WHEN d_payment_products.PRODUCT_CODE = 'SILVERFLOW_CARDS' AND f_payment_transactions.CARD_NETWORK = 'VISA' THEN 'Visa'\n    END AS PCP_TYPE,\n    CASE\n        WHEN d_payment_products.PRODUCT_CODE = 'BANCONTACT_COLLECT' AND f_payment_transactions.PAYMENT_TRANSACTION_WIP_TYPE = 'BANCONTACT' THEN 'WIP transaction'\n        WHEN d_payment_products.PRODUCT_CODE = 'BANCONTACT_COLLECT' AND f_payment_transactions.PAYMENT_TRANSACTION_WIP_TYPE = 'NONE' THEN 'single transaction'\n        WHEN d_payment_products.PRODUCT_CODE = 'SILVERFLOW_CARDS' AND f_payment_transactions.PAYMENT_TRANSACTION_WIP_TYPE = 'CREDITCARD' THEN 'WIP transaction'\n        WHEN d_payment_products.PRODUCT_CODE = 'SILVERFLOW_CARDS' AND f_payment_transactions.PAYMENT_TRANSACTION_WIP_TYPE = 'NONE' THEN 'single transaction'\n    END AS SINGLEWIP,\n    d_payment_transaction_info.T_SOURCE_PK_UUID  AS  TRANSACTION_PUBLIC_IDENTIFIER,\n    f_payment_transactions.CARD_COUNTRY  AS CARD_COUNTRY,\n    f_payment_transactions.CARD_NETWORK_AUTHORIZATION_CODE  AS NETWORK_CODE,\n    f_payment_transactions.SCA_RESULT  AS SCA_RESULT,\n  CASE\n    WHEN d_payment_products.PRODUCT_CODE = 'BANCONTACT_COLLECT' THEN\n      IF(f_payment_transactions.PAYMENT_TRANSACTION_WIP_TYPE = 'BANCONTACT','non-SCA used: reason is merchant initiated transaction (MIT)','SCA used')\n    WHEN d_payment_products.PRODUCT_CODE = 'SILVERFLOW_CARDS' THEN\n      IF (f_payment_transactions.PAYMENT_TRANSACTION_WIP_TYPE = 'CREDITCARD', 'non-SCA used: reason is merchant initiated transaction (MIT)',map.SCA_REASON )\n    END AS SCA_REASON,\n  f_payment_transactions.MASTERCARD_PRODUCT_ID  AS LICENSEDPRODUCTID,\n  f_payment_transactions.MASTERCARD_PRODUCT_CATEGORY_CODE AS PRODUCTCATEGORYCODE,\n  f_payment_transactions.MASTERCARD_PRODUCT_CATEGORY_DESCRIPTION  AS  PRODUCTCATEGORYDESCRIPTION,\n  CASE\n    WHEN d_payment_products.PRODUCT_CODE = 'BANCONTACT_COLLECT' THEN 'Debit'\n    WHEN d_payment_products.PRODUCT_CODE = 'SILVERFLOW_CARDS' THEN\n      IF(\n        f_payment_transactions.CARD_NETWORK = 'MASTERCARD', --condition\n        --true ('MASTERCARD')\n        IF(f_payment_transactions.MASTERCARD_PRODUCT_CATEGORY_DESCRIPTION = 'Prepaid',\n          'Debit',\n          f_payment_transactions.MASTERCARD_PRODUCT_CATEGORY_DESCRIPTION\n          ),\n        --false (!='MASTERCARD')\n        IF(\n            f_payment_transactions.CARD_NETWORK = 'VISA',\n            IF( f_payment_transactions.CARD_FUNDING_SOURCE = 'Prepaid',\n              'Debit',\n              F_Payment_transactions.CARD_FUNDING_SOURCE\n            ),\n            'NA'\n          )\n          )\n    ELSE 'NA'\n    END AS CARDFUNCTION,\n  f_payment_transactions.CARD_FUNDING_SOURCE  AS ACCOUNTFUNDINGSOURCE,\n  d_merchants.T_SOURCE_PK_UUID AS MERCHANT_PUBLIC_IDENTIFIER,\n  f_payment_items.PAYMENT_ITEM_AMOUNT  AS AMOUNT,\n  d_payment_item_info.PAYMENT_ITEM_CURRENCY_CODE AS CURRENCY,\n  f_payment_transactions.CARD_NETWORK,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\nFROM {{ source('source_dwh_STRP','D_PAYMENT_ITEM_INFO_DECRYPTED') }}\n    AS d_payment_item_info\nINNER JOIN {{ source('source_dwh_STRP','F_PAYMENT_ITEMS') }} AS f_payment_items ON d_payment_item_info.T_DIM_KEY = f_payment_items.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_MERCHANTS_DECRYPTED') }} AS d_merchants ON f_payment_items.T_D_MERCHANT_DIM_KEY = d_merchants.T_DIM_KEY AND d_merchants.T_SOURCE = \"P1_PBEE\"\nLEFT JOIN {{ source('source_dwh_STRP','F_PAYMENT_TRANSACTIONS_DECRYPTED') }}  AS f_payment_transactions ON d_payment_item_info.T_DIM_KEY = f_payment_transactions.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }} AS d_payment_transaction_info ON d_payment_transaction_info.T_DIM_KEY =f_payment_transactions.T_D_PAYMENT_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_PRODUCTS') }} AS d_payment_products ON f_payment_transactions.T_D_PRODUCT_DIM_KEY = d_payment_products.T_DIM_KEY\nLEFT JOIN {{ ref('SCA_MAPPING_TABLE') }} AS map  ON f_payment_transactions.SCA_RESULT = map.SCA_RESULT\nWHERE (d_merchants.MERCHANT_COUNTRY ) IS NOT NULL\n    AND d_payment_products.PRODUCT_CODE IN ('BANCONTACT_COLLECT', 'SILVERFLOW_CARDS')\n    AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND d_payment_transaction_info.PAYMENT_TRANSACTION_CUTOFF_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n),\nexeption_records as(\nSELECT\n  PRODUCT,\n  PAYERCOUNTRY,\n  MERCHANTCOUNTRY,\n  PCP_TYPE,\n  SINGLEWIP,\n  TRANSACTION_PUBLIC_IDENTIFIER,\n  CARD_COUNTRY,\n  NETWORK_CODE,\n  SCA_RESULT,\n  SCA_REASON,\n  LICENSEDPRODUCTID,\n  PRODUCTCATEGORYCODE,\n  PRODUCTCATEGORYDESCRIPTION,\n  \"Credit\" AS CARDFUNCTION,\n  ACCOUNTFUNDINGSOURCE,\n  MERCHANT_PUBLIC_IDENTIFIER,\n  AMOUNT,\n  CURRENCY,\n  CARD_NETWORK,\n  LOAD_TIMESTAMP,\n  Period,\n  Period_begin_date,\n  Period_end_date,\nFROM source\nWHERE TRANSACTION_PUBLIC_IDENTIFIER IN (\"9b15b583-8919-4c73-88bb-bac862fc6739\",\"62457fa7-cd28-4655-856e-adbec2a1a90b\", \"b9f13a08-e187-4d3b-bc91-2f657dda85cc\", \"04b4f377-da01-4a1e-9aff-8541dd6d233b\")\n),\nexecpted_records as(\nSELECT * FROM source\nWHERE TRANSACTION_PUBLIC_IDENTIFIER NOT IN (\"9b15b583-8919-4c73-88bb-bac862fc6739\",\"62457fa7-cd28-4655-856e-adbec2a1a90b\", \"b9f13a08-e187-4d3b-bc91-2f657dda85cc\", \"04b4f377-da01-4a1e-9aff-8541dd6d233b\")\n)\nSELECT * FROM exeption_records\nUNION ALL\nSELECT * FROM execpted_records", "language": "sql", "refs": [{"name": "SCA_MAPPING_TABLE", "package": null, "version": null}], "sources": [["source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_ITEMS"], ["source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_PRODUCTS"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS", "model.project_dbt.SCA_MAPPING_TABLE"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.SCA_MAPPING_TABLE": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "SCA_MAPPING_TABLE", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/SCA_MAPPING_TABLE/SCA_MAPPING_TABLE.sql", "original_file_path": "models/PST3/mart/BE/SCA_MAPPING_TABLE/SCA_MAPPING_TABLE.sql", "unique_id": "model.project_dbt.SCA_MAPPING_TABLE", "fqn": ["project_dbt", "PST3", "mart", "BE", "SCA_MAPPING_TABLE", "SCA_MAPPING_TABLE"], "alias": "SCA_MAPPING_TABLE", "checksum": {"name": "sha256", "checksum": "5e1f1146262f334aac43c551a9fff72f9b111daa0c44bc92d46ae2fa58384a41"}, "config": {"enabled": true, "alias": "SCA_MAPPING_TABLE", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/SCA_MAPPING_TABLE/SCA_MAPPING_TABLE.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "SCA_MAPPING_TABLE", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3936944, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`SCA_MAPPING_TABLE`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  \"full-auth\" AS SCA_RESULT,\n  \"SCA used\" AS SCA_REASON,\nUNION ALL\nSELECT\n  \"attempt\" AS SCA_RESULT,\n  \"non-SCA used: reason is others\" AS SCA_REASON,\nUNION ALL\nSELECT\n  \"non-authenticated\" AS SCA_RESULT,\n  \"non-SCA used: reason is others\" AS SCA_REASON,\nUNION ALL\nSELECT\n  NULL AS SCA_RESULT,\n  \"non-SCA used: reason is others\" AS SCA_REASON,", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PI_PXG_APPLICATION_MAPPING": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PI_PXG_APPLICATION_MAPPING", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PI_PXG_APPLICATION_MAPPING/PI_PXG_APPLICATION_MAPPING.sql", "original_file_path": "models/PST3/mart/BE/PI_PXG_APPLICATION_MAPPING/PI_PXG_APPLICATION_MAPPING.sql", "unique_id": "model.project_dbt.PI_PXG_APPLICATION_MAPPING", "fqn": ["project_dbt", "PST3", "mart", "BE", "PI_PXG_APPLICATION_MAPPING", "PI_PXG_APPLICATION_MAPPING"], "alias": "PI_PXG_APPLICATION_MAPPING", "checksum": {"name": "sha256", "checksum": "ebff0c9174171f3a9c233df0d3e242512fe32389887cbabe896be39073adedc7"}, "config": {"enabled": true, "alias": "PI_PXG_APPLICATION_MAPPING", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PI_PXG_APPLICATION_MAPPING/PI_PXG_APPLICATION_MAPPING.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PI_PXG_APPLICATION_MAPPING", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3948233, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PI_PXG_APPLICATION_MAPPING`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    distinct ap.APPLICATION_NAME AS APPLICATION_NAME,\n    -- ap.APPLICATION_CREATED_AT AS CREATION_DATETIME,\n    -- ao.APPLICATION_OWNER_NAME AS APPLICATION_OWNER_NAME,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n    \"{{period}}\"  AS Period,\n    CAST(NULL AS TIMESTAMP) AS Period_begin_date,\n    CAST(NULL AS TIMESTAMP) AS Period_end_date,\nFROM (\n    WITH current_table AS (\n    SELECT *, ROW_NUMBER() OVER(PARTITION BY T_BUS_KEY ORDER BY T_INGESTION_TIMESTAMP desc, T_LOAD_TIMESTAMP desc) AS rn\n    FROM  {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }}\n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1\n) AS ap\nLEFT  JOIN {{ source('source_dwh_STRP','D_APPLICATION_OWNERS_DECRYPTED') }} AS ao\n    ON ap.T_D_OWNER_DIM_KEY =  ao.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n    ON ap.t_dim_key = aa.T_D_APPLICATION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO_CURRENT') }} AS ci\n    ON aa.T_DIM_KEY= ci.T_D_APPLICATION_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_DECRYPTED') }}\n    AS pa on pa.T_DIM_KEY= ci.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }}\n    AS fp ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }}\n    AS fi ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n-- WHERE ap.APPLICATION_NAME <>\"NA\"\n    -- AND TIMESTAMP(ap.APPLICATION_UPDATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) --pt winter time\n    -- AND TIMESTAMP(ap.APPLICATION_UPDATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  --pt winter time", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATION_OWNERS_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_CONTRACT_INFO_CURRENT"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCP_BREAKDOWN_BY_CARD": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCP_BREAKDOWN_BY_CARD", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCP_BREAKDOWN_BY_CARD/PCP_BREAKDOWN_BY_CARD.sql", "original_file_path": "models/PST3/mart/BE/PCP_BREAKDOWN_BY_CARD/PCP_BREAKDOWN_BY_CARD.sql", "unique_id": "model.project_dbt.PCP_BREAKDOWN_BY_CARD", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCP_BREAKDOWN_BY_CARD", "PCP_BREAKDOWN_BY_CARD"], "alias": "PCP_BREAKDOWN_BY_CARD", "checksum": {"name": "sha256", "checksum": "1847e442334119c7f9d9ea895ee5ffc564621cc7dc2ff5d9f4485a081687f57c"}, "config": {"enabled": true, "alias": "PCP_BREAKDOWN_BY_CARD", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCP_BREAKDOWN_BY_CARD/PCP_BREAKDOWN_BY_CARD.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCP_BREAKDOWN_BY_CARD", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3959515, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCP_BREAKDOWN_BY_CARD`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    ma.COUNT_AREA,\n    ma.TRMNL_LCTN,\n    ma.INTTN_CHNNL,\n    ma.RMT_INTTN,\n    ma.PYMNT_SCHM,\n    ma.CRD_FNCTN AS CRD_FCTN,\n    ma.FRD_TYP,\n    COUNT(ma.TRANSACTION_PUBLIC_IDENTIFIER) AS COUNT_OF_TRANSACTION_PUBLIC_IDENTIFIER,\n    SUM(ma.AMOUNT) AS SUM_OF_AMOUNT,\n    ma.Period,\n    ma.Period_begin_date,\n    ma.Period_end_date,\n    ma.LOAD_TIMESTAMP,\nFROM {{ ref('PCP_MERCHANT_ACCT_TRX') }} as ma\nGROUP BY 1,2,3,4,5,6,7,10,11,12,13", "language": "sql", "refs": [{"name": "PCP_MERCHANT_ACCT_TRX", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["model.project_dbt.PCP_MERCHANT_ACCT_TRX"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCP_ALBATROS_CMD_OCS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCP_ALBATROS_CMD_OCS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCP_ALBATROS_CMD_OCS/PCP_ALBATROS_CMD_OCS.sql", "original_file_path": "models/PST3/mart/BE/PCP_ALBATROS_CMD_OCS/PCP_ALBATROS_CMD_OCS.sql", "unique_id": "model.project_dbt.PCP_ALBATROS_CMD_OCS", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCP_ALBATROS_CMD_OCS", "PCP_ALBATROS_CMD_OCS"], "alias": "PCP_ALBATROS_CMD_OCS", "checksum": {"name": "sha256", "checksum": "ebd8f66ea6b14537f2cbc52b5e056787936cd2a25df9cdf25f086a44430aa71c"}, "config": {"enabled": true, "alias": "PCP_ALBATROS_CMD_OCS", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCP_ALBATROS_CMD_OCS/PCP_ALBATROS_CMD_OCS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCP_ALBATROS_CMD_OCS", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3968275, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCP_ALBATROS_CMD_OCS`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        WITH ALB AS (\nSELECT\n    '73f02cef-1f20-446a-b66f-5368c222a58e' AS companyid_tobeexcluded,\n    'VigorPlus Holding B.V.' AS legal_name,\n    'COLLECTOR_NL_FULL' AS product_name,\n    'NL' AS to_be_reported_in_country\nUNION ALL\nSELECT '46d24da8-952f-44e3-b880-f1edd2a7e5a2', 'SIA EZ', 'COLLECTOR_LV_FULL', 'LV' UNION ALL\nSELECT '0df4ade3-3e72-48d9-8897-e7439551a8ca', 'BLOX USINAGE PLASTIQUES', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '0f8c4fd2-72b2-4261-8599-223bcb67c711', 'LOTHESA', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '12144ea2-9a8a-49dd-b01f-0bdbb8189db5', 'MPG CONSEIL EXPERTISE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '1840ea14-f726-448b-a716-e92f5009d322', 'FID SUD AGEN', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '1b12d30c-1820-400a-86eb-15601492979e', 'QUENETTE STEVE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '1c72dfa2-b07e-455f-a00c-2fd64784f9c2', 'CIE EUROP GESTION EXPERTISES COMPTABLES', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '23e4432f-43ed-4bf6-ab30-29f9d5a6f102', 'D.B.D.', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '26801b29-16ed-4330-b180-3d4fb997aa6d', 'BAT EVENT', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '38c5e0bc-d122-4783-872c-e2cdbbef0ece', 'LAMY EXPERTS', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '497c6deb-a48b-464a-9318-02cf543ba323', 'FID SUD MONTAUBAN', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '5c5225a4-08a4-4052-b712-74bfe7a99da8', 'SDRD', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '5e05cabb-e5bd-42e7-a50c-df17fb04f3c7', 'KOMO MARCHE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '634b1ae4-8dca-46f4-ae17-ef28f87e91af', 'CABINET CONCEPT EXPERT - CCE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '698f1c97-3d15-4a42-9914-e9513a8fe723', 'EXPERTS TEAM', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '6f216187-3566-4097-92e8-9de30f59bb19', 'ABAQUE CONSULTING', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '01dd8d49-de77-4311-bac3-c7a8c74b4275', 'EN SA MEMOIRE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '768e77cd-7de9-4369-a7ba-b0b04db3ab67', 'OLIVER AUDIT', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '791f2d5e-338f-4f82-9519-85a28c163884', 'MVT CONSEILS', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '99053b0d-3e81-4972-a491-bd34beb026a6', 'N.D.EX.CO.', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'a9feb33b-db68-4020-a5f3-279123565354', 'SALAS-GORDO & COELHO', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'c45758bd-85b4-4f61-accc-ee180364a60b', 'NICOL & ASSOCIES', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'cd8e4416-da0c-4a12-9934-78618f0694b3', 'IN FINE EXPERTISE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'e196486d-0014-4931-b183-f32c190897d8', 'MALHERBE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'e2a66866-98c4-4ef0-a67d-637e58273603', 'BENAUW HUBERT', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'e7f0ba81-6c3f-4b3d-9bf5-4d42dc88d56f', 'F2AB AUDIT', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'e9708122-4491-4930-bdd7-d70e50415d2f', 'BEY MANUTENTION', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'f10e6a0f-67e4-4662-83b7-7faba187e157', 'GARDILLE JEAN-PIERRE', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'fb77318d-18f5-43d2-a202-512943c4f92b', 'SOGAREX', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'fbe51ec9-8cb7-4825-be45-594886d67fac', 'CHESNEAU CHRISTIAN ET FILS', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT 'fcb01b27-09c9-42c3-befa-3950b3150b1f', 'LOZANGE IT', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '733045f3-c626-49a3-aad6-a514f19ad0e0', 'QINTENS', 'COLLECTOR_FR_FULL', 'FR' UNION ALL\nSELECT '0567d2fa-6eca-4422-8570-ff714ccd8aa4', 'D-DALE', 'COLLECTOR_FR_FULL', 'FR'\n),\nCMD as (\nSELECT\n    D.T_SOURCE_PK_ID as companyid_tobeexcluded,\n    D.ENTERPRISE_LEGAL_NAME as legal_name,\n    D.ENTERPRISE_COUNTRY_OF_INCORPORATION as to_be_reported_in_country\nFROM {{ source('source_dwh_STRP','D_LEGAL_ENTITY_CURRENT') }} C\nLEFT JOIN {{ source('source_dwh_STRP','D_LEGAL_ENTITY_DECRYPTED') }} D  ON C.T_SOURCE_PK_ID = D.T_SOURCE_PK_ID\nWHERE D.ENTERPRISE_OCS_ACTIVE = true\n    AND D.ENTERPRISE_KYC_STATUS = 'APPROVED'\n    AND D.ENTERPRISE_COUNTRY_OF_INCORPORATION not in ('BE','LT', 'RO', 'BG', 'HR')\n    AND C.ENTERPRISE_UPDATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND C.ENTERPRISE_UPDATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n\nUNION ALL\nSELECT\n    D.T_SOURCE_PK_ID as companyid_tobeexcluded,\n    D.ENTERPRISE_LEGAL_NAME as legal_name,\n    D.ENTERPRISE_COUNTRY_OF_INCORPORATION as to_be_reported_in_country\nFROM {{ source('source_dwh_STRP','D_LEGAL_ENTITY_CURRENT') }} C\nLEFT JOIN  {{ source('source_dwh_STRP','D_LEGAL_ENTITY_DECRYPTED') }} D  ON C.T_SOURCE_PK_ID = D.T_SOURCE_PK_ID\nWHERE D.ENTERPRISE_SOURCE = 'ALBATROS'\n    AND D.ENTERPRISE_KYC_STATUS = 'APPROVED'\n    AND D.ENTERPRISE_COUNTRY_OF_INCORPORATION not in ('BE','LT', 'RO', 'BG', 'HR')\n    AND C.ENTERPRISE_UPDATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND C.ENTERPRISE_UPDATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n\nORDER BY 2\n),\nsouce_table as(\nSELECT  CMD.* FROM CMD\nUNION ALL\nSELECT\n    ALB.companyid_tobeexcluded,\n    ALB.legal_name,\n    ALB.to_be_reported_in_country\nFROM ALB\nORDER BY 2\n)\nSELECT\n*,\n\"{{period}}\"  AS Period,\nTIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\nTIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\nCURRENT_TIMESTAMP AS load_timestamp,\nFROM souce_table", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_LEGAL_ENTITY_CURRENT"], ["source_dwh_STRP", "D_LEGAL_ENTITY_DECRYPTED"], ["source_dwh_STRP", "D_LEGAL_ENTITY_CURRENT"], ["source_dwh_STRP", "D_LEGAL_ENTITY_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_CURRENT", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCT_IDEAL": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCT_IDEAL", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCT_IDEAL/PCT_IDEAL.sql", "original_file_path": "models/PST3/mart/BE/PCT_IDEAL/PCT_IDEAL.sql", "unique_id": "model.project_dbt.PCT_IDEAL", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCT_IDEAL", "PCT_IDEAL"], "alias": "PCT_IDEAL", "checksum": {"name": "sha256", "checksum": "cb8b74be5b9fa3ea94965a7a2896864d7fcec0d692ed8fd2d16a3f1bcc1fd36e"}, "config": {"enabled": true, "alias": "PCT_IDEAL", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCT_IDEAL/PCT_IDEAL.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCT_IDEAL", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3980362, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCT_IDEAL`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  COALESCE( nullif( d_payment_transaction_info.PAYMENT_TRANSACTION_PAYER_COUNTRY, 'NA'), left(dl_trans_pro.value,2))  AS PAYER_COUNTRY,\n  d_payment_item_info.PAYMENT_ITEM_CURRENCY_CODE AS CURRENCY,\n  COUNT(DISTINCT f_payment_items.T_FACT_KEY) AS VOLUME,\n  ROUND(SUM(f_payment_items.PAYMENT_ITEM_AMOUNT)) AS AMOUNT,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\nFROM {{ source('source_dwh_STRP','D_PAYMENT_ITEM_INFO_DECRYPTED') }}\n    AS d_payment_item_info\nLEFT JOIN {{ source('source_dwh_STRP','F_PAYMENT_TRANSACTIONS') }}\n    AS f_payment_transactions ON d_payment_item_info.T_DIM_KEY = f_payment_transactions.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_PRODUCTS') }}\n    AS d_payment_products ON f_payment_transactions.T_D_PRODUCT_DIM_KEY = d_payment_products.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','F_PAYMENT_ITEMS') }}   AS f_payment_items ON d_payment_item_info.T_DIM_KEY = f_payment_items.T_D_PAYMENT_ITEM_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_MERCHANTS_DECRYPTED') }}\n    AS d_merchants ON f_payment_items.T_D_MERCHANT_DIM_KEY = d_merchants.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_TRANSACTION_INFO_DECRYPTED') }}\n    AS d_payment_transaction_info ON d_payment_transaction_info.T_DIM_KEY =f_payment_transactions.T_D_PAYMENT_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN (\nSELECT\n  transaction_id,\n  key,\n  AEAD.DECRYPT_STRING(k0.KEYSET, value, TO_HEX(_flycs_metadata_keyset_0)) value,\n  from {{ source('source_dl_P1_PSTA','dwh_transaction_properties_current') }}\n  left join {{ source('source_keyset__','merged') }} k0\n  on lower(k0.SOURCE) = \"p1_psta_dwh_transaction_properties\"\n  and _flycs_metadata_keyset_0 = k0.HASH_ID\n  WHERE key = \"PAYER_ACCOUNT_ID\"\n) as dl_trans_pro\n on cast (dl_trans_pro.transaction_id as string) = d_payment_transaction_info.T_SOURCE_PK_ID\nWHERE d_merchants.MERCHANT_COUNTRY  IS NOT NULL\n    and d_payment_products.PRODUCT_CODE = \"IDEAL_COLLECT\"\n    and d_payment_transaction_info.payment_transaction_cutoff_at >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))   -- start of reporting period\n    and d_payment_transaction_info.payment_transaction_cutoff_at <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   -- end of reporting period\nGROUP BY\n    1,\n    2", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], ["source_dwh_STRP", "F_PAYMENT_TRANSACTIONS"], ["source_dwh_STRP", "D_PAYMENT_PRODUCTS"], ["source_dwh_STRP", "F_PAYMENT_ITEMS"], ["source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], ["source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], ["source_dl_P1_PSTA", "dwh_transaction_properties_current"], ["source_keyset__", "merged"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dl_P1_PSTA.dwh_transaction_properties_current", "source.project_dbt.source_keyset__.merged"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCP_POS_ONLINE": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCP_POS_ONLINE", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCP_POS_ONLINE/PCP_POS_ONLINE.sql", "original_file_path": "models/PST3/mart/BE/PCP_POS_ONLINE/PCP_POS_ONLINE.sql", "unique_id": "model.project_dbt.PCP_POS_ONLINE", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCP_POS_ONLINE", "PCP_POS_ONLINE"], "alias": "PCP_POS_ONLINE", "checksum": {"name": "sha256", "checksum": "d7c3634fd4c71162878be13d25a904eff17330ba2c1a8164ec3c8d570f0e67e1"}, "config": {"enabled": true, "alias": "PCP_POS_ONLINE", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCP_POS_ONLINE/PCP_POS_ONLINE.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCP_POS_ONLINE", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.3989282, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCP_POS_ONLINE`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        with pre as (\n SELECT\n   FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE as Counterpart_area,\n   FCT.CARD_TRANSACTION_MERCHANT_COUNTRY_CODE as POS_location,\n   CASE\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'OTHER' then 'non-remote'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE' then 'remote'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL IS NULL then 'non-remote'\n     ELSE 'check the query' end as remote_non_remote_initiation,\n   CASE\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'CHALLENGE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS =  'SUCCESSFUL'\n           then 'SCA is used'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'FRICTIONLESS'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS =  'EXEMPTED'\n           then 'non-SCA is used'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS  in('UNAVAILABLE', 'THREEDS_REQUESTER_SCA_EXEMPTION')\n           or FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS is null\n           then 'non-SCA is used'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'OTHER'\n           AND FCT.CARD_TRANSACTION_PIN_PRESENT is false\n           then 'non-SCA is used'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'OTHER'\n               AND FCT.CARD_TRANSACTION_PIN_PRESENT is true\n               then 'SCA is used'\n   END AS SCA_used,\n   CASE\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'CHALLENGE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS =  'SUCCESS'\n           then 'N/A'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_METHOD = 'FRICTIONLESS'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS =  'EXEMPTED'\n           then 'low value'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS IN('UNAVAILABLE' ,'THREEDS_REQUESTER_SCA_EXEMPTION')\n           AND FCT.CARD_TRANSACTION_ACQUIRER_EXEMPTION = 'RECURRING_PAYMENT'\n           then  'Recurring payment'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS IN('UNAVAILABLE' ,'THREEDS_REQUESTER_SCA_EXEMPTION')\n           AND FCT.CARD_TRANSACTION_ACQUIRER_EXEMPTION = 'MERCHANT_INITIATED_TRANSACTION'\n           then  'Merchant initiated transaction (MIT)'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS IN('UNAVAILABLE' ,'THREEDS_REQUESTER_SCA_EXEMPTION')\n           AND FCT.CARD_TRANSACTION_ACQUIRER_EXEMPTION = 'TRANSACTION_RISK_ANALYSIS'\n           then  'Transaction risk analysis'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS IN('UNAVAILABLE' ,'THREEDS_REQUESTER_SCA_EXEMPTION')\n           AND FCT.CARD_TRANSACTION_ACQUIRER_EXEMPTION = 'SECURE_CORPORATE_PAYMENT'\n           then  'Secure corporate payment processes AND protocols'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'ECOMMERCE'\n           AND FCT.CARD_TRANSACTION_AUTHENTICATION_STATUS IN('UNAVAILABLE' ,'THREEDS_REQUESTER_SCA_EXEMPTION')\n           then  'Others'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'OTHER'\n           AND FCT.CARD_TRANSACTION_PAN_ENTRY_MODE =  'CHIP_CONTACTLESS'\n           AND FCT.CARD_TRANSACTION_PIN_PRESENT is false\n           then 'Contactless low value'\n     WHEN  FCT.CARD_TRANSACTION_PAYMENT_CHANNEL = 'OTHER'\n           AND FCT.CARD_TRANSACTION_PIN_PRESENT  is true then 'N/A'\n     END AS SCA_Exemption_reason,\n     count(*) as number_of_transactions\t,\n     sum (FCT.card_transaction_cleared_amount) + sum(FCT.card_transaction_refunded_amount) as total_sum,\n FROM {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_DECRYPTED') }}  FCT\n LEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD') }} C on FCT.T_D_CI_CARD_DIM_KEY = C.T_DIM_KEY\n LEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_TRANSACTION') }} DCT on DCT.T_DIM_KEY = FCT.T_D_CI_CARD_TRANSACTION_DIM_KEY\n LEFT JOIN {{ source('source_dwh_STRP','F_CI_CARD_TRANSACTION_EVENT') }} FTE on FTE.T_D_CI_CARD_TRANSACTION_DIM_KEY = DCT.T_DIM_KEY\n LEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_TRANSACTION_EVENT') }} DTE on FTE.T_D_CI_CARD_TRANSACTION_EVENT_DIM_KEY = DTE.T_DIM_KEY\n LEFT JOIN {{ source('source_dwh_STRP','D_CI_CARD_PRODUCT_DECRYPTED') }} CP on C.T_D_CI_CARD_PRODUCT_DIM_KEY = CP.T_DIM_KEY\n WHERE FCT.CARD_TRANSACTION_USER_TIME >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n     AND FCT.CARD_TRANSACTION_USER_TIME <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n     AND FTE.TRANSACTION_EVENT_TYPE in ('authorization','refund.authorization')\n     AND FCT.CARD_TRANSACTION_CLEARED_AMOUNT > 0\n     AND DTE.TRANSACTION_EVENT_STATUS = 'COMPLETED'\n     AND FCT.CARD_TRANSACTION_PAYMENT_CHANNEL <> 'ATM'\n     AND CP.CARD_PRODUCT_CARD_COUNTRY = '{{country_code}}'\n     group by 1,2,3,4,5\n ),\n NBB_onegate as (\n       SELECT 'low value' AS sca_reason, 201 AS sca_reason_code\n       UNION ALL\n       SELECT 'Contactless low value', 202\n       UNION ALL\n       SELECT 'Trusted beneficiaries', 204\n       UNION ALL\n       SELECT 'Recurring Payment', 205\n       UNION ALL\n       SELECT 'Unattended terminal for transport fares or parking fees', 206\n       UNION ALL\n       SELECT 'Secure corporate payment processes and protocols', 207\n       UNION ALL\n       SELECT 'Transaction risk analysis', 208\n       UNION ALL\n       SELECT 'Merchant initiated transaction (MIT)', 209\n       UNION ALL\n       SELECT 'Others', 210\n       UNION ALL\n       SELECT 'N/A', 100\n )\n SELECT\n   IF(pre.Counterpart_area = 'BE','W2',\n         IF(map_area.code is null,'G1', pre.Counterpart_area)) AS Counterpart_area_GEO3,\n   IF(pre.POS_location = 'BE','W2',\n         IF(map_location.code is null,'G1', pre.POS_location)) AS POS_location_GEO3,\n   'CPO' as Transaction_type,\n   '2000' as Initiation_channel,\n   if (pre.remote_non_remote_initiation = 'non-remote', 'NR', 'R') AS remoteness,\n   'PCS_ALL' as Scheme,\n   '11' as Card_function,\n   '_Z' as Card_function_irrelevant,\n   NBB_onegate.sca_reason_code as SCA,\n   '_X' as SCA_irrelevant,\n   '_Z'as Fraud_type_irrelevant,\n   pre.number_of_transactions,\n   pre.total_sum,\n   CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n   \"{{period}}\"  AS Period,\n FROM pre\n LEFT JOIN {{ source('source_dm_PPST_BE','PST3_MAPPING') }} map_area\n   ON map_area.code = pre.Counterpart_area\n   AND map_area.type = 'Geographical area'\n LEFT JOIN {{ source('source_dm_PPST_BE','PST3_MAPPING') }} map_location\n   ON map_location.code = pre.POS_location\n   AND map_location.type = 'Geographical area'\n LEFT JOIN NBB_onegate on  NBB_onegate.sca_reason = pre.SCA_Exemption_reason", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_CI_CARD_TRANSACTION_DECRYPTED"], ["source_dwh_STRP", "D_CI_CARD"], ["source_dwh_STRP", "D_CI_CARD_TRANSACTION"], ["source_dwh_STRP", "F_CI_CARD_TRANSACTION_EVENT"], ["source_dwh_STRP", "D_CI_CARD_TRANSACTION_EVENT"], ["source_dwh_STRP", "D_CI_CARD_PRODUCT_DECRYPTED"], ["source_dm_PPST_BE", "PST3_MAPPING"], ["source_dm_PPST_BE", "PST3_MAPPING"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CI_CARD", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT", "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED", "source.project_dbt.source_dm_PPST_BE.PST3_MAPPING"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS/NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS.sql", "original_file_path": "models/PST3/mart/BE/NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS/NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS.sql", "unique_id": "model.project_dbt.NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "fqn": ["project_dbt", "PST3", "mart", "BE", "NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS"], "alias": "NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "checksum": {"name": "sha256", "checksum": "383838a2bb2f6d094f609a81d0a4d853b014e9981706a54b4ac638ceb4c39c35"}, "config": {"enabled": true, "alias": "NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS/NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4000437, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='PST', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    LEFT(t.SERVICE_PROVIDER_PSP_AUTHORITY_ID,2) countryOfAISP,\n    c.consent_iban,\n    \"{{period}}\"  AS Period,\n    TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n    TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\nFROM {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} c\nJOIN {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} cc\n    ON c.T_DIM_KEY = cc.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_ASPSP_TPP') }} t\n    ON c.T_D_ASPSP_TPP_DIM_KEY = t.T_DIM_KEY\nWHERE\n    c.CONSENT_STATUS = 'VALID'\n    AND left(c.consent_iban,2) = '{{country_code}}'\n    AND c.CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND c.CONSENT_EXPIRED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    AND  t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_TPP"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCP_MERCHANT_ACCT_TRX": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCP_MERCHANT_ACCT_TRX", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCP_MERCHANT_ACCT_TRX/PCP_MERCHANT_ACCT_TRX.sql", "original_file_path": "models/PST3/mart/BE/PCP_MERCHANT_ACCT_TRX/PCP_MERCHANT_ACCT_TRX.sql", "unique_id": "model.project_dbt.PCP_MERCHANT_ACCT_TRX", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCP_MERCHANT_ACCT_TRX", "PCP_MERCHANT_ACCT_TRX"], "alias": "PCP_MERCHANT_ACCT_TRX", "checksum": {"name": "sha256", "checksum": "1b7a721d0fa2b9b721369d5a6c7121cd360c3ab9451486f431e9e38b33199b07"}, "config": {"enabled": true, "alias": "PCP_MERCHANT_ACCT_TRX", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCP_MERCHANT_ACCT_TRX/PCP_MERCHANT_ACCT_TRX.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCP_MERCHANT_ACCT_TRX", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4009426, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCP_MERCHANT_ACCT_TRX`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        WITH pre AS(\n  SELECT\n      pcp.PRODUCT,\n      pcp.TRANSACTION_PUBLIC_IDENTIFIER,\n      pcp.PAYERCOUNTRY,\n      pcp.MERCHANTCOUNTRY,\n      pcp.AMOUNT,\n      pcp.CURRENCY,\n      pcp.MERCHANT_PUBLIC_IDENTIFIER,\n      IF(ocs.companyid_tobeexcluded IS NULL, \"BE\", ocs.to_be_reported_in_country) AS TO_BE_REPORTED_IN_COUNTRY,\n      CASE\n          WHEN pcp.PRODUCT = 'BANCONTACT_COLLECT' THEN pcp.PAYERCOUNTRY\n          WHEN pcp.CARD_NETWORK = 'MASTERCARD' THEN pcp.CARD_COUNTRY\n          WHEN pcp.CARD_NETWORK = 'VISA' THEN pcp.CARD_COUNTRY\n          ELSE \"no match\"\n      END AS COUNTERPARTY_AREA,\n      pcp.MERCHANTCOUNTRY AS POS_LOCATION,\n      pcp.CARDFUNCTION,\n      pcp.singleWIP AS WIP_TRANSACTION,\n      Case\n        WHEN PCP.PRODUCT = 'BANCONTACT_COLLECT' THEN 'Bancontact'\n        WHEN PCP.PRODUCT = 'SILVERFLOW_CARDS' AND PCP.CARD_NETWORK = 'MASTERCARD' THEN 'Mastercard'\n        WHEN PCP.PRODUCT = 'SILVERFLOW_CARDS' AND pcp.CARD_NETWORK = 'VISA' THEN 'Visa'\n      END AS CARD_NETWORK,\n      pcp.SCA_REASON,\n      '2000' AS INTTN_CHNNL,\n      'R' AS RMT_INTTN,\n      'PCS_ALL' AS PYMNT_SCHM,\n      '_Z' AS FRD_TYP,\n      pcp.LOAD_TIMESTAMP,\n      pcp.PERIOD,\n      pcp.Period_begin_date,\n      pcp.Period_end_date,\n  FROM {{ ref('PCP') }} AS pcp\n  LEFT JOIN {{ ref('PCP_ALBATROS_CMD_OCS') }} as ocs\n    ON ocs.companyid_tobeexcluded = pcp.TRANSACTION_PUBLIC_IDENTIFIER\n  ),\n  code as(\n  SELECT pre.*,\n   IF(pre.TO_BE_REPORTED_IN_COUNTRY = pre.COUNTERPARTY_AREA,\n        'W2',\n        pre.COUNTERPARTY_AREA) AS AREA_CODE,\n    IF( pre.TO_BE_REPORTED_IN_COUNTRY = pre.POS_LOCATION,\n        'W2',\n        pre.POS_LOCATION) AS LOCATION_CODE,\n    CASE pre.CARDFUNCTION\n      WHEN 'Debit' THEN '11'\n      WHEN 'Credit' THEN '13'\n      WHEN 'Deferred Debit' THEN '12'\n      ELSE '_Z'\n    END AS CRD_FNCTN,\n  FROM pre\n)\nSELECT\n   code.*EXCEPT(AREA_CODE,LOCATION_CODE,LOAD_TIMESTAMP,PERIOD),\n  COALESCE(pst3_cp.CODE, 'Extra EEA')  AS COUNT_AREA,\n  COALESCE(pst3_pos.CODE, 'Extra EEA') AS TRMNL_LCTN,\n  pst3_sca.CODE AS SCA,\n  LOAD_TIMESTAMP,\n  PERIOD,\nFROM code\nLEFT JOIN {{ source('source_dm_PPST_BE','PST3_MAPPING') }} AS pst3_cp\n    ON code.AREA_CODE = pst3_cp.CODE\n    AND pst3_cp.TYPE = 'Geographical area'\nLEFT JOIN {{ source('source_dm_PPST_BE','PST3_MAPPING') }} AS pst3_pos\n    ON code.LOCATION_CODE = pst3_pos.CODE\n    AND pst3_pos.TYPE = 'Geographical area'\nLEFT JOIN {{ source('source_dm_PPST_BE','PST3_MAPPING') }} AS pst3_sca\n    ON code.SCA_REASON = pst3_sca.name\n    AND pst3_sca.TYPE = 'Strong customer authentication (SCA)'", "language": "sql", "refs": [{"name": "PCP", "package": null, "version": null}, {"name": "PCP_ALBATROS_CMD_OCS", "package": null, "version": null}], "sources": [["source_dm_PPST_BE", "PST3_MAPPING"], ["source_dm_PPST_BE", "PST3_MAPPING"], ["source_dm_PPST_BE", "PST3_MAPPING"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dm_PPST_BE.PST3_MAPPING", "model.project_dbt.PCP", "model.project_dbt.PCP_ALBATROS_CMD_OCS"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PI_NUMBER_OF_PAYMENT_ACCOUNTS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PI_NUMBER_OF_PAYMENT_ACCOUNTS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PI_NUMBER_OF_PAYMENT_ACCOUNTS/PI_NUMBER_OF_PAYMENT_ACCOUNTS.sql", "original_file_path": "models/PST3/mart/BE/PI_NUMBER_OF_PAYMENT_ACCOUNTS/PI_NUMBER_OF_PAYMENT_ACCOUNTS.sql", "unique_id": "model.project_dbt.PI_NUMBER_OF_PAYMENT_ACCOUNTS", "fqn": ["project_dbt", "PST3", "mart", "BE", "PI_NUMBER_OF_PAYMENT_ACCOUNTS", "PI_NUMBER_OF_PAYMENT_ACCOUNTS"], "alias": "PI_NUMBER_OF_PAYMENT_ACCOUNTS", "checksum": {"name": "sha256", "checksum": "16bbbca332c230451d6ad73df23f68bae9c78cd425483dac545d1d587135bc62"}, "config": {"enabled": true, "alias": "PI_NUMBER_OF_PAYMENT_ACCOUNTS", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PI_NUMBER_OF_PAYMENT_ACCOUNTS/PI_NUMBER_OF_PAYMENT_ACCOUNTS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PI_NUMBER_OF_PAYMENT_ACCOUNTS", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4020693, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PI_NUMBER_OF_PAYMENT_ACCOUNTS`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  COUNT(*) AS d_ibis_account_count_ibis_accounts,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  CAST(NULL AS TIMESTAMP) AS Period_begin_date,\n  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}')) AS Period_end_date,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS ibis\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS bank\n    ON ibis.T_D_BANK_ACCOUNT_DIM_KEY = bank.T_DIM_KEY\nWHERE\n    ibis.ACCOUNT_TYPE  in ('PAYMENT')\n    AND ibis.ACCOUNT_IS_CUSTOMER_ACCOUNT IS TRUE\n    AND bank.FINANCIAL_INSTITUTION_COUNTRY_CODE IN ('BE', 'LT', 'RO', 'HR', 'BG')\n    AND (\n        ibis.ACCOUNT_STATUS = 'OPEN'\n        OR ( ibis.ACCOUNT_STATUS = 'CLOSED'\n           AND TIMESTAMP(ibis.ACCOUNT_UPDATED_AT) > TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n         )\n        )\n    -- Anca & Kris noticed that the for 269 accounts, the account_update_timestamp does not reflect the last_update_date of IBISv2 accounts table. Mail sent to Kathleen 25/08/23\n    -- the v2 query gave 67 accounts less for 2023 S1 due to this difference\n    AND TIMESTAMP(ibis.ACCOUNT_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  --pt winter time", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PCT_OUTBOUND": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PCT_OUTBOUND", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PCT_OUTBOUND/PCT_OUTBOUND.sql", "original_file_path": "models/PST3/mart/BE/PCT_OUTBOUND/PCT_OUTBOUND.sql", "unique_id": "model.project_dbt.PCT_OUTBOUND", "fqn": ["project_dbt", "PST3", "mart", "BE", "PCT_OUTBOUND", "PCT_OUTBOUND"], "alias": "PCT_OUTBOUND", "checksum": {"name": "sha256", "checksum": "746c77fa82ee5a3aa0393c0b4d3cf85601aa31f4c2411bee6d6b3d3781ef0198"}, "config": {"enabled": true, "alias": "PCT_OUTBOUND", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PCT_OUTBOUND/PCT_OUTBOUND.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PCT_OUTBOUND", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4032862, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PCT_OUTBOUND`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n    CASE\n        WHEN f_account_transactions.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'Paper-based form'\n        WHEN f_account_transactions.TRANSACTION_CHANNEL in ('TPP', 'OCS', 'H2H') THEN 'Electronic'\n        WHEN f_account_transactions.TRANSACTION_CHANNEL IS NULL THEN 'not applicable - return'\n        ELSE 'check the query'\n    END INITIATIONCHANNEL,\n    CASE\n        WHEN f_account_transactions.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'not applicable'\n        WHEN f_account_transactions.TRANSACTION_CHANNEL in ('TPP') THEN 'SCA'\n        WHEN f_account_transactions.TRANSACTION_CHANNEL in ('OCS') AND TRANSACTION_CREDITOR_REFERENCE_VALUE like 'REF.%/%/%' THEN 'Trusted Beneficiaries exemption'\n        WHEN f_account_transactions.TRANSACTION_CHANNEL in ('OCS') AND TRANSACTION_END_TO_END_ID like 'CAF%' THEN 'SCA'\n        WHEN f_account_transactions.TRANSACTION_CHANNEL = 'H2H' THEN 'secure corp process exemption'\n        WHEN f_account_transactions.TRANSACTION_CHANNEL IS NULL THEN 'not applicable - return'\n        ELSE 'check the query'\n    END SCAINDICATOR,\n    d_counterparty_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PAYEE_PSP_COUNTRY,\n    COUNT(DISTINCT f_account_transactions.T_SOURCE_PK_ID) AS OUTBOUND_IBIS_PAYMENTS_TRX_COUNT,\n    COALESCE(SUM(f_account_transactions.TRANSACTION_AMOUNT), 0) AS OUTBOUND_IBIS_PAYMENTS_AMOUNT_SUM_IN_EUR,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n    \"{{period}}\"  AS Period,\n    TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n    TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS f_account_transactions\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS d_account_transaction ON f_account_transactions.T_D_ACCOUNT_TRANSACTION_DIM_KEY = d_account_transaction.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS d_ibis_account ON f_account_transactions.T_D_IBIS_ACCOUNT_DIM_KEY = d_ibis_account.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_bank_accounts ON d_ibis_account.T_D_BANK_ACCOUNT_DIM_KEY = d_bank_accounts.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_counterparty_bank_accounts ON d_counterparty_bank_accounts.T_DIM_KEY = f_account_transactions.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE f_account_transactions.TRANSACTION_DIRECTION = \"OUTBOUND\"\n    AND f_account_transactions.TRANSACTION_TYPE = 'REGULAR'\n    AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    AND d_account_transaction.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n    AND d_ibis_account.ACCOUNT_TYPE = 'PAYMENT'\n    AND f_account_transactions.TRANSACTION_CHANNEL <> 'CARDS'\n    AND f_account_transactions.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND d_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE IN ('BE', 'BG', 'LT', 'PL', 'RO', 'HR')\nGROUP BY 1, 2, 3", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PIS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PIS/PIS.sql", "original_file_path": "models/PST3/mart/BE/PIS/PIS.sql", "unique_id": "model.project_dbt.PIS", "fqn": ["project_dbt", "PST3", "mart", "BE", "PIS", "PIS"], "alias": "PIS", "checksum": {"name": "sha256", "checksum": "da8cd4a2fef411e2bd18929358eaae62aad9273c81883eba689ce3bceefced43"}, "config": {"enabled": true, "alias": "PIS", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PIS/PIS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PIS", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4044275, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PIS`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        with pre_source AS(\n  SELECT\n  'Banqup applications' as TYPEOFAPPLICATION,\n  IT.INBOUND_TRANSACTION_CURRENCY_CODE  AS CURRENCY,\n  credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE AS COUNTERPARTY_COUNTRY,\n  COUNT(*)  AS SUCCESS_TRX_COUNT,\n  SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS SUCCESS_TRX_SUMMED_VALUE,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n    ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n    ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n    ON IP.T_DIM_KEY=IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n    ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n    ON IP.T_DIM_KEY=PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n    ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS debacc\n    ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n    ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\nWHERE FI.FINANCIAL_INSTITUTION_CODE  <> 'IBIS'\n    AND PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n    AND (\n        APP.APPLICATION_NAME  = 'PAY-PXG-COMMUNITY'\n        OR APP.APPLICATION_NAME = 'PAY-PXG-GOCOMPTA'\n        OR (\n            APP.APPLICATION_NAME = 'PAY-PXG-JEFACTURE'\n            AND (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = \"FR\"\n                AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER ,5,3) = '504'))\n        OR APP.APPLICATION_NAME = 'PAY-PXG-BANQUPLT'\n        OR APP.APPLICATION_NAME = 'PAY-PXG-BANQUPBG'\n        OR APP.APPLICATION_NAME = 'PAY-PXG-BANQUPHR'\n        OR APP.APPLICATION_NAME = 'PAY-PXG-BANQUPRO')\n    AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  --pt winter time\n    AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\n\n\nGROUP BY 1, 2, 3\n\nUNION ALL\n\nSELECT\n      'OCS application' AS TYPEOFAPPLICATION,\n      IT.INBOUND_TRANSACTION_CURRENCY_CODE AS CURRENCY,\n      credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE AS COUNTERPARTY_COUNTRY,\n      COUNT(*)  AS SUCCESS_TRX_COUNT,\n      SUM(IT.INBOUND_TRANSACTION_AMOUNT) AS SUCCESS_TRX_SUMMED_VALUE,\n      CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n      \"{{period}}\"  AS Period,\n      TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  AS Period_begin_date,\n      TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))  AS Period_end_date,\nFROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_CURRENT') }} AS IP\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS FP\n    ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS FI\n    ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} AS IT\n    ON IP.T_DIM_KEY = IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} AS DIT\n    ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS') }} AS PI\n    ON IP.T_DIM_KEY = PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS APP\n    ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} debacc\n    ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n    ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\n\nWHERE\n  PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n  AND APP.APPLICATION_NAME  = 'PAY-PXG-OCS'\n  AND FI.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'FR' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,5) = '27933')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'DE' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,8) = '50339900')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'EE' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,2) = '72')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'ES' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,4) = '6918')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'IT' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,5) = '36330')\n  -- AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'LT' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,5) = '39816')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'LU' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,3) = '625')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'LV' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,4) = 'PANX')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'NL' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,4) = 'PANX')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'PT' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,4) = '5845')\n  AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'SK' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,4) = '9955')\n  -- AND NOT (credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'RO' AND  SUBSTR( credacc.BANK_ACCOUNT_NUMBER,5,4) = 'PANX')\n  AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))  --pt winter time\n  AND TIMESTAMP(DIT.INBOUND_TRANSACTION_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))   --pt winter time\n\nGROUP BY 1, 2, 3\nORDER BY 4 DESC\n),\n  country_mapping AS (\n      SELECT 'Bulgaria' AS country, 'BG' AS code UNION ALL\n      SELECT 'Croatia', 'HR' UNION ALL\n      SELECT 'Cyprus', 'CY' UNION ALL\n      SELECT 'Czechia', 'CZ' UNION ALL\n      SELECT 'Denmark', 'DK' UNION ALL\n      SELECT 'Estonia', 'EE' UNION ALL\n      SELECT 'Finland', 'FI' UNION ALL\n      SELECT 'France', 'FR' UNION ALL\n      SELECT 'Germany', 'DE' UNION ALL\n      SELECT 'Greece', 'GR' UNION ALL\n      SELECT 'Hungary', 'HU' UNION ALL\n      SELECT 'Ireland', 'IE' UNION ALL\n      SELECT 'Italy', 'IT' UNION ALL\n      SELECT 'Latvia', 'LV' UNION ALL\n      SELECT 'Lithuania', 'LT' UNION ALL\n      SELECT 'Luxembourg', 'LU' UNION ALL\n      SELECT 'Malta', 'MT' UNION ALL\n      SELECT 'Netherlands', 'NL' UNION ALL\n      SELECT 'Poland', 'PL' UNION ALL\n      SELECT 'Portugal', 'PT' UNION ALL\n      SELECT 'Romania', 'RO' UNION ALL\n      SELECT 'Slovakia', 'SK' UNION ALL\n      SELECT 'Slovenia', 'SI' UNION ALL\n      SELECT 'Spain', 'ES' UNION ALL\n      SELECT 'Sweden', 'SE' UNION ALL\n      SELECT 'Iceland', 'IS' UNION ALL\n      SELECT 'Liechtenstein', 'LI' UNION ALL\n      SELECT 'Norway', 'NO' UNION ALL\n      SELECT 'Belgium', 'BE' UNION ALL\n      SELECT 'Extra EEA', ''\n\n  )\n  SELECT\n      pre_source.* EXCEPT(PERIOD),\n      country,\n      PERIOD,\n  FROM pre_source\n  LEFT JOIN country_mapping on country_mapping.code =pre_source.COUNTERPARTY_COUNTRY", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_BE", "name": "PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/BE/PI_PXG_AIS_JeF_with_BE_IBIS_IBAN/PI_PXG_AIS_JeF_with_BE_IBIS_IBAN.sql", "original_file_path": "models/PST3/mart/BE/PI_PXG_AIS_JeF_with_BE_IBIS_IBAN/PI_PXG_AIS_JeF_with_BE_IBIS_IBAN.sql", "unique_id": "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "fqn": ["project_dbt", "PST3", "mart", "BE", "PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "PI_PXG_AIS_JeF_with_BE_IBIS_IBAN"], "alias": "PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "checksum": {"name": "sha256", "checksum": "b85320b67d671a886e9a59ee9c790fd88700f1de49f9d67f1b67e852fc0556ac"}, "config": {"enabled": true, "alias": "PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "schema": "dm_pst3_BE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/BE/PI_PXG_AIS_JeF_with_BE_IBIS_IBAN/PI_PXG_AIS_JeF_with_BE_IBIS_IBAN.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_BE", "alias": "PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.405564, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_BE`.`PI_PXG_AIS_JeF_with_BE_IBIS_IBAN`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'BE' -%}\n\n\n        SELECT\n  a.APPLICATION_NAME AS Application_name,\n  aa.APPLICATION_ACCOUNT_NAME Application_account_name,\n  aa.T_SOURCE_PK_ID as Application_account_id ,\n  \"{{period}}\"  AS Period,\n  CURRENT_TIMESTAMP AS load_timestamp,\n  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}')) AS Period_begin_date,\n  CAST(NULL AS TIMESTAMP) AS Period_end_date,\nFROM {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_CURRENT') }} AS ac\nJOIN {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_DECRYPTED') }} acd\n  ON acd.T_DIM_KEY = ac.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_DECRYPTED') }}\n  AS pa ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }}\n  AS fp ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }}\n  AS fi ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO_CURRENT') }}\n  AS c ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }}\n  AS aa ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }}\n  AS a ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\nJOIN {{ source('source_dwh_STRP','D_APPLICATION_OWNERS_DECRYPTED') }}\n  AS ao ON a.T_D_OWNER_DIM_KEY =  ao.T_DIM_KEY\nWHERE\n    a.APPLICATION_NAME = 'PAY-PXG-JEFACTURE'\nAND fi.FINANCIAL_INSTITUTION_COUNTRY = 'BE'\nAND fi.FINANCIAL_INSTITUTION_CODE = 'IBIS'\nAND (\n  ac.ACCESS_CONSENT_STATUS = 'ACTIVE'\n  OR (\n    ac.ACCESS_CONSENT_STATUS = 'OBSOLETE'\n    AND TIMESTAMP(ac.ACCESS_CONSENT_STATUS_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  ) --==> always start of the period\n)", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], ["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO_CURRENT"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATION_OWNERS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS/58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS.sql", "original_file_path": "models/PST3/mart/IT/58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS/58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS.sql", "unique_id": "model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "fqn": ["project_dbt", "PST3", "mart", "IT", "58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS"], "alias": "58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "checksum": {"name": "sha256", "checksum": "90efa83e9b2c342f6e094cdee8ada5120d3129952190dc25ae99a24d91e49575"}, "config": {"enabled": true, "alias": "58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS/58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4069614, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        WITH credit_transfers as (\n  SELECT\n  DBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS Payer_PSP_country,\n  IA.ACCOUNT_MASTER_DATA_ID as account_master_data_id_4lookup,\n  case when FAB.BALANCE_AMOUNT < 12500 then '66'\n        when FAB.BALANCE_AMOUNT between 12500 and 50000 then '67'\n        when FAB.BALANCE_AMOUNT > 50000 then '89'\n  end balance_class,\n  FAT.TRANSACTION_AMOUNT AS amount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  FROM  {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\n  LEFT JOIN  {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n    ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\n  LEFT JOIN  {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n    ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n  INNER JOIN  {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n    ON IA.T_D_BANK_ACCOUNT_DIM_KEY = CBA.T_DIM_KEY\n  LEFT JOIN  {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS DBA\n    ON DBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  INNER JOIN  {{ source('source_dwh_STRP','F_ACCOUNT_BALANCE') }} FAB\n    on FAB.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n  WHERE FAT.TRANSACTION_DIRECTION = \"INBOUND\"\n      AND FAT.TRANSACTION_TYPE = 'REGULAR'\n      AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n      AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n      AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n      AND IA.ACCOUNT_TYPE = 'PAYMENT'\n      AND FAT.TRANSACTION_BANK_FAMILY = 'RCDT'\n      AND CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE IN ('{{country_code}}')\n      AND  FAB.BALANCE_DATE = (\n        SELECT max(max.BALANCE_DATE)\n        FROM  {{ source('source_dwh_STRP','F_ACCOUNT_BALANCE') }} max\n        JOIN  {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} a\n          ON FAB.T_D_IBIS_ACCOUNT_DIM_KEY = a.T_DIM_KEY\n        WHERE TIMESTAMP(max.BALANCE_DATE) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n        )\n  ),\ncmd as (\n  SELECT\n        P.T_SOURCE_PK_ID as account_Master_Data_Id_4lookup_cmd,\n        L.ENTERPRISE_COUNTRY_OF_INCORPORATION,\n        L.ENTERPRISE_PROVINCE_OF_INCORPORATION,\n        --ba.code as \"\"NACEcodeToBeMappedToSettore\"\" ==> to add by CMD team (dragos)\n    FROM  {{ source('source_dwh_STRP','D_PAYMENT_ACCOUNT_CURRENT') }} P\n    inner join {{ source('source_dwh_STRP','F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES') }} LPR on LPR.T_D_PAYMENT_ACCOUNT_DIM_KEY = P.T_DIM_KEY\n    inner join {{ source('source_dwh_STRP','D_LEGAL_ENTITY_DECRYPTED') }} L on LPR.T_D_LEGAL_ENTITY_DIM_KEY = L.T_DIM_KEY\n    WHERE\n            LPR.ROLE = 'ACCOUNT_HOLDER'\n      -- AND  ba.main is true ==> to add by CMD team (dragos)\n      and L.ENTERPRISE_COUNTRY_OF_INCORPORATION = '{{country_code}}'\n)\nSELECT * FROM credit_transfers\ninner join cmd\non credit_transfers.account_master_data_id_4lookup = cmd.account_Master_Data_Id_4lookup_cmd", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_BALANCE"], ["source_dwh_STRP", "F_ACCOUNT_BALANCE"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES"], ["source_dwh_STRP", "D_LEGAL_ENTITY_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS/58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS.sql", "original_file_path": "models/PST3/mart/IT/58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS/58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS.sql", "unique_id": "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "fqn": ["project_dbt", "PST3", "mart", "IT", "58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS"], "alias": "58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "checksum": {"name": "sha256", "checksum": "453e4e438f762bd16953dd2177e1c2e847f2565f9378bdada71474e2e80058ad"}, "config": {"enabled": true, "alias": "58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS/58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4081118, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        WITH credit_transfers as\n  (\n  SELECT\n    CASE\n        WHEN FAT.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'WITH TRADITIONAL MODES'\n        WHEN FAT.TRANSACTION_CHANNEL in ('TPP', 'OCS', 'H2H') THEN 'WITH AUTOMATED MODES'\n    END Entrymode,\n    CASE\n        WHEN FAT.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER', 'TPP','OCS') THEN 'Single entry'\n        WHEN FAT.TRANSACTION_CHANNEL in ('H2H') THEN 'Batch entry'\n    END BatchMode,\n    CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS Payee_PSP_country,\n    IA.ACCOUNT_MASTER_DATA_ID as account_master_data_id_4lookup,\n    case when FAB.BALANCE_AMOUNT < 12500 then '66'\n          when FAB.BALANCE_AMOUNT between 12500 and 50000 then '67'\n          when FAB.BALANCE_AMOUNT > 50000 then '89'\n    end balance_class,\n    FAT.TRANSACTION_AMOUNT AS amount,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n    \"{{period}}\"  AS Period,\n\n    FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\n    LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n      ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\n    LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n      ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n    JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n      ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\n    LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n      ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n    JOIN {{ source('source_dwh_STRP','F_ACCOUNT_BALANCE') }} FAB\n      ON FAB.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n    WHERE FAT.TRANSACTION_DIRECTION = \"OUTBOUND\"\n      AND FAT.TRANSACTION_TYPE = 'REGULAR'\n      AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n      AND IA.ACCOUNT_TYPE = 'PAYMENT'\n      AND  FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n      AND FAT.TRANSACTION_CHANNEL <> 'CARDS'\n      AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE IN ('{{country_code}}')\n      AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n      AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n      AND  FAB.BALANCE_DATE =\n      (\n          SELECT max(max.BALANCE_DATE)\n          FROM  {{ source('source_dwh_STRP','F_ACCOUNT_BALANCE') }} max\n          JOIN  {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} a\n            ON max.T_D_IBIS_ACCOUNT_DIM_KEY = a.T_DIM_KEY\n          WHERE TIMESTAMP(max.BALANCE_DATE) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n      )\n  ),\n  cmd as (\n    SELECT\n          P.T_SOURCE_PK_ID as account_Master_Data_Id_4lookup_cmd,\n          L.ENTERPRISE_COUNTRY_OF_INCORPORATION,\n          L.ENTERPRISE_PROVINCE_OF_INCORPORATION,\n          --ba.code as \"\"NACEcodeToBeMappedToSettore\"\" ==> to add by CMD team (dragos)\n      FROM  {{ source('source_dwh_STRP','D_PAYMENT_ACCOUNT_CURRENT') }} P\n      inner join {{ source('source_dwh_STRP','F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES') }} LPR\n      on LPR.T_D_PAYMENT_ACCOUNT_DIM_KEY = P.T_DIM_KEY\n      inner join {{ source('source_dwh_STRP','D_LEGAL_ENTITY_DECRYPTED') }} L\n      on LPR.T_D_LEGAL_ENTITY_DIM_KEY = L.T_DIM_KEY\n      WHERE\n              LPR.ROLE = 'ACCOUNT_HOLDER'\n        -- AND  ba.main is true ==> to add by CMD team (dragos)\n        and L.ENTERPRISE_COUNTRY_OF_INCORPORATION = '{{country_code}}'\n  )\n  SELECT * FROM credit_transfers\n  inner join cmd\n  on credit_transfers.account_master_data_id_4lookup = cmd.account_Master_Data_Id_4lookup_cmd", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_BALANCE"], ["source_dwh_STRP", "F_ACCOUNT_BALANCE"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES"], ["source_dwh_STRP", "D_LEGAL_ENTITY_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.52525_FLOW_OF_NEW_CONTRACTS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "52525_FLOW_OF_NEW_CONTRACTS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/52525_FLOW_OF_NEW_CONTRACTS/52525_FLOW_OF_NEW_CONTRACTS.sql", "original_file_path": "models/PST3/mart/IT/52525_FLOW_OF_NEW_CONTRACTS/52525_FLOW_OF_NEW_CONTRACTS.sql", "unique_id": "model.project_dbt.52525_FLOW_OF_NEW_CONTRACTS", "fqn": ["project_dbt", "PST3", "mart", "IT", "52525_FLOW_OF_NEW_CONTRACTS", "52525_FLOW_OF_NEW_CONTRACTS"], "alias": "52525_FLOW_OF_NEW_CONTRACTS", "checksum": {"name": "sha256", "checksum": "3f841d51926dc95a78f57ddc1d48adb722cf927de86655b50b27340378ed8e9f"}, "config": {"enabled": true, "alias": "52525_FLOW_OF_NEW_CONTRACTS", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/52525_FLOW_OF_NEW_CONTRACTS/52525_FLOW_OF_NEW_CONTRACTS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "52525_FLOW_OF_NEW_CONTRACTS", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4092207, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`52525_FLOW_OF_NEW_CONTRACTS`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        select\n  count(*) AS number_of_new_contracts,\n  CURRENT_TIMESTAMP AS Load_timestamp,\n  \"{{period}}\"  AS Period,\nfrom {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\nWHERE\n  iacc.ACCOUNT_TYPE = \"PAYMENT\"\n  AND  iacc.ACCOUNT_COUNTRY_CODE = '{{country_code}}'\n  AND iacc.ACCOUNT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND iacc.ACCOUNT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  AND iacc.ACCOUNT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND iacc.ACCOUNT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58724_CREDIT_TRANSFERS_SINGLE_BASIS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58724_CREDIT_TRANSFERS_SINGLE_BASIS/58724_CREDIT_TRANSFERS_SINGLE_BASIS.sql", "original_file_path": "models/PST3/mart/IT/58724_CREDIT_TRANSFERS_SINGLE_BASIS/58724_CREDIT_TRANSFERS_SINGLE_BASIS.sql", "unique_id": "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS", "fqn": ["project_dbt", "PST3", "mart", "IT", "58724_CREDIT_TRANSFERS_SINGLE_BASIS", "58724_CREDIT_TRANSFERS_SINGLE_BASIS"], "alias": "58724_CREDIT_TRANSFERS_SINGLE_BASIS", "checksum": {"name": "sha256", "checksum": "8698d130852ed924e3cfeab523b57195cbd537bc32e6a75b8d162b454b50d165"}, "config": {"enabled": true, "alias": "58724_CREDIT_TRANSFERS_SINGLE_BASIS", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58724_CREDIT_TRANSFERS_SINGLE_BASIS/58724_CREDIT_TRANSFERS_SINGLE_BASIS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58724_CREDIT_TRANSFERS_SINGLE_BASIS", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4103348, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58724_CREDIT_TRANSFERS_SINGLE_BASIS`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        SELECT\n    CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS Payee_PSP_country,\n    IA.ACCOUNT_MASTER_DATA_ID as account_master_data_id_4lookup,\n    FAT.TRANSACTION_AMOUNT AS amount,\n    CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n    \"{{period}}\"  AS Period,\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n    ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n    ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n  JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n    ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n    ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n\n  WHERE FAT.TRANSACTION_DIRECTION = \"OUTBOUND\"\n    AND FAT.TRANSACTION_TYPE = 'REGULAR'\n    AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n    AND IA.ACCOUNT_TYPE = 'PAYMENT'\n    AND FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND FAT.TRANSACTION_CHANNEL <> 'CARDS'\n    AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n    AND FAT.TRANSACTION_CHANNEL not in ('H2H')", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58746_PAYMENT_INITIATIONS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58746_PAYMENT_INITIATIONS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58746_PAYMENT_INITIATIONS/58746_PAYMENT_INITIATIONS.sql", "original_file_path": "models/PST3/mart/IT/58746_PAYMENT_INITIATIONS/58746_PAYMENT_INITIATIONS.sql", "unique_id": "model.project_dbt.58746_PAYMENT_INITIATIONS", "fqn": ["project_dbt", "PST3", "mart", "IT", "58746_PAYMENT_INITIATIONS", "58746_PAYMENT_INITIATIONS"], "alias": "58746_PAYMENT_INITIATIONS", "checksum": {"name": "sha256", "checksum": "25127aa46aebf73bcd29c5e658f640adc4ea401a74599b33faa4da11a5ae9110"}, "config": {"enabled": true, "alias": "58746_PAYMENT_INITIATIONS", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58746_PAYMENT_INITIATIONS/58746_PAYMENT_INITIATIONS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58746_PAYMENT_INITIATIONS", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.411548, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58746_PAYMENT_INITIATIONS`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        SELECT\n  IF(credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', '1','2') as residency,\n  credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE as counterparty_country,\n  IF(IT.INBOUND_TRANSACTION_CURRENCY_CODE = 'EUR', '1','2') as currencyType,\n  count(*)  AS success_trx_count,\n  sum(IT.INBOUND_TRANSACTION_AMOUNT) AS success_trx_summed_value,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM  {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_DECRYPTED') }} as IP\nLEFT JOIN  {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} FP\n    ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\nLEFT JOIN  {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} FI\n    ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\nLEFT JOIN  {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} as IT\n    ON IP.T_DIM_KEY=IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\nINNER JOIN  {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} as DIT\n    ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\nLEFT JOIN  {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS_CURRENT') }} as PI\n    ON IP.T_DIM_KEY=PI.T_D_INBOUND_PAYMENT_DIM_KEY\nLEFT JOIN  {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} as APP\n    ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\nLEFT JOIN  {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} debacc\n    ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\nLEFT JOIN  {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n    ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\n  WHERE FI.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n    AND PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n    AND (\n      APP.APPLICATION_NAME = 'PAY-PXG-BANQUPIT'\n      OR (\n          APP.APPLICATION_NAME = 'PAY-PXG-OCS'\n          AND credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE = 'IT'\n          AND substr( credacc.BANK_ACCOUNT_NUMBER,5,5)= '36330'\n         )\n      )\n    AND DIT.INBOUND_TRANSACTION_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND DIT.INBOUND_TRANSACTION_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2,3", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS_CURRENT"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58788_AIS_USERS_AND_ACCOUNT": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58788_AIS_USERS_AND_ACCOUNT", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58788_AIS_USERS_AND_ACCOUNT/58788_AIS_USERS_AND_ACCOUNT.sql", "original_file_path": "models/PST3/mart/IT/58788_AIS_USERS_AND_ACCOUNT/58788_AIS_USERS_AND_ACCOUNT.sql", "unique_id": "model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "fqn": ["project_dbt", "PST3", "mart", "IT", "58788_AIS_USERS_AND_ACCOUNT", "58788_AIS_USERS_AND_ACCOUNT"], "alias": "58788_AIS_USERS_AND_ACCOUNT", "checksum": {"name": "sha256", "checksum": "3edcc31c56073f5d5b08c05fee89d735c5c595ddfd441e67dbee95534116d3ab"}, "config": {"enabled": true, "alias": "58788_AIS_USERS_AND_ACCOUNT", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58788_AIS_USERS_AND_ACCOUNT/58788_AIS_USERS_AND_ACCOUNT.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58788_AIS_USERS_AND_ACCOUNT", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4126894, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58788_AIS_USERS_AND_ACCOUNT`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        WITH obsolete_and_active_consents_count_in_reporting_period AS (\nSELECT\n  '86' as CountryOfAISP,\n  ac.USER_TOKEN,\n  COUNT(*) AS number_of_consents,\nFROM  {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_CURRENT') }} AS ac\ninner JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_CURRENT') }} AS pa\n  ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n  ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n  ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n  ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n  ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n  ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\nWHERE a.APPLICATION_NAME in ('PAY-PXG-BANQUPIT')\n    AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS' -- consents on UPP's own accounts are not counted\n    AND (\n        (ac.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n            AND ac.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n        )\n        OR (ac.ACCESS_CONSENT_STATUS_AT > TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n            AND ac.ACCESS_CONSENT_STATUS_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n            )\n    )\nGROUP BY\n            CountryOfAISP,\n            ac.USER_TOKEN\n)\nSELECT\nCountryOfAISP,\nCOUNT(DISTINCT USER_TOKEN) AS unique_users_count_in_period,\nCURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n\"{{period}}\"  AS Period,\nFROM obsolete_and_active_consents_count_in_reporting_period\nGROUP BY CountryOfAISP\norder by CountryOfAISP asc", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58789_AIS_USERS_AND_ACCOUNT", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58789_AIS_USERS_AND_ACCOUNT/58789_AIS_USERS_AND_ACCOUNT.sql", "original_file_path": "models/PST3/mart/IT/58789_AIS_USERS_AND_ACCOUNT/58789_AIS_USERS_AND_ACCOUNT.sql", "unique_id": "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "fqn": ["project_dbt", "PST3", "mart", "IT", "58789_AIS_USERS_AND_ACCOUNT", "58789_AIS_USERS_AND_ACCOUNT"], "alias": "58789_AIS_USERS_AND_ACCOUNT", "checksum": {"name": "sha256", "checksum": "a2947e09aefcc791702be599155e35b178e62ab5360d4e74ca12d01e897ea555"}, "config": {"enabled": true, "alias": "58789_AIS_USERS_AND_ACCOUNT", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58789_AIS_USERS_AND_ACCOUNT/58789_AIS_USERS_AND_ACCOUNT.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58789_AIS_USERS_AND_ACCOUNT", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.413812, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58789_AIS_USERS_AND_ACCOUNT`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        SELECT\n  '86' as CountryOfAISP,\n  pa.T_SOURCE_PK_ID as account_id,\n  COUNT(*) AS number_of_consents,\n  COUNT(DISTINCT pa.T_SOURCE_PK_ID) AS unique_accounts_count_in_period,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM  {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO_CURRENT') }} AS ac\ninner JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_CURRENT') }} AS pa\n  ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n  ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n  ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n  ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n  ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\ninner JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n  ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\nWHERE a.APPLICATION_NAME in ('PAY-PXG-BANQUPIT')\n  AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS' -- consents on UPP's own accounts are not counted\n  AND (\n    (ac.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n        AND ac.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n    )\n    OR (ac.ACCESS_CONSENT_STATUS_AT > TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n        AND ac.ACCESS_CONSENT_STATUS_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n        )\n  )\nGROUP BY account_id", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.52505_NR_OF_ACCOUNTS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "52505_NR_OF_ACCOUNTS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/52505_NR_OF_ACCOUNTS/52505_NR_OF_ACCOUNTS.sql", "original_file_path": "models/PST3/mart/IT/52505_NR_OF_ACCOUNTS/52505_NR_OF_ACCOUNTS.sql", "unique_id": "model.project_dbt.52505_NR_OF_ACCOUNTS", "fqn": ["project_dbt", "PST3", "mart", "IT", "52505_NR_OF_ACCOUNTS", "52505_NR_OF_ACCOUNTS"], "alias": "52505_NR_OF_ACCOUNTS", "checksum": {"name": "sha256", "checksum": "3fdbe0239c53a145271ce31e84cba49a9cc580f04ba447c3afd93abafb8753d4"}, "config": {"enabled": true, "alias": "52505_NR_OF_ACCOUNTS", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/52505_NR_OF_ACCOUNTS/52505_NR_OF_ACCOUNTS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "52505_NR_OF_ACCOUNTS", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.41495, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`52505_NR_OF_ACCOUNTS`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        SELECT\n    IF(FAB.BALANCE_AMOUNT <= 100,'small balance', 'big balance') AS balance_size,\n    iacc.account_currency,\n    count(*) AS amount,\n    ceil(sum (FAB.BALANCE_AMOUNT)) as booked_balance,\n    CURRENT_TIMESTAMP AS Load_timestamp,\n    \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_BALANCE') }} FAB\nJOIN  {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} iacc\n  on FAB.T_D_IBIS_ACCOUNT_DIM_KEY = iacc.T_DIM_KEY\nWHERE\n      iacc.ACCOUNT_TYPE = \"PAYMENT\"\n  AND  iacc.ACCOUNT_COUNTRY_CODE = '{{country_code}}'\n  AND  (\n    iacc.ACCOUNT_STATUS = 'OPEN'\n    OR (\n      iacc.ACCOUNT_STATUS = 'CLOSED'\n      AND iacc.ACCOUNT_UPDATED_AT > TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n      )\n  )\n  AND iacc.ACCOUNT_UPDATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  AND FAB.BALANCE_DATE = (\n      SELECT max(BALANCE_DATE)\n      FROM {{ source('source_dwh_STRP','F_ACCOUNT_BALANCE') }} max\n      JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }}  a\n        ON max.T_D_IBIS_ACCOUNT_DIM_KEY = a.T_DIM_KEY\n        WHERE TIMESTAMP(max.BALANCE_DATE) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  )\ngroup by 1,2", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_BALANCE"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "F_ACCOUNT_BALANCE"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK.sql", "original_file_path": "models/PST3/mart/IT/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK.sql", "unique_id": "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "fqn": ["project_dbt", "PST3", "mart", "IT", "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK"], "alias": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "checksum": {"name": "sha256", "checksum": "42848e246204f4d9e63585db8df3fb78d923ec8c30b3785d0a695f7dd2905ef8"}, "config": {"enabled": true, "alias": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4161663, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        SELECT\n  D.T_SOURCE_PK_ID,\n  D.T_SOURCE_PK_UUID,\n  D.SERVICE_PROVIDER_VERSION ,\n  D.SERVICE_PROVIDER_ACTIVE ,\n  D.SERVICE_PROVIDER_PSP_AUTHORITY_ID ,\n  D.SERVICE_PROVIDER_DISPLAY_NAME,\n  D.SERVICE_PROVIDER_CREATED_AT,\n  D.SERVICE_PROVIDER_UPDATED_AT,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\nFROM {{ source('source_dwh_STRP','D_ASPSP_TPP_CURRENT') }} C\nJOIN  {{ source('source_dwh_STRP','D_ASPSP_TPP_DECRYPTED') }} D\n  ON C.T_SOURCE_PK_UUID = D.T_SOURCE_PK_UUID\nWHERE D.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'\n  AND D.SERVICE_PROVIDER_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND D.SERVICE_PROVIDER_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ASPSP_TPP_CURRENT"], ["source_dwh_STRP", "D_ASPSP_TPP_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_IT", "name": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/IT/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN.sql", "original_file_path": "models/PST3/mart/IT/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN.sql", "unique_id": "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "fqn": ["project_dbt", "PST3", "mart", "IT", "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN"], "alias": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "checksum": {"name": "sha256", "checksum": "27c7f65b45f81670223533a0b938df691e9cd3b89a79f754190b6913c90af39d"}, "config": {"enabled": true, "alias": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "schema": "dm_pst3_IT", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/IT/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN/58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_IT", "alias": "58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4173272, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_IT`.`58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'IT' -%}\n\n\n        SELECT\n  CASE\n      WHEN FAT.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'report in 58726 02&04'\n      WHEN FAT.TRANSACTION_CHANNEL in ('TPP') THEN 'report in 58726 22&24'\n      WHEN FAT.TRANSACTION_CHANNEL in ('OCS') and FAT.TRANSACTION_CREDITOR_REFERENCE_VALUE like 'REF.%/%/%' then 'report in 58726 26&28'\n      WHEN FAT.TRANSACTION_CHANNEL in ('OCS') and FAT.TRANSACTION_END_TO_END_ID like 'CAF%' THEN 'report in 58726 22&24'\n      WHEN FAT.TRANSACTION_CHANNEL = 'H2H' then 'report in 58726 26&28'\n      WHEN FAT.TRANSACTION_CHANNEL is null then 'not applicable - return'\n      ELSE 'check the query'\n  END metricToBeReported,\n  CASE\n      WHEN FAT.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'N/A'\n      WHEN FAT.TRANSACTION_CHANNEL in ('TPP') THEN 'SCA'\n      WHEN FAT.TRANSACTION_CHANNEL in ('OCS') and FAT.TRANSACTION_CREDITOR_REFERENCE_VALUE like 'REF.%/%/%' then '413'\n      WHEN FAT.TRANSACTION_CHANNEL in ('OCS') and FAT.TRANSACTION_END_TO_END_ID like 'CAF%' THEN 'SCA'\n      WHEN FAT.TRANSACTION_CHANNEL = 'H2H' then '415'\n      WHEN FAT.TRANSACTION_CHANNEL is null then 'not applicable - return'\n  END SCAIndicator,\n  CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE  as payee_psp_country,\n  '396' as pisp,\n  IF(SUBSTR(CBA.BANK_ACCOUNT_NUMBER,5,5) = '36330' and CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}', '398','396') AS scheme,\n  count(*) AS count,\n  sum (round(FAT.TRANSACTION_AMOUNT)) as Amount,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','F_ACCOUNT_BALANCE') }} FAB on FAB.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n  WHERE FAT.TRANSACTION_DIRECTION = \"OUTBOUND\"\n    AND FAT.TRANSACTION_TYPE = 'REGULAR'\n    AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n    AND IA.ACCOUNT_TYPE = 'PAYMENT'\n    AND FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND FAT.TRANSACTION_CHANNEL <> 'CARDS'\n    AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE IN ('{{country_code}}')\n    AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  group by 1,2,3,4,5", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "F_ACCOUNT_BALANCE"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cuardro4_credit_transers_sent": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_ES", "name": "Cuardro4_credit_transers_sent", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/ES/Cuardro4_credit_transers_sent/Cuardro4_credit_transers_sent.sql", "original_file_path": "models/PST3/mart/ES/Cuardro4_credit_transers_sent/Cuardro4_credit_transers_sent.sql", "unique_id": "model.project_dbt.Cuardro4_credit_transers_sent", "fqn": ["project_dbt", "PST3", "mart", "ES", "Cuardro4_credit_transers_sent", "Cuardro4_credit_transers_sent"], "alias": "Cuardro4_credit_transers_sent", "checksum": {"name": "sha256", "checksum": "df6415d7c688c3f21f995e7311a961e5bc6eed217b9ae63ff99522b38372ecf2"}, "config": {"enabled": true, "alias": "Cuardro4_credit_transers_sent", "schema": "dm_pst3_ES", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/ES/Cuardro4_credit_transers_sent/Cuardro4_credit_transers_sent.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_ES", "alias": "Cuardro4_credit_transers_sent", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4186375, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_ES`.`Cuardro4_credit_transers_sent`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'ES' -%}\n\n\n        SELECT\n  CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE  as payee_psp_country,\n  CASE\n      WHEN FAT.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN '211 Manual entry'\n      WHEN FAT.TRANSACTION_CHANNEL in ('TPP','OCS','H2H' ) THEN '212 Electronic entry'\n  END EntryMode,\n  CASE\n      WHEN FAT.TRANSACTION_CHANNEL in ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'NA'\n      WHEN FAT.TRANSACTION_CHANNEL in ('TPP', 'OCS') THEN '2122 single '\n      WHEN FAT.TRANSACTION_CHANNEL = 'H2H' then '2121 Batch entry'\n  END BatchMode,\n  CASE\n      WHEN FAT.TRANSACTION_CHANNEL in ('TPP') THEN 'SCA'\n      WHEN FAT.TRANSACTION_CHANNEL in ('OCS') and FAT.TRANSACTION_CREDITOR_REFERENCE_VALUE like 'REF.%/%/%' then 'NoSCA - 212333 Trusted Beneficiaries'\n      WHEN FAT.TRANSACTION_CHANNEL in ('OCS') and FAT.TRANSACTION_END_TO_END_ID like 'CAF%' THEN 'SCA'\n      WHEN FAT.TRANSACTION_CHANNEL = 'H2H' then 'NoSCA - 212335 secure processes'\n      WHEN FAT.TRANSACTION_CHANNEL is null then 'not applicable - return'\n      else 'check the query'\n  END SCAIndicator,\n  count (*) as outbound_ibis_payments_trx_count,\n  sum (round(FAT.TRANSACTION_AMOUNT)) as outbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n  ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n  ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n  ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n  ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE(FAT.TRANSACTION_DIRECTION = \"OUTBOUND\")\n    AND FAT.TRANSACTION_TYPE = 'REGULAR'\n    AND DAT.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n    AND IA.ACCOUNT_TYPE = 'PAYMENT'\n    AND  FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n    AND FAT.TRANSACTION_CHANNEL <> 'CARDS'\n    AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n    AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1,2,3,4\nORDER BY 1,2,3,4", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cuardro4_credit_transers_received": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_ES", "name": "Cuardro4_credit_transers_received", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/ES/Cuardro4_credit_transers_received/Cuardro4_credit_transers_received.sql", "original_file_path": "models/PST3/mart/ES/Cuardro4_credit_transers_received/Cuardro4_credit_transers_received.sql", "unique_id": "model.project_dbt.Cuardro4_credit_transers_received", "fqn": ["project_dbt", "PST3", "mart", "ES", "Cuardro4_credit_transers_received", "Cuardro4_credit_transers_received"], "alias": "Cuardro4_credit_transers_received", "checksum": {"name": "sha256", "checksum": "45f63581a43c86dbaae0b2fc5498882f45445baf1b0f1fd4c206d6ba436c7405"}, "config": {"enabled": true, "alias": "Cuardro4_credit_transers_received", "schema": "dm_pst3_ES", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/ES/Cuardro4_credit_transers_received/Cuardro4_credit_transers_received.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_ES", "alias": "Cuardro4_credit_transers_received", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4197454, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_ES`.`Cuardro4_credit_transers_received`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'ES' -%}\n\n\n        SELECT\n  DBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS Payer_PSP_country,\n  count(*)  as inbound_ibis_payments_trx_count,\n  sum(FAT.TRANSACTION_AMOUNT) AS inbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\n\n  FROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n    ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n    ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n    ON IA.T_D_BANK_ACCOUNT_DIM_KEY = CBA.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS DBA\n    ON DBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\n  WHERE (FAT.TRANSACTION_DIRECTION = \"INBOUND\")\n    AND(FAT.TRANSACTION_TYPE) = 'REGULAR'\n    AND (DAT.TRANSACTION_STATUS) IN ('RETURNED', 'SETTLED')\n    AND (IA.ACCOUNT_TYPE) = 'PAYMENT'\n    AND  FAT.TRANSACTION_BANK_FAMILY = 'RCDT'\n    AND CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n    AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  GROUP BY 1\n  ORDER BY 1", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cuadro1_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_ES", "name": "Cuadro1_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/ES/Cuadro1_accounts/Cuadro1_accounts.sql", "original_file_path": "models/PST3/mart/ES/Cuadro1_accounts/Cuadro1_accounts.sql", "unique_id": "model.project_dbt.Cuadro1_accounts", "fqn": ["project_dbt", "PST3", "mart", "ES", "Cuadro1_accounts", "Cuadro1_accounts"], "alias": "Cuadro1_accounts", "checksum": {"name": "sha256", "checksum": "a4677cf7851d2097df4de1e2253970c1603d5507de0f724c0513f9d47e812c76"}, "config": {"enabled": true, "alias": "Cuadro1_accounts", "schema": "dm_pst3_ES", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/ES/Cuadro1_accounts/Cuadro1_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_ES", "alias": "Cuadro1_accounts", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4209805, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_ES`.`Cuadro1_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'ES' -%}\n\n\n        SELECT\ncount(*) AS number_of_accounts,\nCURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n'{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} IACC\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} BANK\n ON IACC.T_D_BANK_ACCOUNT_DIM_KEY = BANK.T_DIM_KEY\nWHERE ACCOUNT_TYPE = 'PAYMENT'\n  AND BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND (\n    IACC.ACCOUNT_STATUS = 'OPEN'\n    OR (\n      IACC.ACCOUNT_STATUS = 'CLOSED'\n      AND IACC.ACCOUNT_UPDATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    )\n    AND IACC.ACCOUNT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  )", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cuadro9_Credit_transfers_sent": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_ES", "name": "Cuadro9_Credit_transfers_sent", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/ES/Cuadro9_Credit_transfers_sent/Cuadro9_Credit_transfers_sent.sql", "original_file_path": "models/PST3/mart/ES/Cuadro9_Credit_transfers_sent/Cuadro9_Credit_transfers_sent.sql", "unique_id": "model.project_dbt.Cuadro9_Credit_transfers_sent", "fqn": ["project_dbt", "PST3", "mart", "ES", "Cuadro9_Credit_transfers_sent", "Cuadro9_Credit_transfers_sent"], "alias": "Cuadro9_Credit_transfers_sent", "checksum": {"name": "sha256", "checksum": "cf6e1d2657caa7d3b473b2a8efaaaf9475d7c7b9d01d662d3d36abced2870d72"}, "config": {"enabled": true, "alias": "Cuadro9_Credit_transfers_sent", "schema": "dm_pst3_ES", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/ES/Cuadro9_Credit_transfers_sent/Cuadro9_Credit_transfers_sent.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_ES", "alias": "Cuadro9_Credit_transfers_sent", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4221036, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_ES`.`Cuadro9_Credit_transfers_sent`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'ES' -%}\n\n\n        SELECT\n  COUNT(DISTINCT FAT.T_SOURCE_PK_ID) AS outbound_ibis_payments_trx_count,\n  COALESCE(SUM(FAT.TRANSACTION_AMOUNT), 0) AS outbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS d_account_transaction\n  ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = d_account_transaction.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS d_ibis_account\n  ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = d_ibis_account.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_bank_accounts\n  ON d_ibis_account.T_D_BANK_ACCOUNT_DIM_KEY = d_bank_accounts.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_counterparty_bank_accounts\n  ON d_counterparty_bank_accounts.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE FAT.TRANSACTION_DIRECTION = \"OUTBOUND\"\n  AND FAT.TRANSACTION_TYPE = 'REGULAR'\n  AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT >=  TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT <  TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  AND d_account_transaction.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND d_ibis_account.ACCOUNT_TYPE = 'PAYMENT'\n  AND FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND d_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cuardro4_PIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_ES", "name": "Cuardro4_PIS", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/ES/Cuardro4_PIS/Cuardro4_PIS.sql", "original_file_path": "models/PST3/mart/ES/Cuardro4_PIS/Cuardro4_PIS.sql", "unique_id": "model.project_dbt.Cuardro4_PIS", "fqn": ["project_dbt", "PST3", "mart", "ES", "Cuardro4_PIS", "Cuardro4_PIS"], "alias": "Cuardro4_PIS", "checksum": {"name": "sha256", "checksum": "84ecf333942d02176e7a08152457e5b7be5e5c0cb4c1e5e2a3d9d637308ef6a6"}, "config": {"enabled": true, "alias": "Cuardro4_PIS", "schema": "dm_pst3_ES", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/ES/Cuardro4_PIS/Cuardro4_PIS.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_ES", "alias": "Cuardro4_PIS", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4231994, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_ES`.`Cuardro4_PIS`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'ES' -%}\n\n\n        SELECT\n  IT.INBOUND_TRANSACTION_CURRENCY_CODE as trx_currency,\n  credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE  as counterparty_country,\n  count(*)  AS success_trx_count,\n  sum(IT.INBOUND_TRANSACTION_AMOUNT) AS success_trx_summed_value,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\n  FROM {{ source('source_dwh_STRP','D_INBOUND_PAYMENT_INFO_DECRYPTED') }} as IP\n  LEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} FP\n      ON IP.T_D_FINANCIAL_PLATFORM_DIM_KEY=FP.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} FI\n      ON FI.T_DIM_KEY = FP.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','F_INBOUND_TRANSACTIONS_DECRYPTED') }} as IT\n      ON IP.T_DIM_KEY=IT.T_D_INBOUND_PAYMENT_INFO_DIM_KEY\n  INNER JOIN {{ source('source_dwh_STRP','D_INBOUND_TRANSACTION_INFO') }} as DIT\n      ON DIT.T_DIM_KEY = IT.T_D_INBOUND_TRANSACTION_INFO_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_PAYMENT_INITIATIONS_CURRENT') }} as PI\n      ON IP.T_DIM_KEY=PI.T_D_INBOUND_PAYMENT_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} as APP\n      ON IP.T_D_APPLICATION_DIM_KEY = APP.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} debacc\n      ON IP.T_D_DEBTOR_BANK_ACCOUNTS_DIM_KEY = debacc.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} credacc\n      ON IT.T_D_CREDITOR_BANK_ACCOUNTS_DIM_KEY = credacc.T_DIM_KEY\n  WHERE  FI.FINANCIAL_INSTITUTION_CODE  <> 'IBIS'\n    AND PI.PAYMENT_INITIATION_STATUS = 'SUCCESSFUL'\n    AND ( APP.APPLICATION_NAME = 'PAY-PXG-BANQUPES'\n          OR (\n            APP.APPLICATION_NAME = 'PAY-PXG-OCS'\n            AND credacc.FINANCIAL_INSTITUTION_COUNTRY_CODE  = '{{country_code}}'\n            AND substr( credacc.BANK_ACCOUNT_NUMBER,5,4)= '6918'\n            )\n        )\n    AND DIT.INBOUND_TRANSACTION_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n    AND DIT.INBOUND_TRANSACTION_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  GROUP BY 1,2", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], ["source_dwh_STRP", "D_PAYMENT_INITIATIONS_CURRENT"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cuadro1_number_of_AIS_PSUs": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_ES", "name": "Cuadro1_number_of_AIS_PSUs", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/ES/Cuadro1_number_of_AIS_PSUs/Cuadro1_number_of_AIS_PSUs.sql", "original_file_path": "models/PST3/mart/ES/Cuadro1_number_of_AIS_PSUs/Cuadro1_number_of_AIS_PSUs.sql", "unique_id": "model.project_dbt.Cuadro1_number_of_AIS_PSUs", "fqn": ["project_dbt", "PST3", "mart", "ES", "Cuadro1_number_of_AIS_PSUs", "Cuadro1_number_of_AIS_PSUs"], "alias": "Cuadro1_number_of_AIS_PSUs", "checksum": {"name": "sha256", "checksum": "5f3cb9274d2ceebec9985fe9dc566b23e7183624ac633f445fd780104fe1bcc7"}, "config": {"enabled": true, "alias": "Cuadro1_number_of_AIS_PSUs", "schema": "dm_pst3_ES", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/ES/Cuadro1_number_of_AIS_PSUs/Cuadro1_number_of_AIS_PSUs.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_ES", "alias": "Cuadro1_number_of_AIS_PSUs", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4243152, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_ES`.`Cuadro1_number_of_AIS_PSUs`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'ES' -%}\n\n\n        WITH obsolete_and_active_consents_count_in_reporting_period AS (\n  SELECT\n    ac.USER_TOKEN,\n    COUNT(*) AS number_of_consents,\n  FROM  {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO') }} AS ac\n  inner JOIN {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_CURRENT') }} AS pa\n    ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n    ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n    ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n    ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n    ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\n  inner JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n    ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\n  WHERE\n    a.APPLICATION_NAME in ('PAY-PXG-BANQUPES')\n    AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS' -- consents on UPP's own accounts are not counted\n    AND (\n        ac.ACCESS_CONSENT_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n        AND ac.ACCESS_CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n        OR (\n          ac.ACCESS_CONSENT_STATUS_AT > TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n          AND ac.ACCESS_CONSENT_STATUS_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n          )\n    )\n  GROUP BY ac.USER_TOKEN\n  )\n  SELECT\n  COUNT(DISTINCT USER_TOKEN) AS unique_users_count_in_period,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  \"{{period}}\"  AS Period,\n  FROM obsolete_and_active_consents_count_in_reporting_period\n  WHERE USER_TOKEN <>'NA'", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ACCESS_CONSENT_INFO"], ["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.Cuardro1_number_of_AISPs_accessing_UPP_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_ES", "name": "Cuardro1_number_of_AISPs_accessing_UPP_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/ES/Cuardro1_number_of_AISPs_accessing_UPP_accounts/Cuardro1_number_of_AISPs_accessing_UPP_accounts.sql", "original_file_path": "models/PST3/mart/ES/Cuardro1_number_of_AISPs_accessing_UPP_accounts/Cuardro1_number_of_AISPs_accessing_UPP_accounts.sql", "unique_id": "model.project_dbt.Cuardro1_number_of_AISPs_accessing_UPP_accounts", "fqn": ["project_dbt", "PST3", "mart", "ES", "Cuardro1_number_of_AISPs_accessing_UPP_accounts", "Cuardro1_number_of_AISPs_accessing_UPP_accounts"], "alias": "Cuardro1_number_of_AISPs_accessing_UPP_accounts", "checksum": {"name": "sha256", "checksum": "0005ccb757d147f524f221bc375564782fa51f8521593767a411b20d94ffe612"}, "config": {"enabled": true, "alias": "Cuardro1_number_of_AISPs_accessing_UPP_accounts", "schema": "dm_pst3_ES", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/ES/Cuardro1_number_of_AISPs_accessing_UPP_accounts/Cuardro1_number_of_AISPs_accessing_UPP_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_ES", "alias": "Cuardro1_number_of_AISPs_accessing_UPP_accounts", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4255347, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_ES`.`Cuardro1_number_of_AISPs_accessing_UPP_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'ES' -%}\n\n\n        SELECT\nLEFT(t.SERVICE_PROVIDER_PSP_AUTHORITY_ID,2) countryOfAISP,\nc.consent_iban,\nCURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n\"{{period}}\"  AS Period,\nfrom {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} c\nINNER JOIN {{ source('source_dwh_STRP','D_ASPSP_CONSENT_DECRYPTED') }} cc\n  on c.T_DIM_KEY = cc.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_ASPSP_TPP') }} t\n  on c.T_D_ASPSP_TPP_DIM_KEY = t.T_DIM_KEY\nWHERE\n  c.CONSENT_STATUS = 'VALID'\n  and left(c.consent_iban,2) ='{{country_code}}'\n  and c.CONSENT_EXPIRED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  and c.CONSENT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  and  t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], ["source_dwh_STRP", "D_ASPSP_TPP"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_DE", "name": "NC1_Number_of_payment_accounts_accessed_by_UPP", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/DE/NC1_Number_of_payment_accounts_accessed_by_UPP/NC1_Number_of_payment_accounts_accessed_by_UPP.sql", "original_file_path": "models/PST3/mart/DE/NC1_Number_of_payment_accounts_accessed_by_UPP/NC1_Number_of_payment_accounts_accessed_by_UPP.sql", "unique_id": "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "fqn": ["project_dbt", "PST3", "mart", "DE", "NC1_Number_of_payment_accounts_accessed_by_UPP", "NC1_Number_of_payment_accounts_accessed_by_UPP"], "alias": "NC1_Number_of_payment_accounts_accessed_by_UPP", "checksum": {"name": "sha256", "checksum": "5283e92e5f97e1b24428f42f5ec3f43e215177bf4abb237aa7ea2f794f054348"}, "config": {"enabled": true, "alias": "NC1_Number_of_payment_accounts_accessed_by_UPP", "schema": "dm_pst3_DE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/DE/NC1_Number_of_payment_accounts_accessed_by_UPP/NC1_Number_of_payment_accounts_accessed_by_UPP.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_DE", "alias": "NC1_Number_of_payment_accounts_accessed_by_UPP", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.426839, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_DE`.`NC1_Number_of_payment_accounts_accessed_by_UPP`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'DE' -%}\n\n\n        WITH pre AS (\n  SELECT\n    'DE' AS country,\n    ac.USER_TOKEN,\n    count(*),\n  FROM {{ source('source_dwh_STRP','D_PXG_PAYMENT_ACCOUNT_DECRYPTED') }} AS pa\n  LEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_PLATFORMS_DECRYPTED') }} AS fp\n    ON pa.T_D_FINANCIAL_PLATFORM_DIM_KEY=fp.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_FINANCIAL_INSTITUTIONS') }} AS fi\n    ON fi.T_DIM_KEY = fp.T_D_FINANCIAL_INSTITUTION_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_ACCESS_CONSENT_INFO') }} AS ac\n    ON pa.T_DIM_KEY=ac.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_CONTRACT_INFO') }} AS c\n    ON pa.T_DIM_KEY=c.T_D_PXG_PAYMENT_ACCOUNT_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_APPLICATION_ACCOUNT_INFO_DECRYPTED') }} AS aa\n    ON c.T_D_APPLICATION_ACCOUNT_DIM_KEY=aa.T_DIM_KEY\n  LEFT JOIN {{ source('source_dwh_STRP','D_APPLICATIONS_DECRYPTED') }} AS a\n    ON aa.T_D_APPLICATION_DIM_KEY = a.T_DIM_KEY\n  WHERE a.APPLICATION_NAME = 'PAY-PXG-BANQUPDE'\n    AND fi.FINANCIAL_INSTITUTION_CODE <> 'IBIS'\n    AND (\n      TIMESTAMP(ac.ACCESS_CONSENT_STATUS_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n      AND TIMESTAMP(ac.ACCESS_CONSENT_STATUS_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n      OR\n      (\n      TIMESTAMP(ac.ACCESS_CONSENT_CREATED_AT) >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n      AND TIMESTAMP(ac.ACCESS_CONSENT_CREATED_AT) <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n      )\n    )\n  GROUP BY 1,2\n)\nSELECT\n  country ,\n  count(distinct USER_TOKEN) as unique_users_count_in_period,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM PRE\nGROUP BY 1", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], ["source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], ["source_dwh_STRP", "D_ACCESS_CONSENT_INFO"], ["source_dwh_STRP", "D_CONTRACT_INFO"], ["source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], ["source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.A1_Number_of_payment_accounts": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_DE", "name": "A1_Number_of_payment_accounts", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/DE/A1_Number_of_payment_accounts/A1_Number_of_payment_accounts.sql", "original_file_path": "models/PST3/mart/DE/A1_Number_of_payment_accounts/A1_Number_of_payment_accounts.sql", "unique_id": "model.project_dbt.A1_Number_of_payment_accounts", "fqn": ["project_dbt", "PST3", "mart", "DE", "A1_Number_of_payment_accounts", "A1_Number_of_payment_accounts"], "alias": "A1_Number_of_payment_accounts", "checksum": {"name": "sha256", "checksum": "5bdd1a7f4d1ff13c9732dd181915408b6e243cfd3faa5a8514f5035c63853579"}, "config": {"enabled": true, "alias": "A1_Number_of_payment_accounts", "schema": "dm_pst3_DE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/DE/A1_Number_of_payment_accounts/A1_Number_of_payment_accounts.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_DE", "alias": "A1_Number_of_payment_accounts", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4279456, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_DE`.`A1_Number_of_payment_accounts`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'DE' -%}\n\n\n        SELECT\n  COUNT(*) as Count,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} IACC\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} BANK\n  ON IACC.T_D_BANK_ACCOUNT_DIM_KEY = BANK.T_DIM_KEY\nWHERE ACCOUNT_TYPE = 'PAYMENT'\n  AND BANK.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND (\n    IACC.ACCOUNT_STATUS = 'OPEN'\n    OR (IACC.ACCOUNT_STATUS = 'CLOSED'\n        AND IACC.ACCOUNT_UPDATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n      )\n    )\n  and IACC.ACCOUNT_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.ZVS9_PCT": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_DE", "name": "ZVS9_PCT", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/DE/ZVS9_PCT/ZVS9_PCT.sql", "original_file_path": "models/PST3/mart/DE/ZVS9_PCT/ZVS9_PCT.sql", "unique_id": "model.project_dbt.ZVS9_PCT", "fqn": ["project_dbt", "PST3", "mart", "DE", "ZVS9_PCT", "ZVS9_PCT"], "alias": "ZVS9_PCT", "checksum": {"name": "sha256", "checksum": "9391873dc4f4807499e809992fae9610f757242bba402aba1579151668327cec"}, "config": {"enabled": true, "alias": "ZVS9_PCT", "schema": "dm_pst3_DE", "database": null, "tags": ["pst3", "quarterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "quarterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/DE/ZVS9_PCT/ZVS9_PCT.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_DE", "alias": "ZVS9_PCT", "tags": ["pst3", "quarterly"]}, "created_at": 1728271772.4291244, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_DE`.`ZVS9_PCT`", "raw_code": "{% set period_time = period_calculate(time = 'quarterly', selection_date=\"today\", prefix='', suffix='Q' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'DE' -%}\n\n\n        SELECT\n  CBA.FINANCIAL_INSTITUTION_COUNTRY_CODE AS Payee_PSP_country,\n  COUNT(*) AS outbound_ibis_payments_trx_count,\n  COALESCE(SUM(FAT.TRANSACTION_AMOUNT), 0) AS outbound_ibis_payments_amount_sum_in_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS DAT\n  ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = DAT.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS IA\n  ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = IA.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS BA\n  ON IA.T_D_BANK_ACCOUNT_DIM_KEY = BA.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS CBA\n  ON CBA.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE (FAT.TRANSACTION_DIRECTION = 'OUTBOUND')\n  AND(FAT.TRANSACTION_TYPE) = 'REGULAR'\n  AND (DAT.TRANSACTION_STATUS) IN ('RETURNED', 'SETTLED')\n  AND (IA.ACCOUNT_TYPE) = 'PAYMENT'\n  AND  FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND FAT.TRANSACTION_CHANNEL not in ('DASHBOARD', 'OTHER','CARDS')\n  AND BA.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\n  AND DAT.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND DAT.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nGROUP BY 1\nORDER BY 1 ASC", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.ZVS41_Outbound_credit_transfers": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_DE", "name": "ZVS41_Outbound_credit_transfers", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/DE/ZVS41_Outbound_credit_transfers/ZVS41_Outbound_credit_transfers.sql", "original_file_path": "models/PST3/mart/DE/ZVS41_Outbound_credit_transfers/ZVS41_Outbound_credit_transfers.sql", "unique_id": "model.project_dbt.ZVS41_Outbound_credit_transfers", "fqn": ["project_dbt", "PST3", "mart", "DE", "ZVS41_Outbound_credit_transfers", "ZVS41_Outbound_credit_transfers"], "alias": "ZVS41_Outbound_credit_transfers", "checksum": {"name": "sha256", "checksum": "b5ce0e015ad673cac277c917ee8898da0ca48f07506f98297fc79d532694568d"}, "config": {"enabled": true, "alias": "ZVS41_Outbound_credit_transfers", "schema": "dm_pst3_DE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/DE/ZVS41_Outbound_credit_transfers/ZVS41_Outbound_credit_transfers.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_DE", "alias": "ZVS41_Outbound_credit_transfers", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4303265, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_DE`.`ZVS41_Outbound_credit_transfers`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'DE' -%}\n\n\n        SELECT\n  CASE\n    WHEN FAT.TRANSACTION_CHANNEL IN ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'PCT.4 Manual entry'\n    WHEN FAT.TRANSACTION_CHANNEL IN ('TPP', 'OCS', 'H2H') THEN 'PCT.2 Electronic entry'\n  END EntryMode,\n  CASE\n    WHEN FAT.TRANSACTION_CHANNEL IN ('DASHBOARD', 'ADMIN', 'OTHER') THEN 'NA'\n    WHEN FAT.TRANSACTION_CHANNEL IN ('TPP', 'OCS') THEN 'PCT.22 Single entry'\n    WHEN FAT.TRANSACTION_CHANNEL = 'H2H' THEN 'PCT.21 Batch entry'\n  END Batchmode,\n  d_counterparty_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PAYEE_PSP_COUNTRY,\n  COUNT(DISTINCT FAT.T_SOURCE_PK_ID) AS OUTBOUND_IBIS_PAYMENTS_TRX_COUNT,\n  COALESCE(SUM(FAT.TRANSACTION_AMOUNT), 0) AS OUTBOUND_IBIS_PAYMENTS_AMOUNT_SUM_IN_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS d_account_transaction ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = d_account_transaction.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS d_ibis_account ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = d_ibis_account.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_bank_accounts ON d_ibis_account.T_D_BANK_ACCOUNT_DIM_KEY = d_bank_accounts.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_counterparty_bank_accounts ON d_counterparty_bank_accounts.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE FAT.TRANSACTION_DIRECTION = 'OUTBOUND'\n  AND FAT.TRANSACTION_TYPE = 'REGULAR'\n  AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  AND d_account_transaction.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND d_ibis_account.ACCOUNT_TYPE = 'PAYMENT'\n  AND FAT.TRANSACTION_BANK_FAMILY = 'ICDT'\n  AND d_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\nGROUP BY 1, 2, 3", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.A11_Number_of_payment_accounts_accessed_by_AISPs": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_DE", "name": "A11_Number_of_payment_accounts_accessed_by_AISPs", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/DE/A11_Number_of_payment_accounts_accessed_by_AISPs/A11_Number_of_payment_accounts_accessed_by_AISPs.sql", "original_file_path": "models/PST3/mart/DE/A11_Number_of_payment_accounts_accessed_by_AISPs/A11_Number_of_payment_accounts_accessed_by_AISPs.sql", "unique_id": "model.project_dbt.A11_Number_of_payment_accounts_accessed_by_AISPs", "fqn": ["project_dbt", "PST3", "mart", "DE", "A11_Number_of_payment_accounts_accessed_by_AISPs", "A11_Number_of_payment_accounts_accessed_by_AISPs"], "alias": "A11_Number_of_payment_accounts_accessed_by_AISPs", "checksum": {"name": "sha256", "checksum": "4e3846fd562c02bb63215613356a3d05d851351fc781f04ad4a2461f549d8a45"}, "config": {"enabled": true, "alias": "A11_Number_of_payment_accounts_accessed_by_AISPs", "schema": "dm_pst3_DE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/DE/A11_Number_of_payment_accounts_accessed_by_AISPs/A11_Number_of_payment_accounts_accessed_by_AISPs.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_DE", "alias": "A11_Number_of_payment_accounts_accessed_by_AISPs", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.431454, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_DE`.`A11_Number_of_payment_accounts_accessed_by_AISPs`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'DE' -%}\n\n\n        SELECT *,\nCURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n'{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','D_ASPSP_TPP_DECRYPTED') }} t\nWHERE t.T_SOURCE_PK_UUID <> '93773d5d-00b9-422d-af5c-b90259cf50ee'\nAND SERVICE_PROVIDER_CREATED_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\nAND SERVICE_PROVIDER_CREATED_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\nAND T_LOAD_TIMESTAMP is not null", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "D_ASPSP_TPP_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.ZVS41_Inbound_credit_transfers": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_DE", "name": "ZVS41_Inbound_credit_transfers", "resource_type": "model", "package_name": "project_dbt", "path": "PST3/mart/DE/ZVS41_Inbound_credit_transfers/ZVS41_Inbound_credit_transfers.sql", "original_file_path": "models/PST3/mart/DE/ZVS41_Inbound_credit_transfers/ZVS41_Inbound_credit_transfers.sql", "unique_id": "model.project_dbt.ZVS41_Inbound_credit_transfers", "fqn": ["project_dbt", "PST3", "mart", "DE", "ZVS41_Inbound_credit_transfers", "ZVS41_Inbound_credit_transfers"], "alias": "ZVS41_Inbound_credit_transfers", "checksum": {"name": "sha256", "checksum": "5a90d31c31b7c2558db57ccd1a6d22d6cc4e20b51dbb6b7b53c84a03441b0040"}, "config": {"enabled": true, "alias": "ZVS41_Inbound_credit_transfers", "schema": "dm_pst3_DE", "database": null, "tags": ["pst3", "semesterly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["pst3", "semesterly"], "description": "description text", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/PST3/mart/DE/ZVS41_Inbound_credit_transfers/ZVS41_Inbound_credit_transfers.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dm_pst3_DE", "alias": "ZVS41_Inbound_credit_transfers", "tags": ["pst3", "semesterly"]}, "created_at": 1728271772.4325693, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_DE`.`ZVS41_Inbound_credit_transfers`", "raw_code": "{% set period_time = period_calculate(time = 'semesterly', selection_date=\"today\", prefix='', suffix='S' ) -%}\n{% set time_zone = \"Etc/UTC\" -%}\n{% set country_code = 'DE' -%}\n\n\n        SELECT\n  d_counterparty_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE AS PAYER_PSP_COUNTRY,\n  COUNT(DISTINCT FAT.T_SOURCE_PK_ID) AS OUTBOUND_IBIS_PAYMENTS_TRX_COUNT,\n  COALESCE(SUM(FAT.TRANSACTION_AMOUNT), 0) AS OUTBOUND_IBIS_PAYMENTS_AMOUNT_SUM_IN_EUR,\n  CURRENT_TIMESTAMP AS LOAD_TIMESTAMP,\n  '{{period_time['period']}}' AS PERIOD,\nFROM {{ source('source_dwh_STRP','F_ACCOUNT_TRANSACTIONS_DECRYPTED') }} AS FAT\nLEFT JOIN {{ source('source_dwh_STRP','D_ACCOUNT_TRANSACTION_CURRENT') }} AS d_account_transaction ON FAT.T_D_ACCOUNT_TRANSACTION_DIM_KEY = d_account_transaction.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_IBIS_ACCOUNT_CURRENT') }} AS d_ibis_account ON FAT.T_D_IBIS_ACCOUNT_DIM_KEY = d_ibis_account.T_DIM_KEY\nINNER JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_bank_accounts ON d_ibis_account.T_D_BANK_ACCOUNT_DIM_KEY = d_bank_accounts.T_DIM_KEY\nLEFT JOIN {{ source('source_dwh_STRP','D_BANK_ACCOUNTS_DECRYPTED') }} AS d_counterparty_bank_accounts ON d_counterparty_bank_accounts.T_DIM_KEY = FAT.T_COUNTERPARTY_BANK_ACCOUNT_DIM_KEY\nWHERE FAT.TRANSACTION_DIRECTION = 'INBOUND'\n  AND FAT.TRANSACTION_TYPE = 'REGULAR'\n  AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT >= TIMESTAMP(DATETIME( '{{period_time['begin_date']}}', '{{time_zone}}'))\n  AND d_account_transaction.TRANSACTION_BOOKING_DATE_AT <= TIMESTAMP(DATETIME( '{{period_time['end_date']}}', '{{time_zone}}'))\n  AND d_account_transaction.TRANSACTION_STATUS IN ('RETURNED', 'SETTLED')\n  AND d_ibis_account.ACCOUNT_TYPE = 'PAYMENT'\n  AND FAT.TRANSACTION_BANK_FAMILY = 'RCDT'\n  AND d_bank_accounts.FINANCIAL_INSTITUTION_COUNTRY_CODE = '{{country_code}}'\nGROUP BY 1\nORDER BY 1", "language": "sql", "refs": [], "sources": [["source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], ["source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], ["source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], ["source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"]], "metrics": [], "depends_on": {"macros": ["macro.project_dbt.period_calculate"], "nodes": ["source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dwh_strh_D_LEGAL_ENTITY_CURRENT": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "dwh_strh_D_LEGAL_ENTITY_CURRENT", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/warehouse/D_LEGAL_ENTITY/dwh_strh_D_LEGAL_ENTITY_CURRENT.sql", "original_file_path": "models/STRH/warehouse/D_LEGAL_ENTITY/dwh_strh_D_LEGAL_ENTITY_CURRENT.sql", "unique_id": "model.project_dbt.dwh_strh_D_LEGAL_ENTITY_CURRENT", "fqn": ["project_dbt", "STRH", "warehouse", "D_LEGAL_ENTITY", "dwh_strh_D_LEGAL_ENTITY_CURRENT"], "alias": "D_LEGAL_ENTITY_CURRENT", "checksum": {"name": "sha256", "checksum": "c46ad22ce16948165e70773d884533d66e339744541d43471ca1d6c20ae311b5"}, "config": {"enabled": true, "alias": "D_LEGAL_ENTITY_CURRENT", "schema": "dwh_view_cmd", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "T_UNIQUE_KEY", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "dwh_strh_D_LEGAL_ENTITY_CURRENT.", "columns": {"T_DIM_KEY": {"name": "T_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_NAME": {"name": "LEGAL_ENTITY_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_IDENTIFIER": {"name": "LEGAL_ENTITY_IDENTIFIER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_IDENTIFIER_TYPE": {"name": "LEGAL_ENTITY_IDENTIFIER_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_UPDATED_AT": {"name": "LEGAL_ENTITY_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ENDED_AT": {"name": "LEGAL_ENTITY_ENDED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_INCORPORATION_DATE": {"name": "LEGAL_ENTITY_INCORPORATION_DATE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_JURIDICAL_FORM": {"name": "LEGAL_ENTITY_JURIDICAL_FORM", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ACTIVITY_CODE": {"name": "LEGAL_ENTITY_ACTIVITY_CODE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ACTIVITY": {"name": "LEGAL_ENTITY_ACTIVITY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_NUMBER_OF_EMPLOYEES": {"name": "LEGAL_ENTITY_NUMBER_OF_EMPLOYEES", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/warehouse/D_LEGAL_ENTITY/dwh_strh_D_LEGAL_ENTITY_CURRENT.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dwh_view_cmd", "unique_key": "T_UNIQUE_KEY", "alias": "D_LEGAL_ENTITY_CURRENT"}, "created_at": 1728271772.4424248, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_LEGAL_ENTITY_CURRENT`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY T_ROW_HASH ORDER BY T_LOAD_TIMESTAMP DESC) AS rn\n    FROM  {{ref('dwh_strh_D_LEGAL_ENTITY')}}\n    )\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dwh_strh_D_LEGAL_ENTITY", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dwh_strh_D_LEGAL_ENTITY"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dwh_strh_D_LEGAL_ENTITY": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "dwh_strh_D_LEGAL_ENTITY", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/warehouse/D_LEGAL_ENTITY/dwh_strh_D_LEGAL_ENTITY.sql", "original_file_path": "models/STRH/warehouse/D_LEGAL_ENTITY/dwh_strh_D_LEGAL_ENTITY.sql", "unique_id": "model.project_dbt.dwh_strh_D_LEGAL_ENTITY", "fqn": ["project_dbt", "STRH", "warehouse", "D_LEGAL_ENTITY", "dwh_strh_D_LEGAL_ENTITY"], "alias": "D_LEGAL_ENTITY", "checksum": {"name": "sha256", "checksum": "a727588c6786e9db898b9492c47b6c7da9f0f7ec15fb67d42176594001a68aa5"}, "config": {"enabled": true, "alias": "D_LEGAL_ENTITY", "schema": "dwh_view_cmd", "database": null, "tags": [], "meta": {"surrogate_key": true}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "T_UNIQUE_KEY", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "dwh_strh_D_LEGAL_ENTITY.", "columns": {"T_DIM_KEY": {"name": "T_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_NAME": {"name": "LEGAL_ENTITY_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_IDENTIFIER": {"name": "LEGAL_ENTITY_IDENTIFIER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_IDENTIFIER_TYPE": {"name": "LEGAL_ENTITY_IDENTIFIER_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_UPDATED_AT": {"name": "LEGAL_ENTITY_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ENDED_AT": {"name": "LEGAL_ENTITY_ENDED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_INCORPORATION_DATE": {"name": "LEGAL_ENTITY_INCORPORATION_DATE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_JURIDICAL_FORM": {"name": "LEGAL_ENTITY_JURIDICAL_FORM", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ACTIVITY_CODE": {"name": "LEGAL_ENTITY_ACTIVITY_CODE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ACTIVITY": {"name": "LEGAL_ENTITY_ACTIVITY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_NUMBER_OF_EMPLOYEES": {"name": "LEGAL_ENTITY_NUMBER_OF_EMPLOYEES", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"surrogate_key": true}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/warehouse/D_LEGAL_ENTITY/dwh_strh_D_LEGAL_ENTITY.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dwh_view_cmd", "unique_key": "T_UNIQUE_KEY", "alias": "D_LEGAL_ENTITY", "meta": {"surrogate_key": true}}, "created_at": 1728271772.4439206, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_LEGAL_ENTITY`", "raw_code": "with surrogate_key as(\n    select\n\t\t{{ dbt_utils.generate_surrogate_key([\n\t\t\t\t'T_BUS_KEY', \n\t\t\t\t'T_ROW_HASH'\n\t\t\t])\n\t\t}} as T_UNIQUE_KEY, \n\t\t*\n\tFROM {{ref('stg_strh_D_LEGAL_ENTITY')}}\n\n)\nSELECT \n    {% if is_incremental() %}\n        (SELECT COALESCE(MAX(T_DIM_KEY), 1) FROM {{ source('dwh_strh', 'D_LEGAL_ENTITY') }} ) + ROW_NUMBER() over (Order by surrogate_key.T_INGESTION_TIMESTAMP ASC) as T_DIM_KEY,\n    {% else %}\n        ROW_NUMBER() over (Order by surrogate_key.T_INGESTION_TIMESTAMP ASC) as T_DIM_KEY,\n    {% endif %}\n    *\nFROM surrogate_key", "language": "sql", "refs": [{"name": "stg_strh_D_LEGAL_ENTITY", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.project_dbt.stg_strh_D_LEGAL_ENTITY"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dwh_strh_D_ENTERPRISE_CURRENT": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "dwh_strh_D_ENTERPRISE_CURRENT", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/warehouse/D_ENTERPRISE/dwh_strh_D_ENTERPRISE_CURRENT.sql", "original_file_path": "models/STRH/warehouse/D_ENTERPRISE/dwh_strh_D_ENTERPRISE_CURRENT.sql", "unique_id": "model.project_dbt.dwh_strh_D_ENTERPRISE_CURRENT", "fqn": ["project_dbt", "STRH", "warehouse", "D_ENTERPRISE", "dwh_strh_D_ENTERPRISE_CURRENT"], "alias": "D_ENTERPRISE_CURRENT", "checksum": {"name": "sha256", "checksum": "41f7c2e1e596f69187a5f0ab45bc65a5286250c4a3dec45a0c5e6cfe2af5202c"}, "config": {"enabled": true, "alias": "D_ENTERPRISE_CURRENT", "schema": "dwh_view_cmd", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "T_UNIQUE_KEY", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "dwh_strh_D_ENTERPRISE_CURRENT.", "columns": {"T_DIM_KEY": {"name": "T_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CREATED_AT": {"name": "ENTERPRISE_CREATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_UPDATED_AT": {"name": "ENTERPRISE_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "BRAND": {"name": "BRAND", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_D_LEGAL_ENTITY_DIM_KEY": {"name": "T_D_LEGAL_ENTITY_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_NAME": {"name": "ENTERPRISE_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CONTACT": {"name": "ENTERPRISE_CONTACT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_PHONE_NUMBER": {"name": "ENTERPRISE_PHONE_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_MOBILE_NUMBER": {"name": "ENTERPRISE_MOBILE_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_STREET": {"name": "ENTERPRISE_STREET", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_HOUSE_NBR": {"name": "ENTERPRISE_HOUSE_NBR", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_ZIP_CODE": {"name": "ENTERPRISE_ZIP_CODE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CITY": {"name": "ENTERPRISE_CITY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_COUNTRY": {"name": "ENTERPRISE_COUNTRY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_EMAIL": {"name": "ENTERPRISE_EMAIL", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_JURIDICAL_FORM": {"name": "ENTERPRISE_JURIDICAL_FORM", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_VAT_NUMBER": {"name": "ENTERPRISE_VAT_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_AGRO_SWITH_ID": {"name": "ENTERPRISE_AGRO_SWITH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/warehouse/D_ENTERPRISE/dwh_strh_D_ENTERPRISE_CURRENT.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dwh_view_cmd", "unique_key": "T_UNIQUE_KEY", "alias": "D_ENTERPRISE_CURRENT"}, "created_at": 1728271772.4487631, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_ENTERPRISE_CURRENT`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY T_ROW_HASH ORDER BY T_LOAD_TIMESTAMP DESC) AS rn\n    FROM  {{ref('dwh_strh_D_ENTERPRISE')}}\n    )\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dwh_strh_D_ENTERPRISE", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dwh_strh_D_ENTERPRISE"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dwh_strh_D_ENTERPRISE": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "dwh_strh_D_ENTERPRISE", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/warehouse/D_ENTERPRISE/dwh_strh_D_ENTERPRISE.sql", "original_file_path": "models/STRH/warehouse/D_ENTERPRISE/dwh_strh_D_ENTERPRISE.sql", "unique_id": "model.project_dbt.dwh_strh_D_ENTERPRISE", "fqn": ["project_dbt", "STRH", "warehouse", "D_ENTERPRISE", "dwh_strh_D_ENTERPRISE"], "alias": "D_ENTERPRISE", "checksum": {"name": "sha256", "checksum": "8d8683d5dbc5fe574879a400213c801b2e2f6b8e501aa6e078981f56fbe53abf"}, "config": {"enabled": true, "alias": "D_ENTERPRISE", "schema": "dwh_view_cmd", "database": null, "tags": [], "meta": {"surrogate_key": true}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "T_UNIQUE_KEY", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "dwh_strh_D_ENTERPRISE.", "columns": {"T_DIM_KEY": {"name": "T_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CREATED_AT": {"name": "ENTERPRISE_CREATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_UPDATED_AT": {"name": "ENTERPRISE_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "BRAND": {"name": "BRAND", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_D_LEGAL_ENTITY_DIM_KEY": {"name": "T_D_LEGAL_ENTITY_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_NAME": {"name": "ENTERPRISE_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CONTACT": {"name": "ENTERPRISE_CONTACT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_PHONE_NUMBER": {"name": "ENTERPRISE_PHONE_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_MOBILE_NUMBER": {"name": "ENTERPRISE_MOBILE_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_STREET": {"name": "ENTERPRISE_STREET", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_HOUSE_NBR": {"name": "ENTERPRISE_HOUSE_NBR", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_ZIP_CODE": {"name": "ENTERPRISE_ZIP_CODE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CITY": {"name": "ENTERPRISE_CITY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_COUNTRY": {"name": "ENTERPRISE_COUNTRY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_EMAIL": {"name": "ENTERPRISE_EMAIL", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_JURIDICAL_FORM": {"name": "ENTERPRISE_JURIDICAL_FORM", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_VAT_NUMBER": {"name": "ENTERPRISE_VAT_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_AGRO_SWITH_ID": {"name": "ENTERPRISE_AGRO_SWITH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"surrogate_key": true}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/warehouse/D_ENTERPRISE/dwh_strh_D_ENTERPRISE.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dwh_view_cmd", "unique_key": "T_UNIQUE_KEY", "alias": "D_ENTERPRISE", "meta": {"surrogate_key": true}}, "created_at": 1728271772.4503555, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_ENTERPRISE`", "raw_code": "with surrogate_key as(\n    select\n\t\t{{ dbt_utils.generate_surrogate_key([\n\t\t\t\t'T_BUS_KEY', \n\t\t\t\t'T_ROW_HASH'\n\t\t\t])\n\t\t}} as T_UNIQUE_KEY, \n\t\t*\n\tFROM {{ref('stg_strh_D_ENTERPRISE')}}\n\n)\nSELECT \n    {% if is_incremental() %}\n        (SELECT COALESCE(MAX(T_DIM_KEY), 1) FROM {{ source('dwh_strh', 'D_ENTERPRISE') }} ) + ROW_NUMBER() over (Order by surrogate_key.T_INGESTION_TIMESTAMP ASC) as T_DIM_KEY,\n    {% else %}\n        ROW_NUMBER() over (Order by surrogate_key.T_INGESTION_TIMESTAMP ASC) as T_DIM_KEY,\n    {% endif %}\n    *\nFROM surrogate_key", "language": "sql", "refs": [{"name": "stg_strh_D_ENTERPRISE", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.project_dbt.stg_strh_D_ENTERPRISE"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON_CURRENT": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "dwh_strh_D_AUTHORIZED_PERSON_CURRENT", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/warehouse/D_AUTHORIZED_PERSON/dwh_strh_D_AUTHORIZED_PERSON_CURRENT.sql", "original_file_path": "models/STRH/warehouse/D_AUTHORIZED_PERSON/dwh_strh_D_AUTHORIZED_PERSON_CURRENT.sql", "unique_id": "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON_CURRENT", "fqn": ["project_dbt", "STRH", "warehouse", "D_AUTHORIZED_PERSON", "dwh_strh_D_AUTHORIZED_PERSON_CURRENT"], "alias": "D_AUTHORIZED_PERSON_CURRENT", "checksum": {"name": "sha256", "checksum": "4d8eb83f134b45d48f619e8ba8caa5b1e30f90580a3b794e266c509d82a00553"}, "config": {"enabled": true, "alias": "D_AUTHORIZED_PERSON_CURRENT", "schema": "dwh_view_cmd", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "T_UNIQUE_KEY", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "dwh incremental dwh_strh_D_AUTHORIZED_PERSON", "columns": {"T_DIM_KEY": {"name": "T_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_UNIQUE_KEY": {"name": "T_UNIQUE_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_CREATED_AT": {"name": "AUTHORIZED_PERSON_CREATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_UPDATED_AT": {"name": "AUTHORIZED_PERSON_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "BRAND": {"name": "BRAND", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_NAME": {"name": "AUTHORIZED_PERSON_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_FIRST_NAME": {"name": "AUTHORIZED_PERSON_FIRST_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_LAST_NAME": {"name": "AUTHORIZED_PERSON_LAST_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_LAST_NAME_PREFIX": {"name": "AUTHORIZED_PERSON_LAST_NAME_PREFIX", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_EMAIL": {"name": "AUTHORIZED_PERSON_EMAIL", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_PLACE_OF_BIRTH": {"name": "AUTHORIZED_PERSON_PLACE_OF_BIRTH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_GENDER": {"name": "AUTHORIZED_PERSON_GENDER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_MOBILE_PHONE": {"name": "AUTHORIZED_PERSON_MOBILE_PHONE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_CSN": {"name": "AUTHORIZED_PERSON_CSN", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/warehouse/D_AUTHORIZED_PERSON/dwh_strh_D_AUTHORIZED_PERSON_CURRENT.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dwh_view_cmd", "unique_key": "T_UNIQUE_KEY", "alias": "D_AUTHORIZED_PERSON_CURRENT"}, "created_at": 1728271772.4556766, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_AUTHORIZED_PERSON_CURRENT`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY T_ROW_HASH ORDER BY T_LOAD_TIMESTAMP DESC) AS rn\n    FROM  {{ref('dwh_strh_D_AUTHORIZED_PERSON')}}\n    )\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dwh_strh_D_AUTHORIZED_PERSON", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "dwh_strh_D_AUTHORIZED_PERSON", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/warehouse/D_AUTHORIZED_PERSON/dwh_strh_D_AUTHORIZED_PERSON.sql", "original_file_path": "models/STRH/warehouse/D_AUTHORIZED_PERSON/dwh_strh_D_AUTHORIZED_PERSON.sql", "unique_id": "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON", "fqn": ["project_dbt", "STRH", "warehouse", "D_AUTHORIZED_PERSON", "dwh_strh_D_AUTHORIZED_PERSON"], "alias": "D_AUTHORIZED_PERSON", "checksum": {"name": "sha256", "checksum": "742b5ba483ac5a02b8837ff0b9db06aa4fd1385eec043556c9f105f2d65119d1"}, "config": {"enabled": true, "alias": "D_AUTHORIZED_PERSON", "schema": "dwh_view_cmd", "database": null, "tags": [], "meta": {"surrogate_key": true}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "T_UNIQUE_KEY", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "dwh incremental dwh_strh_D_AUTHORIZED_PERSON", "columns": {"T_DIM_KEY": {"name": "T_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_UNIQUE_KEY": {"name": "T_UNIQUE_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_CREATED_AT": {"name": "AUTHORIZED_PERSON_CREATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_UPDATED_AT": {"name": "AUTHORIZED_PERSON_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "BRAND": {"name": "BRAND", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_NAME": {"name": "AUTHORIZED_PERSON_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_FIRST_NAME": {"name": "AUTHORIZED_PERSON_FIRST_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_LAST_NAME": {"name": "AUTHORIZED_PERSON_LAST_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_LAST_NAME_PREFIX": {"name": "AUTHORIZED_PERSON_LAST_NAME_PREFIX", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_EMAIL": {"name": "AUTHORIZED_PERSON_EMAIL", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_PLACE_OF_BIRTH": {"name": "AUTHORIZED_PERSON_PLACE_OF_BIRTH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_GENDER": {"name": "AUTHORIZED_PERSON_GENDER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_MOBILE_PHONE": {"name": "AUTHORIZED_PERSON_MOBILE_PHONE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_CSN": {"name": "AUTHORIZED_PERSON_CSN", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"surrogate_key": true}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/warehouse/D_AUTHORIZED_PERSON/dwh_strh_D_AUTHORIZED_PERSON.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "schema": "dwh_view_cmd", "unique_key": "T_UNIQUE_KEY", "alias": "D_AUTHORIZED_PERSON", "meta": {"surrogate_key": true}}, "created_at": 1728271772.4538836, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_AUTHORIZED_PERSON`", "raw_code": "with surrogate_key as(\n    select\n\t\t{{ dbt_utils.generate_surrogate_key([\n\t\t\t\t'T_BUS_KEY', \n\t\t\t\t'T_ROW_HASH'\n\t\t\t])\n\t\t}} as T_UNIQUE_KEY, \n\t\t*\n\tFROM {{ref('stg_strh_D_AUTHORIZED_PERSON')}}\n\n)\nSELECT \n    {% if is_incremental() %}\n        (SELECT COALESCE(MAX(T_DIM_KEY), 1) FROM {{ source('dwh_strh', 'D_AUTHORIZED_PERSON') }} ) + ROW_NUMBER() over (Order by surrogate_key.T_INGESTION_TIMESTAMP ASC) as T_DIM_KEY,\n    {% else %}\n        ROW_NUMBER() over (Order by surrogate_key.T_INGESTION_TIMESTAMP ASC) as T_DIM_KEY,\n    {% endif %}\n    *\nFROM surrogate_key", "language": "sql", "refs": [{"name": "stg_strh_D_AUTHORIZED_PERSON", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.project_dbt.stg_strh_D_AUTHORIZED_PERSON"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.stg_strh_D_LEGAL_ENTITY": {"database": "pj-bu-dw-data-sbx", "schema": "dev_staging_view_cmd", "name": "stg_strh_D_LEGAL_ENTITY", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/staging/D_LEGAL_ENTITY/stg_strh_D_LEGAL_ENTITY.sql", "original_file_path": "models/STRH/staging/D_LEGAL_ENTITY/stg_strh_D_LEGAL_ENTITY.sql", "unique_id": "model.project_dbt.stg_strh_D_LEGAL_ENTITY", "fqn": ["project_dbt", "STRH", "staging", "D_LEGAL_ENTITY", "stg_strh_D_LEGAL_ENTITY"], "alias": "D_LEGAL_ENTITY", "checksum": {"name": "sha256", "checksum": "7ec80e2a819786a3cf1a4e4df58a80b34aa03bc4bd6c984870f2c14b24ed4e31"}, "config": {"enabled": true, "alias": "D_LEGAL_ENTITY", "schema": "staging_view_cmd", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "staging area stg_strh_D_LEGAL_ENTITY.", "columns": {"T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_NAME": {"name": "LEGAL_ENTITY_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_IDENTIFIER": {"name": "LEGAL_ENTITY_IDENTIFIER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_IDENTIFIER_TYPE": {"name": "LEGAL_ENTITY_IDENTIFIER_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_UPDATED_AT": {"name": "LEGAL_ENTITY_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ENDED_AT": {"name": "LEGAL_ENTITY_ENDED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_INCORPORATION_DATE": {"name": "LEGAL_ENTITY_INCORPORATION_DATE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_JURIDICAL_FORM": {"name": "LEGAL_ENTITY_JURIDICAL_FORM", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ACTIVITY_CODE": {"name": "LEGAL_ENTITY_ACTIVITY_CODE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_ACTIVITY": {"name": "LEGAL_ENTITY_ACTIVITY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "LEGAL_ENTITY_NUMBER_OF_EMPLOYEES": {"name": "LEGAL_ENTITY_NUMBER_OF_EMPLOYEES", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/staging/D_LEGAL_ENTITY/stg_strh_D_LEGAL_ENTITY.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "staging_view_cmd", "alias": "D_LEGAL_ENTITY"}, "created_at": 1728271772.460428, "relation_name": "`pj-bu-dw-data-sbx`.`dev_staging_view_cmd`.`D_LEGAL_ENTITY`", "raw_code": "with \ncast_respond_data AS(\n  SELECT\n    RequestCacheID, ResponseTimeUTC,datatype,CacheKey,INSERT_HIST_TIMESTAMP,source_metadata_change_type,ingestion_meta_data_uuid,\n    ingestion_meta_data_source_timestamp,\n    CAST (KVKNumber AS STRING) AS LEGAL_ENTITY_IDENTIFIER,\n    CAST (KVKName AS STRING) AS LEGAL_ENTITY_NAME,\n    CAST (SAFE.PARSE_TIMESTAMP ('%Y%m%d', KVKenddate) AS TIMESTAMP) AS LEGAL_ENTITY_ENDED_AT,\n    CAST (SAFE.PARSE_TIMESTAMP ('%Y%m%d', KVKstartdate) AS TIMESTAMP) AS LEGAL_ENTITY_INCORPORATION_DATE,\n    CAST (KVKLegalForm AS STRING) AS LEGAL_ENTITY_JURIDICAL_FORM,\n    CAST (KVKSBIcode AS STRING) AS LEGAL_ENTITY_ACTIVITY_CODE,\n    CAST (KVKNumberOfEmployees AS INT64) AS LEGAL_ENTITY_NUMBER_OF_EMPLOYEES,\n    CAST (KVKSBIdescription AS STRING) AS LEGAL_ENTITY_ACTIVITY,\n  FROM(\n    SELECT\n      RequestCacheID, ResponseTimeUTC,datatype,CacheKey,INSERT_HIST_TIMESTAMP,source_metadata_change_type,ingestion_meta_data_uuid,\n      ingestion_meta_data_source_timestamp,\n      CASE\n      WHEN kr.datatype in (0, 1, 3) THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'<kvkNummer>(\\w+)</kvkNummer>')\n      WHEN kr.datatype = 2 THEN\n      JSON_VALUE(kr.ResponseData, '$.data.items[0].kvkNumber')\n      WHEN kr.datatype = 4 THEN\n      JSON_VALUE(kr.ResponseData, '$.kvkNummer')\n      END as KVKNumber,\n      CASE\n      WHEN kr.datatype in (0, 1, 3) THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'<naam>(.*?)</naam>')\n      WHEN kr.datatype = 2 THEN\n      COALESCE(\n        JSON_VALUE(kr.ResponseData, '$.data.items[0].tradeNames.businessName')\n        -- ,JSON_VALUE(kr.ResponseData, '$.data.items[0].tradeNames.shortBusinessName')\n        ,JSON_VALUE(kr.ResponseData, '$.data.items[0].tradeNames.currentStatutoryNames[0]')\n        -- ,JSON_VALUE(kr.ResponseData, '$.data.items[0].tradeNames.currentTradeNames[0]')\n      )\n      WHEN kr.datatype = 4 THEN\n      JSON_VALUE(kr.ResponseData, '$.naam')\n      END as KVKName,\n      CASE\n      WHEN kr.datatype in (0, 1) THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'(?s)<hoofdSbiActiviteit>[\\t\\n\\f\\r ]*<sbiCode>(\\w+)</sbiCode>')\n      WHEN kr.datatype = 2 THEN\n      JSON_VALUE(kr.ResponseData, '$.data.items[0].businessActivities[0].sbiCode')\n      WHEN kr.datatype = 3 THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'(?s)<sbiCode>[\\t\\n\\f\\r ]*<code>(\\w+)</code>.*<isHoofdactiviteit>[\\t\\n\\f\\r ]*<code>J')\n      WHEN kr.datatype = 4 THEN\n      JSON_VALUE(kr.ResponseData, '$.sbiActiviteiten[0].sbiCode')\n      END as KVKSBIcode,\n\n      CASE\n      WHEN kr.datatype in (0, 1, 3) THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'<totaalWerkzamePersonen>(\\w+)</totaalWerkzamePersonen>')\n      WHEN kr.datatype = 2 THEN\n      JSON_VALUE(kr.ResponseData, '$.data.items[0].employees')\n      WHEN kr.datatype = 4 THEN\n      JSON_VALUE(kr.ResponseData, '$.totaalWerkzamePersonen')\n      END as KVKNumberOfEmployees,\n\n      CASE\n      WHEN kr.datatype in (0, 1, 3) THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'<persoonRechtsvorm>(.*?)</persoonRechtsvorm>')\n      WHEN kr.datatype = 2 THEN\n      JSON_VALUE(kr.ResponseData, '$.data.items[0].legalForm')\n      WHEN kr.datatype = 4 THEN\n      JSON_VALUE(kr.ResponseData, '$._embedded.eigenaar.rechtsvorm')\n      END as KVKLegalForm,\n\n      CASE\n      WHEN kr.datatype in (0, 1, 3) THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'(?s)<registratie registratie.*?<datumAanvang>(\\w+)</datumAanvang>')\n      WHEN kr.datatype = 2 THEN\n      JSON_VALUE(kr.ResponseData, '$.data.items[0].foundationDate')\n      WHEN kr.datatype = 4 THEN\n      JSON_VALUE(kr.ResponseData, '$.materieleRegistratie.datumAanvang')\n      END as KVKstartdate,\n      CASE\n      WHEN kr.datatype in (0, 1, 3) THEN\n      REGEXP_EXTRACT(kr.ResponseData, r'(?s)<registratie registratie.*?<datumEinde>(\\w+)</datumEinde>')\n      WHEN kr.datatype = 4 THEN\n      JSON_VALUE(kr.ResponseData, '$.materieleRegistratie.datumEinde')\n      END as KVKenddate,\n      CASE\n      WHEN kr.datatype in (0, 1) THEN\n          REGEXP_EXTRACT(kr.ResponseData, '(?s)<hoofdSbiActiviteit>[\\t\\n\\f\\r ]*<sbiCode>.*</sbiCode>[\\t\\n\\f\\r ]*<omschrijving>(.*?)</omschrijving>')\n      WHEN kr.datatype = 2 THEN\n          JSON_VALUE(kr.ResponseData, '$.data.items[0].businessActivities[0].sbiCodeDescription')\n      WHEN kr.datatype = 3 THEN\n          REGEXP_EXTRACT(kr.ResponseData, '(?s)<sbiCode>[\\t\\n\\f\\r ]*<code>.*</code>[\\t\\n\\f\\r ]*<omschrijving>(.*?)</omschrijving>.*<isHoofdactiviteit>[\\t\\n\\f\\r ]*<code>J')\n      WHEN kr.datatype = 4 THEN\n          JSON_VALUE(kr.ResponseData, '$.sbiActiviteiten[0].sbiOmschrijving')\n      END as KVKSBIdescription,\n    FROM(\n      SELECT *,\n      ROW_NUMBER()OVER(PARTITION BY RequestCacheID ORDER BY responsetimeutc DESC, ingestion_meta_data_processing_timestamp DESC) AS rn,\n      FROM {{ source('stg_dl_h3_hkvk', 'public_RequestCache_current') }} kr\n    ) AS kr\n    WHERE kr.rn = 1\n  )\n  ),\n  source_table AS (\n    SELECT\n      CAST (re_ca.ingestion_meta_data_uuid AS STRING) AS T_BATCH_ID,\n      CURRENT_TIMESTAMP AS T_LOAD_TIMESTAMP,\n      TO_BASE64(SHA256(CONCAT(\"HKVK\", \"$\", CAST(re_ca.CacheKey AS STRING),CAST(re_ca.RequestCacheID AS STRING)))) AS T_BUS_KEY,\n      \"HKVK\" AS T_SOURCE,\n      CAST(re_ca.RequestCacheID AS STRING) AS T_SOURCE_PK_ID,\n      -- CAST(re_ca.RequestCacheID AS STRING) AS T_SOURCE_PK_UUID,\n      CAST(re_ca.INSERT_HIST_TIMESTAMP AS TIMESTAMP) AS T_INGESTION_TIMESTAMP,\n      re_ca.source_metadata_change_type AS T_DML_TYPE,\n      COALESCE (re_ca.LEGAL_ENTITY_NAME, \"NA\") AS LEGAL_ENTITY_NAME,\n      COALESCE (re_ca.LEGAL_ENTITY_IDENTIFIER, \"NA\") AS LEGAL_ENTITY_IDENTIFIER,\n      CAST (\"KVK\" AS STRING) AS LEGAL_ENTITY_IDENTIFIER_TYPE,\n      CAST(COALESCE(re_ca.ResponseTimeUTC,NULL) AS TIMESTAMP) AS LEGAL_ENTITY_UPDATED_AT,\n      re_ca.LEGAL_ENTITY_ENDED_AT,\n      re_ca.LEGAL_ENTITY_INCORPORATION_DATE,\n      COALESCE (re_ca.LEGAL_ENTITY_JURIDICAL_FORM, \"NA\") AS LEGAL_ENTITY_JURIDICAL_FORM,\n      COALESCE (re_ca.LEGAL_ENTITY_ACTIVITY_CODE, \"NA\") AS LEGAL_ENTITY_ACTIVITY_CODE,\n      COALESCE (re_ca.LEGAL_ENTITY_ACTIVITY, \"NA\") AS LEGAL_ENTITY_ACTIVITY,\n      re_ca.LEGAL_ENTITY_NUMBER_OF_EMPLOYEES AS LEGAL_ENTITY_NUMBER_OF_EMPLOYEES,\n    FROM cast_respond_data AS re_ca\n  )\n  SELECT\n    src.*,\n    TO_BASE64(SHA256(FORMAT(\"%T\", (SELECT AS STRUCT src.* EXCEPT(T_INGESTION_TIMESTAMP, T_DML_TYPE))))) AS T_ROW_HASH\n  FROM source_table AS src", "language": "sql", "refs": [], "sources": [["stg_dl_h3_hkvk", "public_RequestCache_current"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.stg_dl_h3_hkvk.public_RequestCache_current"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.stg_strh_D_ENTERPRISE": {"database": "pj-bu-dw-data-sbx", "schema": "dev_staging_view_cmd", "name": "stg_strh_D_ENTERPRISE", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/staging/D_ENTERPRISE/stg_strh_D_ENTERPRISE.sql", "original_file_path": "models/STRH/staging/D_ENTERPRISE/stg_strh_D_ENTERPRISE.sql", "unique_id": "model.project_dbt.stg_strh_D_ENTERPRISE", "fqn": ["project_dbt", "STRH", "staging", "D_ENTERPRISE", "stg_strh_D_ENTERPRISE"], "alias": "D_ENTERPRISE", "checksum": {"name": "sha256", "checksum": "abb57be39a74299c2a595895d95d3fa6ab9888b427e4e6da732c3ad355e712af"}, "config": {"enabled": true, "alias": "D_ENTERPRISE", "schema": "staging_view_cmd", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "staging area stg_strh_D_ENTERPRISE.", "columns": {"T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CREATED_AT": {"name": "ENTERPRISE_CREATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_UPDATED_AT": {"name": "ENTERPRISE_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "BRAND": {"name": "BRAND", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_D_LEGAL_ENTITY_DIM_KEY": {"name": "T_D_LEGAL_ENTITY_DIM_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_NAME": {"name": "ENTERPRISE_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CONTACT": {"name": "ENTERPRISE_CONTACT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_PHONE_NUMBER": {"name": "ENTERPRISE_PHONE_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_MOBILE_NUMBER": {"name": "ENTERPRISE_MOBILE_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_STREET": {"name": "ENTERPRISE_STREET", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_HOUSE_NBR": {"name": "ENTERPRISE_HOUSE_NBR", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_ZIP_CODE": {"name": "ENTERPRISE_ZIP_CODE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_CITY": {"name": "ENTERPRISE_CITY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_COUNTRY": {"name": "ENTERPRISE_COUNTRY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_EMAIL": {"name": "ENTERPRISE_EMAIL", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_JURIDICAL_FORM": {"name": "ENTERPRISE_JURIDICAL_FORM", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_VAT_NUMBER": {"name": "ENTERPRISE_VAT_NUMBER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ENTERPRISE_AGRO_SWITH_ID": {"name": "ENTERPRISE_AGRO_SWITH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/staging/D_ENTERPRISE/stg_strh_D_ENTERPRISE.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "staging_view_cmd", "alias": "D_ENTERPRISE"}, "created_at": 1728271772.4620266, "relation_name": "`pj-bu-dw-data-sbx`.`dev_staging_view_cmd`.`D_ENTERPRISE`", "raw_code": "with\npre_kal_sys AS (\n    SELECT\n      \"H1_HKLC\" AS T_SOURCE,\n      kal_tblant_sys.KlantID,\n      IF(sys_at.code = 'EHERKENNING3KVK',kal_tblant_sys.Waarde, NULL) AS ENTERPRISE_IDENTIFIER,\n      IF(sys_at.code = 'EHERKENNING3KVKVESTIGINGSNUMMER',kal_tblant_sys.Waarde, NULL) AS ENTERPRISE_LOCATION_IDENTIFIER,\n      IF(sys_at.code = 'EHERKENNINGCOMPLEVEL',kal_tblant_sys.Waarde, NULL) ENTERPRISE_EH_AUTHENTICATION_LEVEL,\n    FROM (\n      SELECT\n        ROW_NUMBER() OVER ( PARTITION BY klantid, AttribuutID, AttribuutID, waarde ORDER BY ingestion_meta_data_processing_timestamp) AS RN,\n        KlantID, Waarde,AttribuutID\n      FROM {{ source('stg_dl_h3_hklc', 'public_tblKlantSysAttr_current') }}\n      WHERE systeemid = 1\n      AND Waarde IS NOT NULL\n      AND Waarde != \"\"\n    ) AS  kal_tblant_sys\n    JOIN {{ source('stg_dl_h3_hklc', 'public_tblSysteemAttribuut_current') }} AS sys_at\n      ON sys_at.AttribuutID=kal_tblant_sys.AttribuutID\n    WHERE kal_tblant_sys.RN = 1\n    AND sys_at.code in('EHERKENNING3KVK','EHERKENNING3KVKVESTIGINGSNUMMER','EHERKENNINGCOMPLEVEL')\n  ),\n  kal_sys AS (\n     SELECT\n      KlantID,\n      STRING_AGG(ENTERPRISE_IDENTIFIER) ENTERPRISE_IDENTIFIER,\n      STRING_AGG(ENTERPRISE_LOCATION_IDENTIFIER) ENTERPRISE_LOCATION_IDENTIFIER,\n      MAX(ENTERPRISE_EH_AUTHENTICATION_LEVEL) ENTERPRISE_EH_AUTHENTICATION_LEVEL\n    FROM pre_kal_sys\n    GROUP BY KlantID\n  ),\n  source_table AS (\n      SELECT\n        CAST (kal_klant.ingestion_meta_data_uuid AS STRING) AS T_BATCH_ID,\n        CURRENT_TIMESTAMP AS T_LOAD_TIMESTAMP,\n        TO_BASE64(SHA256(CONCAT(\"HKLC\", \"$\", CAST(kal_klant.KlantID AS STRING)))) AS T_BUS_KEY,\n        \"HKLC\" AS T_SOURCE,\n        CAST(kal_klant.KlantID AS STRING) AS T_SOURCE_PK_ID,\n        CAST(kal_klant.INSERT_HIST_TIMESTAMP AS TIMESTAMP) AS T_INGESTION_TIMESTAMP,\n        kal_klant.source_metadata_change_type AS T_DML_TYPE,\n        CAST(COALESCE (kal_klant.DateCreate, NULL) AS TIMESTAMP) ENTERPRISE_CREATED_AT,\n        CAST(COALESCE (kal_klant.DateChange, NULL) AS TIMESTAMP) ENTERPRISE_UPDATED_AT,\n        COALESCE(leg.T_DIM_KEY,0) AS T_D_LEGAL_ENTITY_DIM_KEY,\n        \"Z_login\" AS BRAND,\n        COALESCE (kal_klant.bedrijfsnaam, \"NA\") AS ENTERPRISE_NAME,\n        CASE CONCAT(IF(COALESCE (kal_klant.Voorletters, \"\")!=\"\",CONCAT(kal_klant.Voorletters,\" \"),\"\"),\n              IF(COALESCE (kal_klant.tussenvoegsel, \"\")!=\"\",CONCAT(kal_klant.tussenvoegsel,\" \"),\"\"),\n              COALESCE (kal_klant.Achternaam, \"\"))\n        WHEN \"\" THEN \"NA\"\n        ELSE CONCAT(IF(COALESCE (kal_klant.Voorletters, \"\")!=\"\",CONCAT(kal_klant.Voorletters,\" \"),\"\"),\n              IF(COALESCE (kal_klant.tussenvoegsel, \"\")!=\"\",CONCAT(kal_klant.tussenvoegsel,\" \"),\"\"),\n              COALESCE (kal_klant.Achternaam, \"\"))\n        END AS ENTERPRISE_CONTACT,\n        COALESCE (kal_klant.Telefoon, \"NA\") AS ENTERPRISE_PHONE_NUMBER,\n        COALESCE (kal_klant.Mobiel, \"NA\") AS ENTERPRISE_MOBILE_NUMBER,\n        COALESCE (kal_klant.Straat, \"NA\") AS ENTERPRISE_STREET,\n        COALESCE (kal_klant.HuisNr, \"NA\") AS ENTERPRISE_HOUSE_NBR,\n        COALESCE (kal_klant.Postcode, \"NA\") AS ENTERPRISE_ZIP_CODE,\n        COALESCE (kal_klant.Plaats, \"NA\") AS ENTERPRISE_CITY,\n        COALESCE (kal_tblant.exactcode, \"NA\") AS ENTERPRISE_COUNTRY,\n        COALESCE (kal_klant.EmailAccount, \"NA\") AS ENTERPRISE_EMAIL,\n        COALESCE (CAST(kal_klant.BedrijfsvormID AS STRING), \"NA\") AS ENTERPRISE_JURIDICAL_FORM,\n        COALESCE (kal_klant.btwnr, \"NA\") AS ENTERPRISE_VAT_NUMBER,\n        COALESCE (kal_sys.ENTERPRISE_IDENTIFIER, \"NA\") AS ENTERPRISE_IDENTIFIER,\n        CAST(\"KVK\" AS STRING) AS ENTERPRISE_IDENTIFIER_TYPE,\n        COALESCE (kal_sys.ENTERPRISE_LOCATION_IDENTIFIER, \"NA\") AS ENTERPRISE_LOCATION_IDENTIFIER,\n        COALESCE (CAST( kal_sys.ENTERPRISE_EH_AUTHENTICATION_LEVEL AS STRING), \"NA\") AS ENTERPRISE_EH_AUTHENTICATION_LEVEL,\n        COALESCE (CAST(kal_klant.KlantNr AS STRING), \"NA\") AS ENTERPRISE_CUSTOMER_NUMBER,\n        COALESCE (kal_klant.AgroSwitchID, \"NA\") AS ENTERPRISE_AGRO_SWITH_ID,\n      FROM {{ source('stg_dl_h3_hklc', 'public_tblKlant_current') }} AS kal_klant\n      LEFT JOIN {{ source('stg_dl_h3_hklc', 'public_tblLand_current') }} AS kal_tblant ON kal_klant.LandID = kal_tblant.LandID\n      LEFT JOIN kal_sys\n        ON kal_sys.KlantID=kal_klant.KlantID\n      LEFT JOIN {{ref('dwh_strh_D_LEGAL_ENTITY_CURRENT')}}  AS leg\n        ON leg.T_SOURCE = \"H1_HKVK\"\n        AND kal_sys.ENTERPRISE_IDENTIFIER = leg.LEGAL_ENTITY_IDENTIFIER\n  )\n  SELECT\n    src.*,\n    TO_BASE64(SHA256(FORMAT(\"%T\", (SELECT AS STRUCT src.* EXCEPT(T_BATCH_ID,T_INGESTION_TIMESTAMP,T_LOAD_TIMESTAMP, T_DML_TYPE))))) AS T_ROW_HASH\n  FROM source_table AS src", "language": "sql", "refs": [{"name": "dwh_strh_D_LEGAL_ENTITY_CURRENT", "package": null, "version": null}], "sources": [["stg_dl_h3_hklc", "public_tblLand_current"], ["stg_dl_h3_hklc", "public_tblSysteemAttribuut_current"], ["stg_dl_h3_hklc", "public_tblKlant_current"], ["stg_dl_h3_hklc", "public_tblKlantSysAttr_current"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.stg_dl_h3_hklc.public_tblLand_current", "source.project_dbt.stg_dl_h3_hklc.public_tblSysteemAttribuut_current", "source.project_dbt.stg_dl_h3_hklc.public_tblKlant_current", "source.project_dbt.stg_dl_h3_hklc.public_tblKlantSysAttr_current", "model.project_dbt.dwh_strh_D_LEGAL_ENTITY_CURRENT"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.stg_strh_D_AUTHORIZED_PERSON": {"database": "pj-bu-dw-data-sbx", "schema": "dev_staging_view_cmd", "name": "stg_strh_D_AUTHORIZED_PERSON", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/staging/D_AUTHORIZED_PERSON/stg_strh_D_AUTHORIZED_PERSON.sql", "original_file_path": "models/STRH/staging/D_AUTHORIZED_PERSON/stg_strh_D_AUTHORIZED_PERSON.sql", "unique_id": "model.project_dbt.stg_strh_D_AUTHORIZED_PERSON", "fqn": ["project_dbt", "STRH", "staging", "D_AUTHORIZED_PERSON", "stg_strh_D_AUTHORIZED_PERSON"], "alias": "D_AUTHORIZED_PERSON", "checksum": {"name": "sha256", "checksum": "d96022fed71ef00f51191a5da2b61b0bbc0cb071e489add491eb9be84f13ea61"}, "config": {"enabled": true, "alias": "D_AUTHORIZED_PERSON", "schema": "staging_view_cmd", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "description text", "columns": {"T_BATCH_ID": {"name": "T_BATCH_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_BUS_KEY": {"name": "T_BUS_KEY", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE": {"name": "T_SOURCE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_SOURCE_PK_ID": {"name": "T_SOURCE_PK_ID", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_LOAD_TIMESTAMP": {"name": "T_LOAD_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_INGESTION_TIMESTAMP": {"name": "T_INGESTION_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_DML_TYPE": {"name": "T_DML_TYPE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_CREATED_AT": {"name": "AUTHORIZED_PERSON_CREATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_UPDATED_AT": {"name": "AUTHORIZED_PERSON_UPDATED_AT", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "BRAND": {"name": "BRAND", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_NAME": {"name": "AUTHORIZED_PERSON_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_FIRST_NAME": {"name": "AUTHORIZED_PERSON_FIRST_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_LAST_NAME": {"name": "AUTHORIZED_PERSON_LAST_NAME", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_LAST_NAME_PREFIX": {"name": "AUTHORIZED_PERSON_LAST_NAME_PREFIX", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_EMAIL": {"name": "AUTHORIZED_PERSON_EMAIL", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_PLACE_OF_BIRTH": {"name": "AUTHORIZED_PERSON_PLACE_OF_BIRTH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_GENDER": {"name": "AUTHORIZED_PERSON_GENDER", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_MOBILE_PHONE": {"name": "AUTHORIZED_PERSON_MOBILE_PHONE", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AUTHORIZED_PERSON_CSN": {"name": "AUTHORIZED_PERSON_CSN", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "T_ROW_HASH": {"name": "T_ROW_HASH", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/staging/D_AUTHORIZED_PERSON/stg_strh_D_AUTHORIZED_PERSON.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "staging_view_cmd", "alias": "D_AUTHORIZED_PERSON"}, "created_at": 1728271772.463481, "relation_name": "`pj-bu-dw-data-sbx`.`dev_staging_view_cmd`.`D_AUTHORIZED_PERSON`", "raw_code": "with\npersion_atribute_table AS(\n    SELECT\n        PersonId,\n        STRING_AGG (DISTINCT (AUTHORIZED_PERSON_FIRST_NAME)) AS AUTHORIZED_PERSON_FIRST_NAME,\n        STRING_AGG (DISTINCT (AUTHORIZED_PERSON_LAST_NAME)) AS AUTHORIZED_PERSON_LAST_NAME,\n        STRING_AGG (DISTINCT (AUTHORIZED_PERSON_LAST_NAME_PREFIX)) AS AUTHORIZED_PERSON_LAST_NAME_PREFIX,\n        STRING_AGG (DISTINCT (AUTHORIZED_PERSON_PLACE_OF_BIRTH)) AS AUTHORIZED_PERSON_PLACE_OF_BIRTH,\n        STRING_AGG (DISTINCT (AUTHORIZED_PERSON_GENDER)) AS AUTHORIZED_PERSON_GENDER,\n        STRING_AGG (DISTINCT (AUTHORIZED_PERSON_MOBILE_PHONE)) AS AUTHORIZED_PERSON_MOBILE_PHONE,\n        STRING_AGG (DISTINCT (AUTHORIZED_PERSON_DATE_OF_BIRTH)) AS AUTHORIZED_PERSON_DATE_OF_BIRTH,\n    FROM(\n        SELECT\n            he_per_atb.PersonId,\n            IF (he_per_atb.AttributeUrnId=1, he_per_atb.Value, NULL) AS AUTHORIZED_PERSON_FIRST_NAME,\n            IF (he_per_atb.AttributeUrnId=4, he_per_atb.Value, NULL) AS AUTHORIZED_PERSON_LAST_NAME,\n            IF (he_per_atb.AttributeUrnId=3, he_per_atb.Value, NULL) AS AUTHORIZED_PERSON_LAST_NAME_PREFIX,\n            IF (he_per_atb.AttributeUrnId=6, he_per_atb.Value, NULL) AS AUTHORIZED_PERSON_PLACE_OF_BIRTH,\n            IF (he_per_atb.AttributeUrnId=7, he_per_atb.Value, NULL) AS AUTHORIZED_PERSON_GENDER,\n            IF (he_per_atb.AttributeUrnId=12, he_per_atb.Value, NULL) AS AUTHORIZED_PERSON_MOBILE_PHONE,\n            IF (he_per_atb.AttributeUrnId=5, \"Y\", NULL) AS AUTHORIZED_PERSON_DATE_OF_BIRTH,\n        FROM {{ source('stg_dl_h3_hehe', 'public_PersonAttribute_current') }} AS he_per_atb\n    )\n    GROUP BY PersonId\n),\nsource_table as(\n    SELECT\n        CAST (he_per.ingestion_meta_data_uuid AS STRING) AS T_BATCH_ID,\n        TO_BASE64((SHA256(CONCAT(\"HEHE\", \"$\", CAST (he_per.PersonId AS STRING))))) AS T_BUS_KEY,\n        \"HEHE\" AS T_SOURCE,\n        CAST (he_per.PersonId AS STRING) AS T_SOURCE_PK_ID,\n        CURRENT_TIMESTAMP AS T_LOAD_TIMESTAMP,\n        CAST (he_per.INSERT_HIST_TIMESTAMP AS TIMESTAMP) AS T_INGESTION_TIMESTAMP,\n        he_per.source_metadata_change_type AS T_DML_TYPE,\n        CAST (COALESCE (he_per.InsertDate, NULL) AS TIMESTAMP) AUTHORIZED_PERSON_CREATED_AT,\n        CAST (COALESCE (he_per.LastUpdatedDate, NULL) AS TIMESTAMP) AUTHORIZED_PERSON_UPDATED_AT,\n        \"We-ID\" AS BRAND,\n        COALESCE (he_per.Name, \"NA\") AS AUTHORIZED_PERSON_NAME,\n        COALESCE (he_per_atb.AUTHORIZED_PERSON_FIRST_NAME, \"NA\") AS AUTHORIZED_PERSON_FIRST_NAME,\n        COALESCE (he_per_atb.AUTHORIZED_PERSON_LAST_NAME, \"NA\") AS AUTHORIZED_PERSON_LAST_NAME,\n        COALESCE (he_per_atb.AUTHORIZED_PERSON_LAST_NAME_PREFIX, \"NA\") AS AUTHORIZED_PERSON_LAST_NAME_PREFIX,\n        COALESCE (he_per.EmailAddress, \"NA\") AS AUTHORIZED_PERSON_EMAIL,\n        COALESCE (he_per_atb.AUTHORIZED_PERSON_PLACE_OF_BIRTH, \"NA\") AS AUTHORIZED_PERSON_PLACE_OF_BIRTH,\n        COALESCE (he_per_atb.AUTHORIZED_PERSON_GENDER, \"NA\") AS AUTHORIZED_PERSON_GENDER,\n        COALESCE (he_per_atb.AUTHORIZED_PERSON_MOBILE_PHONE, \"NA\") AS AUTHORIZED_PERSON_MOBILE_PHONE,\n        COALESCE (he_per.BsnkId, \"NA\") AS AUTHORIZED_PERSON_CSN,\n\n      FROM {{ source('stg_dl_h3_hehe', 'public_Person_current') }} AS he_per\n      LEFT JOIN persion_atribute_table AS he_per_atb\n        ON he_per.PersonId = he_per_atb.PersonId\n)\nSELECT\n    src.*,\n    TO_BASE64(SHA256(FORMAT(\"%T\", (SELECT AS STRUCT src.* EXCEPT(T_BATCH_ID,T_INGESTION_TIMESTAMP,T_LOAD_TIMESTAMP, T_DML_TYPE))))) AS T_ROW_HASH\n  FROM source_table AS src", "language": "sql", "refs": [], "sources": [["stg_dl_h3_hehe", "public_Person_current"], ["stg_dl_h3_hehe", "public_PersonAttribute_current"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.stg_dl_h3_hehe.public_Person_current", "source.project_dbt.stg_dl_h3_hehe.public_PersonAttribute_current"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h1_hkvk_public_RequestCache_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h1_hkvk", "name": "dl_h1_hkvk_public_RequestCache_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h1_hkvk/public_RequestCache/dl_h1_hkvk_public_RequestCache_current.sql", "original_file_path": "models/STRH/datalake/h1_hkvk/public_RequestCache/dl_h1_hkvk_public_RequestCache_current.sql", "unique_id": "model.project_dbt.dl_h1_hkvk_public_RequestCache_current", "fqn": ["project_dbt", "STRH", "datalake", "h1_hkvk", "public_RequestCache", "dl_h1_hkvk_public_RequestCache_current"], "alias": "public_RequestCache_current", "checksum": {"name": "sha256", "checksum": "1143eab13b4734b627eee9dbb1c3c39e0de41548a620fe42c6eeda8ad04eead0"}, "config": {"enabled": true, "alias": "public_RequestCache_current", "schema": "dl_h1_hkvk", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_RequestCache_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requestcacheid": {"name": "requestcacheid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responsedata": {"name": "responsedata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responsetimeutc": {"name": "responsetimeutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datatype": {"name": "datatype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cachekey": {"name": "cachekey", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h1_hkvk/public_RequestCache/dl_h1_hkvk_public_RequestCache_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h1_hkvk", "tags": ["datalake"], "alias": "public_RequestCache_current"}, "created_at": 1728271772.4892318, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h1_hkvk`.`public_RequestCache_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `RequestCacheID`  ,  `CacheKey`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h1_hkvk_public_RequestCache')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h1_hkvk_public_RequestCache", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h1_hkvk_public_RequestCache"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h1_hkvk_public_RequestCache": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h1_hkvk", "name": "dl_h1_hkvk_public_RequestCache", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h1_hkvk/public_RequestCache/dl_h1_hkvk_public_RequestCache.sql", "original_file_path": "models/STRH/datalake/h1_hkvk/public_RequestCache/dl_h1_hkvk_public_RequestCache.sql", "unique_id": "model.project_dbt.dl_h1_hkvk_public_RequestCache", "fqn": ["project_dbt", "STRH", "datalake", "h1_hkvk", "public_RequestCache", "dl_h1_hkvk_public_RequestCache"], "alias": "public_RequestCache", "checksum": {"name": "sha256", "checksum": "52d47fbdca73ce1e3617c396c5449867aeaf13bf334d91fbc08b8e900c2ca26b"}, "config": {"enabled": true, "alias": "public_RequestCache", "schema": "dl_h1_hkvk", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_RequestCache", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requestcacheid": {"name": "requestcacheid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responsedata": {"name": "responsedata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responsetimeutc": {"name": "responsetimeutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datatype": {"name": "datatype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cachekey": {"name": "cachekey", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h1_hkvk/public_RequestCache/dl_h1_hkvk_public_RequestCache.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h1_hkvk", "tags": ["datalake"], "alias": "public_RequestCache"}, "created_at": 1728271772.4907553, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h1_hkvk`.`public_RequestCache`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h1_hkvk', 'public_RequestCache')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h1_hkvk", "public_RequestCache"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h1_hkvk.public_RequestCache"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantDienst": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantDienst", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantDienst/dl_h3_hklc_public_tblKlantDienst.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantDienst/dl_h3_hklc_public_tblKlantDienst.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantDienst", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantDienst", "dl_h3_hklc_public_tblKlantDienst"], "alias": "public_tblKlantDienst", "checksum": {"name": "sha256", "checksum": "69ecf9b3823b9ef31fd38116f5da9fbd1f7b4b574fb3dca50d465ee06bedd5b1"}, "config": {"enabled": true, "alias": "public_tblKlantDienst", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantDienst", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dienstid": {"name": "dienstid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurid": {"name": "factuurid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuuraandealer": {"name": "factuuraandealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referentie": {"name": "referentie", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatieid": {"name": "kortingorganisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatievolgnr": {"name": "kortingorganisatievolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr": {"name": "kortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantDienst/dl_h3_hklc_public_tblKlantDienst.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantDienst"}, "created_at": 1728271772.4972982, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantDienst`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblKlantDienst')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblKlantDienst"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblKlantDienst"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantDienst_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantDienst_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantDienst/dl_h3_hklc_public_tblKlantDienst_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantDienst/dl_h3_hklc_public_tblKlantDienst_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantDienst_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantDienst", "dl_h3_hklc_public_tblKlantDienst_current"], "alias": "public_tblKlantDienst_current", "checksum": {"name": "sha256", "checksum": "f7579e4b19249da0be47cc8cf6aba894edb94d0f48ff4c17446c95382c0d35f8"}, "config": {"enabled": true, "alias": "public_tblKlantDienst_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantDienst_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dienstid": {"name": "dienstid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurid": {"name": "factuurid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuuraandealer": {"name": "factuuraandealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referentie": {"name": "referentie", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatieid": {"name": "kortingorganisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatievolgnr": {"name": "kortingorganisatievolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr": {"name": "kortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantDienst/dl_h3_hklc_public_tblKlantDienst_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantDienst_current"}, "created_at": 1728271772.4955962, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantDienst_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `KlantID`  ,  `VolgNr`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblKlantDienst')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblKlantDienst", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblKlantDienst"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantSysAttr_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantSysAttr/dl_h3_hklc_public_tblKlantSysAttr_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantSysAttr/dl_h3_hklc_public_tblKlantSysAttr_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantSysAttr", "dl_h3_hklc_public_tblKlantSysAttr_current"], "alias": "public_tblKlantSysAttr_current", "checksum": {"name": "sha256", "checksum": "b45f10f8cff2787116662bc4a91ea1675c7837c5db7e8e30964fc0c37618fc42"}, "config": {"enabled": true, "alias": "public_tblKlantSysAttr_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantSysAttr_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systeemid": {"name": "systeemid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribuutid": {"name": "attribuutid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waarde": {"name": "waarde", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantSysAttr/dl_h3_hklc_public_tblKlantSysAttr_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantSysAttr_current"}, "created_at": 1728271772.5007372, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantSysAttr_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `KlantID`  ,  `SysteemID`  ,  `AttribuutID`  ,  `rowguid`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblKlantSysAttr')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblKlantSysAttr", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantSysAttr", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantSysAttr/dl_h3_hklc_public_tblKlantSysAttr.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantSysAttr/dl_h3_hklc_public_tblKlantSysAttr.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantSysAttr", "dl_h3_hklc_public_tblKlantSysAttr"], "alias": "public_tblKlantSysAttr", "checksum": {"name": "sha256", "checksum": "cfc63cf612e318add14ecf9d9a3b44b0bab542dfac8c17162a9b1844b4eb2630"}, "config": {"enabled": true, "alias": "public_tblKlantSysAttr", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantSysAttr", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systeemid": {"name": "systeemid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribuutid": {"name": "attribuutid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waarde": {"name": "waarde", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantSysAttr/dl_h3_hklc_public_tblKlantSysAttr.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantSysAttr"}, "created_at": 1728271772.4992585, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantSysAttr`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblKlantSysAttr')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblKlantSysAttr"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblKlantSysAttr"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_DA_relationrole": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_DA_relationrole", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_DA_relationrole/dl_h3_hklc_public_DA_relationrole.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_DA_relationrole/dl_h3_hklc_public_DA_relationrole.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_DA_relationrole", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relationrole", "dl_h3_hklc_public_DA_relationrole"], "alias": "public_DA_relationrole", "checksum": {"name": "sha256", "checksum": "33d53a993ab1bb26fa0886057f9c4f45ce4f42913018c1069572c959811f822d"}, "config": {"enabled": true, "alias": "public_DA_relationrole", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_DA_relationrole", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationtype": {"name": "relationtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationrole": {"name": "relationrole", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_DA_relationrole/dl_h3_hklc_public_DA_relationrole.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_DA_relationrole"}, "created_at": 1728271772.502475, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_DA_relationrole`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_DA_relationrole')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_DA_relationrole"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_DA_relationrole"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_DA_relationrole_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_DA_relationrole_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_DA_relationrole/dl_h3_hklc_public_DA_relationrole_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_DA_relationrole/dl_h3_hklc_public_DA_relationrole_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_DA_relationrole_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relationrole", "dl_h3_hklc_public_DA_relationrole_current"], "alias": "public_DA_relationrole_current", "checksum": {"name": "sha256", "checksum": "a2557a9f9958a0ddd540f5b05f3cfe7c4d4982dc367a7d27337e75ec2e085b28"}, "config": {"enabled": true, "alias": "public_DA_relationrole_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_DA_relationrole_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationtype": {"name": "relationtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationrole": {"name": "relationrole", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_DA_relationrole/dl_h3_hklc_public_DA_relationrole_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_DA_relationrole_current"}, "created_at": 1728271772.5041301, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_DA_relationrole_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `relationtype`  ,  `relationrole`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_DA_relationrole')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_DA_relationrole", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_DA_relationrole"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlant_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlant_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlant/dl_h3_hklc_public_tblKlant_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlant/dl_h3_hklc_public_tblKlant_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlant_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlant", "dl_h3_hklc_public_tblKlant_current"], "alias": "public_tblKlant_current", "checksum": {"name": "sha256", "checksum": "d8a14e2cc53395f83e25adfd274b56a3afb8db62576f37f19e6e8b787a0dd84f"}, "config": {"enabled": true, "alias": "public_tblKlant_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlant_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "achternaam": {"name": "achternaam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tussenvoegsel": {"name": "tussenvoegsel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "voorletters": {"name": "voorletters", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantnr": {"name": "klantnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "titelid": {"name": "titelid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geslacht": {"name": "geslacht", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landid": {"name": "landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "straat": {"name": "straat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "huisnr": {"name": "huisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postcode": {"name": "postcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plaats": {"name": "plaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefax": {"name": "telefax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "debiteurnr": {"name": "debiteurnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rekeningnr": {"name": "rekeningnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "soortreknr": {"name": "soortreknr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sectorid": {"name": "sectorid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ubn": {"name": "ubn", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tanknr": {"name": "tanknr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leveranciernr": {"name": "leveranciernr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fabriekid": {"name": "fabriekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agroswitchid": {"name": "agroswitchid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "akkernetid": {"name": "akkernetid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datecreate": {"name": "datecreate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "autoincasso": {"name": "autoincasso", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ziezouid": {"name": "ziezouid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ziezopwd": {"name": "ziezopwd", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dmgeenpost": {"name": "dmgeenpost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dmgeenemail": {"name": "dmgeenemail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dmgeenfax": {"name": "dmgeenfax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_sshapwd": {"name": "sm_sshapwd", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_pwddata": {"name": "sm_pwddata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_disabled": {"name": "sm_disabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_lastlogin": {"name": "sm_lastlogin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxabvolgnr": {"name": "maxabvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxdivolgnr": {"name": "maxdivolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxklvolgnr": {"name": "maxklvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlivolgnr": {"name": "maxlivolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxopmerkingid": {"name": "maxopmerkingid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefoon": {"name": "telefoon", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobiel": {"name": "mobiel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bedrijfsnaam": {"name": "bedrijfsnaam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bedrijfsvormid": {"name": "bedrijfsvormid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountstatus": {"name": "accountstatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accounteinddatum": {"name": "accounteinddatum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailaccount": {"name": "emailaccount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailchecked": {"name": "emailchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefoonchecked": {"name": "telefoonchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobielchecked": {"name": "mobielchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefaxchecked": {"name": "telefaxchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuur": {"name": "emailfactuur", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aselect_falselogincount": {"name": "aselect_falselogincount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aselect_lockouttime": {"name": "aselect_lockouttime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aselect_firstfalselogin": {"name": "aselect_firstfalselogin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "poststatus": {"name": "poststatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exactchange": {"name": "exactchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "savedpassword": {"name": "savedpassword", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "passwordchangeddate": {"name": "passwordchangeddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "passwordpolicy": {"name": "passwordpolicy", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuuremail": {"name": "emailfactuuremail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuuraandealer": {"name": "factuuraandealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_landid": {"name": "f_landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_straat": {"name": "f_straat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_huisnr": {"name": "f_huisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_postcode": {"name": "f_postcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_plaats": {"name": "f_plaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwnr": {"name": "btwnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuurherinnering": {"name": "emailfactuurherinnering", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_tav": {"name": "f_tav", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "taal": {"name": "taal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxkortingvolgnr": {"name": "maxkortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlant/dl_h3_hklc_public_tblKlant_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlant_current"}, "created_at": 1728271772.518597, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlant_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `KlantID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblKlant')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblKlant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblKlant"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlant": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlant", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlant/dl_h3_hklc_public_tblKlant.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlant/dl_h3_hklc_public_tblKlant.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlant", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlant", "dl_h3_hklc_public_tblKlant"], "alias": "public_tblKlant", "checksum": {"name": "sha256", "checksum": "344e46031ec30ce8d8fdedcf9bb5dfe868d56381dee2e6b5c1159e57184f33f6"}, "config": {"enabled": true, "alias": "public_tblKlant", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlant", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "achternaam": {"name": "achternaam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tussenvoegsel": {"name": "tussenvoegsel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "voorletters": {"name": "voorletters", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantnr": {"name": "klantnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "titelid": {"name": "titelid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geslacht": {"name": "geslacht", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landid": {"name": "landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "straat": {"name": "straat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "huisnr": {"name": "huisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postcode": {"name": "postcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plaats": {"name": "plaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefax": {"name": "telefax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "debiteurnr": {"name": "debiteurnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rekeningnr": {"name": "rekeningnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "soortreknr": {"name": "soortreknr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sectorid": {"name": "sectorid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ubn": {"name": "ubn", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tanknr": {"name": "tanknr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leveranciernr": {"name": "leveranciernr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fabriekid": {"name": "fabriekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agroswitchid": {"name": "agroswitchid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "akkernetid": {"name": "akkernetid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datecreate": {"name": "datecreate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "autoincasso": {"name": "autoincasso", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ziezouid": {"name": "ziezouid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ziezopwd": {"name": "ziezopwd", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dmgeenpost": {"name": "dmgeenpost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dmgeenemail": {"name": "dmgeenemail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dmgeenfax": {"name": "dmgeenfax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_sshapwd": {"name": "sm_sshapwd", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_pwddata": {"name": "sm_pwddata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_disabled": {"name": "sm_disabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sm_lastlogin": {"name": "sm_lastlogin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxabvolgnr": {"name": "maxabvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxdivolgnr": {"name": "maxdivolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxklvolgnr": {"name": "maxklvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlivolgnr": {"name": "maxlivolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxopmerkingid": {"name": "maxopmerkingid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefoon": {"name": "telefoon", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobiel": {"name": "mobiel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bedrijfsnaam": {"name": "bedrijfsnaam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bedrijfsvormid": {"name": "bedrijfsvormid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountstatus": {"name": "accountstatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accounteinddatum": {"name": "accounteinddatum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailaccount": {"name": "emailaccount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailchecked": {"name": "emailchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefoonchecked": {"name": "telefoonchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobielchecked": {"name": "mobielchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefaxchecked": {"name": "telefaxchecked", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuur": {"name": "emailfactuur", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aselect_falselogincount": {"name": "aselect_falselogincount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aselect_lockouttime": {"name": "aselect_lockouttime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aselect_firstfalselogin": {"name": "aselect_firstfalselogin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "poststatus": {"name": "poststatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exactchange": {"name": "exactchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "savedpassword": {"name": "savedpassword", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "passwordchangeddate": {"name": "passwordchangeddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "passwordpolicy": {"name": "passwordpolicy", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuuremail": {"name": "emailfactuuremail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuuraandealer": {"name": "factuuraandealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_landid": {"name": "f_landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_straat": {"name": "f_straat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_huisnr": {"name": "f_huisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_postcode": {"name": "f_postcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_plaats": {"name": "f_plaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwnr": {"name": "btwnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuurherinnering": {"name": "emailfactuurherinnering", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "f_tav": {"name": "f_tav", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "taal": {"name": "taal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxkortingvolgnr": {"name": "maxkortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlant/dl_h3_hklc_public_tblKlant.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlant"}, "created_at": 1728271772.5214171, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlant`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblKlant')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblKlant"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblKlant"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblAbonnement_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblAbonnement_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblAbonnement/dl_h3_hklc_public_tblAbonnement_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblAbonnement/dl_h3_hklc_public_tblAbonnement_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblAbonnement_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblAbonnement", "dl_h3_hklc_public_tblAbonnement_current"], "alias": "public_tblAbonnement_current", "checksum": {"name": "sha256", "checksum": "68d3ee6445578805729a97059c95a269f3fa7ad7fd9b379b444f7347e29da65a"}, "config": {"enabled": true, "alias": "public_tblAbonnement_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblAbonnement_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementid": {"name": "abonnementid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementtypeid": {"name": "abonnementtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prijs": {"name": "prijs", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwid": {"name": "btwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekid": {"name": "grootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volledigjaar": {"name": "volledigjaar", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dealer": {"name": "dealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "domein": {"name": "domein", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inlogcodes": {"name": "inlogcodes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mmbriefnieuw": {"name": "mmbriefnieuw", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mmbriefbestaand": {"name": "mmbriefbestaand", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostenplaats": {"name": "kostenplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostendrager": {"name": "kostendrager", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurtypeid": {"name": "factuurtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marvalcode": {"name": "marvalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ipadres": {"name": "ipadres", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "incassoverplicht": {"name": "incassoverplicht", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailboxaantal": {"name": "mailboxaantal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailboxomvang": {"name": "mailboxomvang", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailboxmaxalias": {"name": "mailboxmaxalias", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbel": {"name": "inbel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurcodeid": {"name": "factuurcodeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "omschrijving": {"name": "omschrijving", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra": {"name": "extra", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finanadminid": {"name": "finanadminid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gebruik": {"name": "gebruik", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingabid1": {"name": "kortingabid1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingabid2": {"name": "kortingabid2", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementcode": {"name": "abonnementcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gebruikgrootboekid": {"name": "gebruikgrootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblAbonnement/dl_h3_hklc_public_tblAbonnement_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblAbonnement_current"}, "created_at": 1728271772.5312893, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblAbonnement_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `AbonnementID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblAbonnement')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblAbonnement", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblAbonnement"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblAbonnement": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblAbonnement", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblAbonnement/dl_h3_hklc_public_tblAbonnement.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblAbonnement/dl_h3_hklc_public_tblAbonnement.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblAbonnement", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblAbonnement", "dl_h3_hklc_public_tblAbonnement"], "alias": "public_tblAbonnement", "checksum": {"name": "sha256", "checksum": "90bc53f8a9acb1599e5ca776f156d305b3dfb3b3a6a10c7b683a104e2aabd773"}, "config": {"enabled": true, "alias": "public_tblAbonnement", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblAbonnement", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementid": {"name": "abonnementid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementtypeid": {"name": "abonnementtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prijs": {"name": "prijs", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwid": {"name": "btwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekid": {"name": "grootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volledigjaar": {"name": "volledigjaar", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dealer": {"name": "dealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "domein": {"name": "domein", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inlogcodes": {"name": "inlogcodes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mmbriefnieuw": {"name": "mmbriefnieuw", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mmbriefbestaand": {"name": "mmbriefbestaand", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostenplaats": {"name": "kostenplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostendrager": {"name": "kostendrager", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurtypeid": {"name": "factuurtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marvalcode": {"name": "marvalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ipadres": {"name": "ipadres", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "incassoverplicht": {"name": "incassoverplicht", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailboxaantal": {"name": "mailboxaantal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailboxomvang": {"name": "mailboxomvang", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailboxmaxalias": {"name": "mailboxmaxalias", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbel": {"name": "inbel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurcodeid": {"name": "factuurcodeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "omschrijving": {"name": "omschrijving", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra": {"name": "extra", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finanadminid": {"name": "finanadminid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gebruik": {"name": "gebruik", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingabid1": {"name": "kortingabid1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingabid2": {"name": "kortingabid2", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementcode": {"name": "abonnementcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gebruikgrootboekid": {"name": "gebruikgrootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblAbonnement/dl_h3_hklc_public_tblAbonnement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblAbonnement"}, "created_at": 1728271772.5289896, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblAbonnement`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblAbonnement')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblAbonnement"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblAbonnement"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantAbonnement_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantAbonnement/dl_h3_hklc_public_tblKlantAbonnement_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantAbonnement/dl_h3_hklc_public_tblKlantAbonnement_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnement", "dl_h3_hklc_public_tblKlantAbonnement_current"], "alias": "public_tblKlantAbonnement_current", "checksum": {"name": "sha256", "checksum": "18b83ec83ff542359725dec4db57c2a5369f28ff0ffbdde5750ec7755b82da57"}, "config": {"enabled": true, "alias": "public_tblKlantAbonnement_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantAbonnement_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementid": {"name": "abonnementid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opzegdatum": {"name": "opzegdatum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aanmeldbrief": {"name": "aanmeldbrief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "autoincasso": {"name": "autoincasso", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuuraandealer": {"name": "factuuraandealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facttypeid": {"name": "facttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "domain": {"name": "domain", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbeluid": {"name": "inbeluid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbelpwd": {"name": "inbelpwd", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbelreplyattr": {"name": "inbelreplyattr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra": {"name": "extra", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbeldomainid": {"name": "inbeldomainid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aanmelderid": {"name": "aanmelderid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr1": {"name": "kortingvolgnr1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr2": {"name": "kortingvolgnr2", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "restitutievolgnr": {"name": "restitutievolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referentie": {"name": "referentie", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relaties": {"name": "relaties", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantAbonnement/dl_h3_hklc_public_tblKlantAbonnement_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantAbonnement_current"}, "created_at": 1728271772.5355883, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantAbonnement_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `KlantID`  ,  `VolgNr`  ,  `AbonnementID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblKlantAbonnement')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblKlantAbonnement", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantAbonnement", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantAbonnement/dl_h3_hklc_public_tblKlantAbonnement.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantAbonnement/dl_h3_hklc_public_tblKlantAbonnement.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnement", "dl_h3_hklc_public_tblKlantAbonnement"], "alias": "public_tblKlantAbonnement", "checksum": {"name": "sha256", "checksum": "16509cb161a5c8d4c27017eceb673b2d50da14ac3bf9bcefbc87ca9ce24ec085"}, "config": {"enabled": true, "alias": "public_tblKlantAbonnement", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantAbonnement", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementid": {"name": "abonnementid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opzegdatum": {"name": "opzegdatum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aanmeldbrief": {"name": "aanmeldbrief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "autoincasso": {"name": "autoincasso", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuuraandealer": {"name": "factuuraandealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facttypeid": {"name": "facttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "domain": {"name": "domain", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbeluid": {"name": "inbeluid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbelpwd": {"name": "inbelpwd", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbelreplyattr": {"name": "inbelreplyattr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra": {"name": "extra", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbeldomainid": {"name": "inbeldomainid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aanmelderid": {"name": "aanmelderid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr1": {"name": "kortingvolgnr1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr2": {"name": "kortingvolgnr2", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "restitutievolgnr": {"name": "restitutievolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referentie": {"name": "referentie", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relaties": {"name": "relaties", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantAbonnement/dl_h3_hklc_public_tblKlantAbonnement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantAbonnement"}, "created_at": 1728271772.53761, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantAbonnement`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblKlantAbonnement')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblKlantAbonnement"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblKlantAbonnement"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblOrganisatie": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblOrganisatie", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblOrganisatie/dl_h3_hklc_public_tblOrganisatie.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblOrganisatie/dl_h3_hklc_public_tblOrganisatie.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblOrganisatie", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblOrganisatie", "dl_h3_hklc_public_tblOrganisatie"], "alias": "public_tblOrganisatie", "checksum": {"name": "sha256", "checksum": "e53d204bec91a679a6ec38e5ac1f51efa71e4881d743954b3c005490706ecfb5"}, "config": {"enabled": true, "alias": "public_tblOrganisatie", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblOrganisatie", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landid": {"name": "landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fstraat": {"name": "fstraat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fhuisnr": {"name": "fhuisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fpostcode": {"name": "fpostcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fplaats": {"name": "fplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bstraat": {"name": "bstraat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bhuisnr": {"name": "bhuisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bpostcode": {"name": "bpostcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bplaats": {"name": "bplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dealer": {"name": "dealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefoon": {"name": "telefoon", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefax": {"name": "telefax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "debiteurnr": {"name": "debiteurnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rekeningnr": {"name": "rekeningnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "soortreknr": {"name": "soortreknr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eigenaarprogramma": {"name": "eigenaarprogramma", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "verantwmwid": {"name": "verantwmwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rootdir": {"name": "rootdir", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxaccid": {"name": "maxaccid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxcpid": {"name": "maxcpid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxcrid": {"name": "maxcrid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxdocid": {"name": "maxdocid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxopmerkingid": {"name": "maxopmerkingid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "classificatieid": {"name": "classificatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finanadmin": {"name": "finanadmin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailintrotekst": {"name": "mailintrotekst", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "logourl": {"name": "logourl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwnr": {"name": "btwnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exactchange": {"name": "exactchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuuremail": {"name": "emailfactuuremail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facturatiewijzeid": {"name": "facturatiewijzeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuurherinnering": {"name": "emailfactuurherinnering", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ftav": {"name": "ftav", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxkortingvolgnr": {"name": "maxkortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblOrganisatie/dl_h3_hklc_public_tblOrganisatie.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblOrganisatie"}, "created_at": 1728271772.546215, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblOrganisatie`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblOrganisatie')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblOrganisatie"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblOrganisatie"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblOrganisatie_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblOrganisatie_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblOrganisatie/dl_h3_hklc_public_tblOrganisatie_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblOrganisatie/dl_h3_hklc_public_tblOrganisatie_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblOrganisatie_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblOrganisatie", "dl_h3_hklc_public_tblOrganisatie_current"], "alias": "public_tblOrganisatie_current", "checksum": {"name": "sha256", "checksum": "699829680d543c3ed2f546fe32b6e3c12c75f841c77f887d4a4a324670dc52be"}, "config": {"enabled": true, "alias": "public_tblOrganisatie_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblOrganisatie_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisatieid": {"name": "organisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landid": {"name": "landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fstraat": {"name": "fstraat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fhuisnr": {"name": "fhuisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fpostcode": {"name": "fpostcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fplaats": {"name": "fplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bstraat": {"name": "bstraat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bhuisnr": {"name": "bhuisnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bpostcode": {"name": "bpostcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bplaats": {"name": "bplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dealer": {"name": "dealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefoon": {"name": "telefoon", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telefax": {"name": "telefax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "debiteurnr": {"name": "debiteurnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rekeningnr": {"name": "rekeningnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "soortreknr": {"name": "soortreknr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eigenaarprogramma": {"name": "eigenaarprogramma", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "verantwmwid": {"name": "verantwmwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rootdir": {"name": "rootdir", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxaccid": {"name": "maxaccid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxcpid": {"name": "maxcpid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxcrid": {"name": "maxcrid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxdocid": {"name": "maxdocid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxopmerkingid": {"name": "maxopmerkingid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "classificatieid": {"name": "classificatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finanadmin": {"name": "finanadmin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mailintrotekst": {"name": "mailintrotekst", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "logourl": {"name": "logourl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwnr": {"name": "btwnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ponr": {"name": "ponr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exactchange": {"name": "exactchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuuremail": {"name": "emailfactuuremail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facturatiewijzeid": {"name": "facturatiewijzeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailfactuurherinnering": {"name": "emailfactuurherinnering", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ftav": {"name": "ftav", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxkortingvolgnr": {"name": "maxkortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblOrganisatie/dl_h3_hklc_public_tblOrganisatie_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblOrganisatie_current"}, "created_at": 1728271772.5438573, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblOrganisatie_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `OrganisatieID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblOrganisatie')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblOrganisatie", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblOrganisatie"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblFactType_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblFactType_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblFactType/dl_h3_hklc_public_tblFactType_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblFactType/dl_h3_hklc_public_tblFactType_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblFactType_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblFactType", "dl_h3_hklc_public_tblFactType_current"], "alias": "public_tblFactType_current", "checksum": {"name": "sha256", "checksum": "0ade8d2f870dfb884e4a8c95f1122b2732c0e45ec914de8e919f0bd60eef98d4"}, "config": {"enabled": true, "alias": "public_tblFactType_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblFactType_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facttypeid": {"name": "facttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sortnr": {"name": "sortnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "months": {"name": "months", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblFactType/dl_h3_hklc_public_tblFactType_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblFactType_current"}, "created_at": 1728271772.5483322, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblFactType_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `FactTypeID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblFactType')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblFactType", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblFactType"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblFactType": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblFactType", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblFactType/dl_h3_hklc_public_tblFactType.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblFactType/dl_h3_hklc_public_tblFactType.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblFactType", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblFactType", "dl_h3_hklc_public_tblFactType"], "alias": "public_tblFactType", "checksum": {"name": "sha256", "checksum": "726c4a2e852dc4b20cee17319d4170d76724edb17e923eac174a2c1ffc7beb9f"}, "config": {"enabled": true, "alias": "public_tblFactType", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblFactType", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facttypeid": {"name": "facttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sortnr": {"name": "sortnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "months": {"name": "months", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblFactType/dl_h3_hklc_public_tblFactType.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblFactType"}, "created_at": 1728271772.5499575, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblFactType`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblFactType')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblFactType"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblFactType"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblDienstType_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblDienstType_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblDienstType/dl_h3_hklc_public_tblDienstType_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblDienstType/dl_h3_hklc_public_tblDienstType_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblDienstType_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblDienstType", "dl_h3_hklc_public_tblDienstType_current"], "alias": "public_tblDienstType_current", "checksum": {"name": "sha256", "checksum": "c090be22596c6c458afe1e1247dc46e5d1ec87dc4de5f927db74cbc66ec1bef3"}, "config": {"enabled": true, "alias": "public_tblDienstType_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblDienstType_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "diensttypeid": {"name": "diensttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblDienstType/dl_h3_hklc_public_tblDienstType_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblDienstType_current"}, "created_at": 1728271772.5537612, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblDienstType_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `DienstTypeID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblDienstType')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblDienstType", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblDienstType"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblDienstType": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblDienstType", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblDienstType/dl_h3_hklc_public_tblDienstType.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblDienstType/dl_h3_hklc_public_tblDienstType.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblDienstType", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblDienstType", "dl_h3_hklc_public_tblDienstType"], "alias": "public_tblDienstType", "checksum": {"name": "sha256", "checksum": "d724a3cf733c547965b0ae486cb101a51f92a64975cbf5f1c9ef16f5934ddf1e"}, "config": {"enabled": true, "alias": "public_tblDienstType", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblDienstType", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "diensttypeid": {"name": "diensttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblDienstType/dl_h3_hklc_public_tblDienstType.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblDienstType"}, "created_at": 1728271772.551936, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblDienstType`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblDienstType')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblDienstType"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblDienstType"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_DA_relation": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_DA_relation", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_DA_relation/dl_h3_hklc_public_DA_relation.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_DA_relation/dl_h3_hklc_public_DA_relation.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_DA_relation", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relation", "dl_h3_hklc_public_DA_relation"], "alias": "public_DA_relation", "checksum": {"name": "sha256", "checksum": "2596b27ebe147d47e087e483a201c8154a8107e66b446b7daebd0f9bfa4f0bce"}, "config": {"enabled": true, "alias": "public_DA_relation", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_DA_relation", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationid": {"name": "relationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fromklantid": {"name": "fromklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "toklantid": {"name": "toklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationtype": {"name": "relationtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "begindate": {"name": "begindate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationstatus": {"name": "relationstatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationrole": {"name": "relationrole", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdby": {"name": "createdby", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdatedby": {"name": "lastupdatedby", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_DA_relation/dl_h3_hklc_public_DA_relation.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_DA_relation"}, "created_at": 1728271772.5587513, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_DA_relation`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_DA_relation')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_DA_relation"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_DA_relation"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_DA_relation_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_DA_relation_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_DA_relation/dl_h3_hklc_public_DA_relation_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_DA_relation/dl_h3_hklc_public_DA_relation_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_DA_relation_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relation", "dl_h3_hklc_public_DA_relation_current"], "alias": "public_DA_relation_current", "checksum": {"name": "sha256", "checksum": "5988171c9d994189d23368b038c29da5e01aaef5298d1c04b8c4c5e533ebc2bb"}, "config": {"enabled": true, "alias": "public_DA_relation_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_DA_relation_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationid": {"name": "relationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fromklantid": {"name": "fromklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "toklantid": {"name": "toklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationtype": {"name": "relationtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "begindate": {"name": "begindate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationstatus": {"name": "relationstatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationrole": {"name": "relationrole", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdby": {"name": "createdby", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdatedby": {"name": "lastupdatedby", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_DA_relation/dl_h3_hklc_public_DA_relation_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_DA_relation_current"}, "created_at": 1728271772.5571456, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_DA_relation_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `relationid`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_DA_relation')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_DA_relation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_DA_relation"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantAbonnementGebruik", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantAbonnementGebruik/dl_h3_hklc_public_tblKlantAbonnementGebruik.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantAbonnementGebruik/dl_h3_hklc_public_tblKlantAbonnementGebruik.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnementGebruik", "dl_h3_hklc_public_tblKlantAbonnementGebruik"], "alias": "public_tblKlantAbonnementGebruik", "checksum": {"name": "sha256", "checksum": "aaf8150afd42a9019779bb11e14d748a5ca0ae94890d2d77f12eba9886d86070"}, "config": {"enabled": true, "alias": "public_tblKlantAbonnementGebruik", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantAbonnementGebruik", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gebruikid": {"name": "gebruikid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bedrag": {"name": "bedrag", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "omschrijving": {"name": "omschrijving", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurid": {"name": "factuurid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referentiecode": {"name": "referentiecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatieid": {"name": "kortingorganisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatievolgnr": {"name": "kortingorganisatievolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr": {"name": "kortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantAbonnementGebruik/dl_h3_hklc_public_tblKlantAbonnementGebruik.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantAbonnementGebruik"}, "created_at": 1728271772.5610104, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantAbonnementGebruik`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblKlantAbonnementGebruik')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblKlantAbonnementGebruik"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblKlantAbonnementGebruik"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantAbonnementGebruik_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantAbonnementGebruik/dl_h3_hklc_public_tblKlantAbonnementGebruik_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantAbonnementGebruik/dl_h3_hklc_public_tblKlantAbonnementGebruik_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnementGebruik", "dl_h3_hklc_public_tblKlantAbonnementGebruik_current"], "alias": "public_tblKlantAbonnementGebruik_current", "checksum": {"name": "sha256", "checksum": "d0395f7ab1c6a14e9abd6d14aa63eece89033dd0f2a20dc9fe827a8f9f71dd22"}, "config": {"enabled": true, "alias": "public_tblKlantAbonnementGebruik_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantAbonnementGebruik_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gebruikid": {"name": "gebruikid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bedrag": {"name": "bedrag", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "omschrijving": {"name": "omschrijving", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "factuurid": {"name": "factuurid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referentiecode": {"name": "referentiecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatieid": {"name": "kortingorganisatieid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingorganisatievolgnr": {"name": "kortingorganisatievolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kortingvolgnr": {"name": "kortingvolgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantAbonnementGebruik/dl_h3_hklc_public_tblKlantAbonnementGebruik_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantAbonnementGebruik_current"}, "created_at": 1728271772.5628362, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantAbonnementGebruik_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `KlantID`  ,  `VolgNr`  ,  `GebruikID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblKlantAbonnementGebruik')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblKlantAbonnementGebruik", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantAbonnementSysAttr_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantAbonnementSysAttr/dl_h3_hklc_public_tblKlantAbonnementSysAttr_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantAbonnementSysAttr/dl_h3_hklc_public_tblKlantAbonnementSysAttr_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnementSysAttr", "dl_h3_hklc_public_tblKlantAbonnementSysAttr_current"], "alias": "public_tblKlantAbonnementSysAttr_current", "checksum": {"name": "sha256", "checksum": "276442ce0362908d8521e1145e27e1dfb0c8ed3c923d302aa50e69e4946d5cdf"}, "config": {"enabled": true, "alias": "public_tblKlantAbonnementSysAttr_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantAbonnementSysAttr_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systeemid": {"name": "systeemid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribuutid": {"name": "attribuutid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waarde": {"name": "waarde", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantAbonnementSysAttr/dl_h3_hklc_public_tblKlantAbonnementSysAttr_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantAbonnementSysAttr_current"}, "created_at": 1728271772.56462, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantAbonnementSysAttr_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `KlantID`  ,  `VolgNr`  ,  `SysteemID`  ,  `attribuutid`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblKlantAbonnementSysAttr')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblKlantAbonnementSysAttr", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantAbonnementSysAttr", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantAbonnementSysAttr/dl_h3_hklc_public_tblKlantAbonnementSysAttr.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantAbonnementSysAttr/dl_h3_hklc_public_tblKlantAbonnementSysAttr.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnementSysAttr", "dl_h3_hklc_public_tblKlantAbonnementSysAttr"], "alias": "public_tblKlantAbonnementSysAttr", "checksum": {"name": "sha256", "checksum": "5c5beabd8e3d6c45d17c25fa5654c9676f6cdde76ed0ff99c49f7a3c8a59f6d2"}, "config": {"enabled": true, "alias": "public_tblKlantAbonnementSysAttr", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantAbonnementSysAttr", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systeemid": {"name": "systeemid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribuutid": {"name": "attribuutid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waarde": {"name": "waarde", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantAbonnementSysAttr/dl_h3_hklc_public_tblKlantAbonnementSysAttr.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantAbonnementSysAttr"}, "created_at": 1728271772.5661163, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantAbonnementSysAttr`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblKlantAbonnementSysAttr')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblKlantAbonnementSysAttr"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblKlantAbonnementSysAttr"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblAbonnementType_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblAbonnementType_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblAbonnementType/dl_h3_hklc_public_tblAbonnementType_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblAbonnementType/dl_h3_hklc_public_tblAbonnementType_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblAbonnementType_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblAbonnementType", "dl_h3_hklc_public_tblAbonnementType_current"], "alias": "public_tblAbonnementType_current", "checksum": {"name": "sha256", "checksum": "82e21b1c6bf35a8c59d5e9f05a8f824930793f63497a178ab9a20d09e99a3536"}, "config": {"enabled": true, "alias": "public_tblAbonnementType_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblAbonnementType_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementtypeid": {"name": "abonnementtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblAbonnementType/dl_h3_hklc_public_tblAbonnementType_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblAbonnementType_current"}, "created_at": 1728271772.567956, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblAbonnementType_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `AbonnementTypeID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblAbonnementType')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblAbonnementType", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblAbonnementType"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblAbonnementType": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblAbonnementType", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblAbonnementType/dl_h3_hklc_public_tblAbonnementType.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblAbonnementType/dl_h3_hklc_public_tblAbonnementType.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblAbonnementType", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblAbonnementType", "dl_h3_hklc_public_tblAbonnementType"], "alias": "public_tblAbonnementType", "checksum": {"name": "sha256", "checksum": "498b7e795b47e19b27f6fe634e747fce068b5688564f24fba504cefe053b3960"}, "config": {"enabled": true, "alias": "public_tblAbonnementType", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblAbonnementType", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "abonnementtypeid": {"name": "abonnementtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblAbonnementType/dl_h3_hklc_public_tblAbonnementType.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblAbonnementType"}, "created_at": 1728271772.569506, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblAbonnementType`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblAbonnementType')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblAbonnementType"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblAbonnementType"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblLand_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblLand_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblLand/dl_h3_hklc_public_tblLand_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblLand/dl_h3_hklc_public_tblLand_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblLand_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblLand", "dl_h3_hklc_public_tblLand_current"], "alias": "public_tblLand_current", "checksum": {"name": "sha256", "checksum": "0859d412d7d99c3dbbd3206923cf9c19f1294017c7e30fecc3f43e124222c521"}, "config": {"enabled": true, "alias": "public_tblLand_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblLand_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landid": {"name": "landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pocoformat": {"name": "pocoformat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exactcode": {"name": "exactcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblLand/dl_h3_hklc_public_tblLand_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblLand_current"}, "created_at": 1728271772.5715344, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblLand_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `LandID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblLand')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblLand", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblLand"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblLand": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblLand", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblLand/dl_h3_hklc_public_tblLand.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblLand/dl_h3_hklc_public_tblLand.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblLand", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblLand", "dl_h3_hklc_public_tblLand"], "alias": "public_tblLand", "checksum": {"name": "sha256", "checksum": "6d2600072efc71dcdd1152af3afc03b02ac758a87a2eba13e01ea698e6570774"}, "config": {"enabled": true, "alias": "public_tblLand", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblLand", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landid": {"name": "landid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pocoformat": {"name": "pocoformat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exactcode": {"name": "exactcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblLand/dl_h3_hklc_public_tblLand.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblLand"}, "created_at": 1728271772.5731003, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblLand`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblLand')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblLand"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblLand"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblDienst_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblDienst_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblDienst/dl_h3_hklc_public_tblDienst_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblDienst/dl_h3_hklc_public_tblDienst_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblDienst_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblDienst", "dl_h3_hklc_public_tblDienst_current"], "alias": "public_tblDienst_current", "checksum": {"name": "sha256", "checksum": "1cf64df797ef3960ba31373c43c2990f3ce20124d6f2cc6f5e7cbc0f89efcd52"}, "config": {"enabled": true, "alias": "public_tblDienst_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblDienst_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dienstid": {"name": "dienstid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "diensttypeid": {"name": "diensttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prijs": {"name": "prijs", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwid": {"name": "btwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekid": {"name": "grootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dealer": {"name": "dealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ubn": {"name": "ubn", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostenplaats": {"name": "kostenplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostendrager": {"name": "kostendrager", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finanadminid": {"name": "finanadminid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dienstcode": {"name": "dienstcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblDienst/dl_h3_hklc_public_tblDienst_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblDienst_current"}, "created_at": 1728271772.5752578, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblDienst_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `DienstID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblDienst')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblDienst", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblDienst"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblDienst": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblDienst", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblDienst/dl_h3_hklc_public_tblDienst.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblDienst/dl_h3_hklc_public_tblDienst.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblDienst", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblDienst", "dl_h3_hklc_public_tblDienst"], "alias": "public_tblDienst", "checksum": {"name": "sha256", "checksum": "b8a1ec49f7bbd8af6b1bd5e31a18dbe5b5368306348581e6ae15f7f6d945c1ed"}, "config": {"enabled": true, "alias": "public_tblDienst", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblDienst", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dienstid": {"name": "dienstid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "diensttypeid": {"name": "diensttypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prijs": {"name": "prijs", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwid": {"name": "btwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekid": {"name": "grootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dealer": {"name": "dealer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ubn": {"name": "ubn", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostenplaats": {"name": "kostenplaats", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kostendrager": {"name": "kostendrager", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finanadminid": {"name": "finanadminid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dienstcode": {"name": "dienstcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblDienst/dl_h3_hklc_public_tblDienst.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblDienst"}, "created_at": 1728271772.5769343, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblDienst`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblDienst')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblDienst"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblDienst"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_aselect_loginhistory", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_aselect_loginhistory/dl_h3_hklc_public_aselect_loginhistory.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_aselect_loginhistory/dl_h3_hklc_public_aselect_loginhistory.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_aselect_loginhistory", "dl_h3_hklc_public_aselect_loginhistory"], "alias": "public_aselect_loginhistory", "checksum": {"name": "sha256", "checksum": "d720063add89ac6c64ca563cf021ff2d2528bb7eee8c109473d421effd4fb04e"}, "config": {"enabled": true, "alias": "public_aselect_loginhistory", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_aselect_loginhistory", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "logintime": {"name": "logintime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account": {"name": "account", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "result": {"name": "result", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loginid": {"name": "loginid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_aselect_loginhistory/dl_h3_hklc_public_aselect_loginhistory.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_aselect_loginhistory"}, "created_at": 1728271772.5788555, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_aselect_loginhistory`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_aselect_loginhistory')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_aselect_loginhistory"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_aselect_loginhistory"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_aselect_loginhistory_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_aselect_loginhistory/dl_h3_hklc_public_aselect_loginhistory_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_aselect_loginhistory/dl_h3_hklc_public_aselect_loginhistory_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_aselect_loginhistory", "dl_h3_hklc_public_aselect_loginhistory_current"], "alias": "public_aselect_loginhistory_current", "checksum": {"name": "sha256", "checksum": "dafe9ebfbaf6ab111c44c3fe3c97ec63b72cfcb2721ed387e3fb01f3df52df4e"}, "config": {"enabled": true, "alias": "public_aselect_loginhistory_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_aselect_loginhistory_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "logintime": {"name": "logintime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account": {"name": "account", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "result": {"name": "result", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loginid": {"name": "loginid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_aselect_loginhistory/dl_h3_hklc_public_aselect_loginhistory_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_aselect_loginhistory_current"}, "created_at": 1728271772.5805204, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_aselect_loginhistory_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `loginid`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_aselect_loginhistory')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_aselect_loginhistory", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_aselect_loginhistory"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblBTW_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblBTW_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblBTW/dl_h3_hklc_public_tblBTW_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblBTW/dl_h3_hklc_public_tblBTW_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblBTW_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblBTW", "dl_h3_hklc_public_tblBTW_current"], "alias": "public_tblBTW_current", "checksum": {"name": "sha256", "checksum": "65871b699d32fd6237c211231d1e220354d9e6294fb9a9cd426ad1438b0148b6"}, "config": {"enabled": true, "alias": "public_tblBTW_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblBTW_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwid": {"name": "btwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblBTW/dl_h3_hklc_public_tblBTW_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblBTW_current"}, "created_at": 1728271772.5838969, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblBTW_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `BTWID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblBTW')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblBTW", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblBTW"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblBTW": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblBTW", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblBTW/dl_h3_hklc_public_tblBTW.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblBTW/dl_h3_hklc_public_tblBTW.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblBTW", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblBTW", "dl_h3_hklc_public_tblBTW"], "alias": "public_tblBTW", "checksum": {"name": "sha256", "checksum": "8f6c8a94e612198c2b0be80ffd39b06bd46987452c417787592eff4a970e3817"}, "config": {"enabled": true, "alias": "public_tblBTW", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblBTW", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "btwid": {"name": "btwid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblBTW/dl_h3_hklc_public_tblBTW.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblBTW"}, "created_at": 1728271772.5821624, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblBTW`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblBTW')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblBTW"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblBTW"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantBankMachtiging_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantBankMachtiging/dl_h3_hklc_public_tblKlantBankMachtiging_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantBankMachtiging/dl_h3_hklc_public_tblKlantBankMachtiging_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantBankMachtiging", "dl_h3_hklc_public_tblKlantBankMachtiging_current"], "alias": "public_tblKlantBankMachtiging_current", "checksum": {"name": "sha256", "checksum": "ea39901b0e052d25cd1cda2ca8695f991474f8691b49e68b777b218e45dcf16d"}, "config": {"enabled": true, "alias": "public_tblKlantBankMachtiging_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantBankMachtiging_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "machtigingtype": {"name": "machtigingtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opzegdatum": {"name": "opzegdatum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datecreate": {"name": "datecreate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "iban": {"name": "iban", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantBankMachtiging/dl_h3_hklc_public_tblKlantBankMachtiging_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantBankMachtiging_current"}, "created_at": 1728271772.588253, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantBankMachtiging_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `KlantID`  ,  `Code`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblKlantBankMachtiging')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblKlantBankMachtiging", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblKlantBankMachtiging", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblKlantBankMachtiging/dl_h3_hklc_public_tblKlantBankMachtiging.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblKlantBankMachtiging/dl_h3_hklc_public_tblKlantBankMachtiging.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantBankMachtiging", "dl_h3_hklc_public_tblKlantBankMachtiging"], "alias": "public_tblKlantBankMachtiging", "checksum": {"name": "sha256", "checksum": "ab2bcb95083c5a546b023e712ab47ba5e7454cc2a2e231b510a7f7921e991163"}, "config": {"enabled": true, "alias": "public_tblKlantBankMachtiging", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblKlantBankMachtiging", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "klantid": {"name": "klantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "machtigingtype": {"name": "machtigingtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datum": {"name": "datum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opzegdatum": {"name": "opzegdatum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datecreate": {"name": "datecreate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "iban": {"name": "iban", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblKlantBankMachtiging/dl_h3_hklc_public_tblKlantBankMachtiging.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblKlantBankMachtiging"}, "created_at": 1728271772.5864553, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantBankMachtiging`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblKlantBankMachtiging')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblKlantBankMachtiging"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblKlantBankMachtiging"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblGrootboek": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblGrootboek", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblGrootboek/dl_h3_hklc_public_tblGrootboek.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblGrootboek/dl_h3_hklc_public_tblGrootboek.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblGrootboek", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblGrootboek", "dl_h3_hklc_public_tblGrootboek"], "alias": "public_tblGrootboek", "checksum": {"name": "sha256", "checksum": "ae80800f6bc6351b1adf4d4a18505d1d7a9729c98b90232014c354661d9499a6"}, "config": {"enabled": true, "alias": "public_tblGrootboek", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblGrootboek", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekid": {"name": "grootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekcode": {"name": "grootboekcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblGrootboek/dl_h3_hklc_public_tblGrootboek.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblGrootboek"}, "created_at": 1728271772.5901184, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblGrootboek`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblGrootboek')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblGrootboek"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblGrootboek"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblGrootboek_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblGrootboek_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblGrootboek/dl_h3_hklc_public_tblGrootboek_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblGrootboek/dl_h3_hklc_public_tblGrootboek_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblGrootboek_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblGrootboek", "dl_h3_hklc_public_tblGrootboek_current"], "alias": "public_tblGrootboek_current", "checksum": {"name": "sha256", "checksum": "01f250f639a2e7feb80a04e32ce231cbe73f77715839f379d502e76e727e653b"}, "config": {"enabled": true, "alias": "public_tblGrootboek_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblGrootboek_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekid": {"name": "grootboekid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grootboekcode": {"name": "grootboekcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "standaard": {"name": "standaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "archief": {"name": "archief", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblGrootboek/dl_h3_hklc_public_tblGrootboek_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblGrootboek_current"}, "created_at": 1728271772.5918884, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblGrootboek_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `GrootBoekID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblGrootboek')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblGrootboek", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblGrootboek"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblSysteemAttribuut_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblSysteemAttribuut/dl_h3_hklc_public_tblSysteemAttribuut_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblSysteemAttribuut/dl_h3_hklc_public_tblSysteemAttribuut_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblSysteemAttribuut", "dl_h3_hklc_public_tblSysteemAttribuut_current"], "alias": "public_tblSysteemAttribuut_current", "checksum": {"name": "sha256", "checksum": "018dc92b681897db6a4e0cc3d3f96d0bf53d2cd904b600789403242623645756"}, "config": {"enabled": true, "alias": "public_tblSysteemAttribuut_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblSysteemAttribuut_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systeemid": {"name": "systeemid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribuutid": {"name": "attribuutid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groepid": {"name": "groepid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datatypeid": {"name": "datatypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlengte": {"name": "maxlengte", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoerverplicht": {"name": "invoerverplicht", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vastewaarde": {"name": "vastewaarde", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "zoekcriterium": {"name": "zoekcriterium", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "minimum": {"name": "minimum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maximum": {"name": "maximum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waardestandaard": {"name": "waardestandaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waardeja": {"name": "waardeja", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waardenee": {"name": "waardenee", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "scheidingsteken": {"name": "scheidingsteken", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "omschrijving": {"name": "omschrijving", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mmexport": {"name": "mmexport", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "toegestanetekens": {"name": "toegestanetekens", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uniquecheck": {"name": "uniquecheck", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblSysteemAttribuut/dl_h3_hklc_public_tblSysteemAttribuut_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblSysteemAttribuut_current"}, "created_at": 1728271772.5965405, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblSysteemAttribuut_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `SysteemID`  ,  `AttribuutID`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_tblSysteemAttribuut')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_tblSysteemAttribuut", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_tblSysteemAttribuut", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_tblSysteemAttribuut/dl_h3_hklc_public_tblSysteemAttribuut.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_tblSysteemAttribuut/dl_h3_hklc_public_tblSysteemAttribuut.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblSysteemAttribuut", "dl_h3_hklc_public_tblSysteemAttribuut"], "alias": "public_tblSysteemAttribuut", "checksum": {"name": "sha256", "checksum": "243e74cda1d2338538f767a714646f6bdae7a2d71200573db0580a93b99f3a62"}, "config": {"enabled": true, "alias": "public_tblSysteemAttribuut", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_tblSysteemAttribuut", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systeemid": {"name": "systeemid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribuutid": {"name": "attribuutid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groepid": {"name": "groepid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volgnr": {"name": "volgnr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "naam": {"name": "naam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datatypeid": {"name": "datatypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlengte": {"name": "maxlengte", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoerverplicht": {"name": "invoerverplicht", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vastewaarde": {"name": "vastewaarde", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "zoekcriterium": {"name": "zoekcriterium", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "minimum": {"name": "minimum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maximum": {"name": "maximum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waardestandaard": {"name": "waardestandaard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waardeja": {"name": "waardeja", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waardenee": {"name": "waardenee", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "scheidingsteken": {"name": "scheidingsteken", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "omschrijving": {"name": "omschrijving", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidchange": {"name": "mwidchange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datechange": {"name": "datechange", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mwidlock": {"name": "mwidlock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datelock": {"name": "datelock", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowguid": {"name": "rowguid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mmexport": {"name": "mmexport", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "toegestanetekens": {"name": "toegestanetekens", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uniquecheck": {"name": "uniquecheck", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_tblSysteemAttribuut/dl_h3_hklc_public_tblSysteemAttribuut.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_tblSysteemAttribuut"}, "created_at": 1728271772.598451, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblSysteemAttribuut`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_tblSysteemAttribuut')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_tblSysteemAttribuut"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_tblSysteemAttribuut"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_DA_relation_audit_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_DA_relation_audit_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_DA_relation_audit/dl_h3_hklc_public_DA_relation_audit_current.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_DA_relation_audit/dl_h3_hklc_public_DA_relation_audit_current.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_DA_relation_audit_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relation_audit", "dl_h3_hklc_public_DA_relation_audit_current"], "alias": "public_DA_relation_audit_current", "checksum": {"name": "sha256", "checksum": "dc56d2db54c00b82405429cf1cdc915a6854b092462aefd26536c54e73343e65"}, "config": {"enabled": true, "alias": "public_DA_relation_audit_current", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_DA_relation_audit_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationid": {"name": "relationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fromklantid": {"name": "fromklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "toklantid": {"name": "toklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationtype": {"name": "relationtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "begindate": {"name": "begindate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationstatus": {"name": "relationstatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationrole": {"name": "relationrole", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relation_audit_id": {"name": "relation_audit_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdby": {"name": "createdby", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_DA_relation_audit/dl_h3_hklc_public_DA_relation_audit_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_DA_relation_audit_current"}, "created_at": 1728271772.600249, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_DA_relation_audit_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `relation_audit_id`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hklc_public_DA_relation_audit')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hklc_public_DA_relation_audit", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hklc_public_DA_relation_audit"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hklc_public_DA_relation_audit": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "dl_h3_hklc_public_DA_relation_audit", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hklc/public_DA_relation_audit/dl_h3_hklc_public_DA_relation_audit.sql", "original_file_path": "models/STRH/datalake/h3_hklc/public_DA_relation_audit/dl_h3_hklc_public_DA_relation_audit.sql", "unique_id": "model.project_dbt.dl_h3_hklc_public_DA_relation_audit", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relation_audit", "dl_h3_hklc_public_DA_relation_audit"], "alias": "public_DA_relation_audit", "checksum": {"name": "sha256", "checksum": "933a03cbc4a5019ddc39bc164ea787ccb7c9dd23ccaf0a68907940ce7a51029a"}, "config": {"enabled": true, "alias": "public_DA_relation_audit", "schema": "dl_h3_hklc", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_DA_relation_audit", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationid": {"name": "relationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fromklantid": {"name": "fromklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "toklantid": {"name": "toklantid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationtype": {"name": "relationtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "begindate": {"name": "begindate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationstatus": {"name": "relationstatus", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relationrole": {"name": "relationrole", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relation_audit_id": {"name": "relation_audit_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdby": {"name": "createdby", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hklc/public_DA_relation_audit/dl_h3_hklc_public_DA_relation_audit.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hklc", "tags": ["datalake"], "alias": "public_DA_relation_audit"}, "created_at": 1728271772.601909, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_DA_relation_audit`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hklc', 'public_DA_relation_audit')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hklc", "public_DA_relation_audit"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hklc.public_DA_relation_audit"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ChainedOrganisation_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ChainedOrganisation/dl_h3_hehe_public_ChainedOrganisation_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ChainedOrganisation/dl_h3_hehe_public_ChainedOrganisation_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainedOrganisation", "dl_h3_hehe_public_ChainedOrganisation_current"], "alias": "public_ChainedOrganisation_current", "checksum": {"name": "sha256", "checksum": "fa367a3711c241d170c42ff73187cf32c9c5f57a3c8085e1379bbda36139c4bf"}, "config": {"enabled": true, "alias": "public_ChainedOrganisation_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ChainedOrganisation_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedorganisationid": {"name": "chainedorganisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvknummer": {"name": "kvknummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rsin": {"name": "rsin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "displayname": {"name": "displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlevel": {"name": "maxlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vestigingsnummer": {"name": "vestigingsnummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nextauthorizationregistryid": {"name": "nextauthorizationregistryid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference": {"name": "reference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trrnumber": {"name": "trrnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ChainedOrganisation/dl_h3_hehe_public_ChainedOrganisation_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ChainedOrganisation_current"}, "created_at": 1728271772.6057549, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ChainedOrganisation_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `ChainedOrganisationId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_ChainedOrganisation')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_ChainedOrganisation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_ChainedOrganisation"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ChainedOrganisation", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ChainedOrganisation/dl_h3_hehe_public_ChainedOrganisation.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ChainedOrganisation/dl_h3_hehe_public_ChainedOrganisation.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainedOrganisation", "dl_h3_hehe_public_ChainedOrganisation"], "alias": "public_ChainedOrganisation", "checksum": {"name": "sha256", "checksum": "94060975a2b0ea6376a44962b44bcc9e82a81fac6c43f021a0e2d4fba4571d6e"}, "config": {"enabled": true, "alias": "public_ChainedOrganisation", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ChainedOrganisation", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedorganisationid": {"name": "chainedorganisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvknummer": {"name": "kvknummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rsin": {"name": "rsin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "displayname": {"name": "displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlevel": {"name": "maxlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vestigingsnummer": {"name": "vestigingsnummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nextauthorizationregistryid": {"name": "nextauthorizationregistryid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference": {"name": "reference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trrnumber": {"name": "trrnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ChainedOrganisation/dl_h3_hehe_public_ChainedOrganisation.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ChainedOrganisation"}, "created_at": 1728271772.607355, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ChainedOrganisation`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_ChainedOrganisation')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_ChainedOrganisation"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_ChainedOrganisation"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonAttribute_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonAttribute_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonAttribute/dl_h3_hehe_public_PersonAttribute_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonAttribute/dl_h3_hehe_public_PersonAttribute_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonAttribute_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonAttribute", "dl_h3_hehe_public_PersonAttribute_current"], "alias": "public_PersonAttribute_current", "checksum": {"name": "sha256", "checksum": "bf7b07753e3a14cd87c642779e8a4f2434ac78f4e5b35d9995887d229fa37fa5"}, "config": {"enabled": true, "alias": "public_PersonAttribute_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonAttribute_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sourceurnid": {"name": "sourceurnid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributeurnid": {"name": "attributeurnid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "verifydateutc": {"name": "verifydateutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value": {"name": "value", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonAttribute/dl_h3_hehe_public_PersonAttribute_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonAttribute_current"}, "created_at": 1728271772.6096356, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonAttribute_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `PersonId`  ,  `SourceUrnId`  ,  `attributeurnid`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_PersonAttribute')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_PersonAttribute", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_PersonAttribute"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonAttribute": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonAttribute", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonAttribute/dl_h3_hehe_public_PersonAttribute.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonAttribute/dl_h3_hehe_public_PersonAttribute.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonAttribute", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonAttribute", "dl_h3_hehe_public_PersonAttribute"], "alias": "public_PersonAttribute", "checksum": {"name": "sha256", "checksum": "af6f8da7dad6c96a74a1801cca40673b3093f6db0be65f43f36b4ffed68834c2"}, "config": {"enabled": true, "alias": "public_PersonAttribute", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonAttribute", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sourceurnid": {"name": "sourceurnid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributeurnid": {"name": "attributeurnid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "verifydateutc": {"name": "verifydateutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value": {"name": "value", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonAttribute/dl_h3_hehe_public_PersonAttribute.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonAttribute"}, "created_at": 1728271772.6111155, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonAttribute`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_PersonAttribute')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_PersonAttribute"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_PersonAttribute"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_AuditAuthenticationSet", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_AuditAuthenticationSet/dl_h3_hehe_public_AuditAuthenticationSet.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_AuditAuthenticationSet/dl_h3_hehe_public_AuditAuthenticationSet.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuditAuthenticationSet", "dl_h3_hehe_public_AuditAuthenticationSet"], "alias": "public_AuditAuthenticationSet", "checksum": {"name": "sha256", "checksum": "22c8ee545ba7cba38786fcbc3225bbb70572135c9c772a90f5b23fc83812ceb1"}, "config": {"enabled": true, "alias": "public_AuditAuthenticationSet", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_AuditAuthenticationSet", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "__auditid": {"name": "__auditid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "__auditdateutc": {"name": "__auditdateutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "__auditaction": {"name": "__auditaction", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationsetid": {"name": "authenticationsetid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "otpid": {"name": "otpid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "smsid": {"name": "smsid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "internalpseudonymid": {"name": "internalpseudonymid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "professionid": {"name": "professionid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationlevel": {"name": "authenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_AuditAuthenticationSet/dl_h3_hehe_public_AuditAuthenticationSet.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_AuditAuthenticationSet"}, "created_at": 1728271772.6160984, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_AuditAuthenticationSet`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_AuditAuthenticationSet')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_AuditAuthenticationSet"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_AuditAuthenticationSet"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_AuditAuthenticationSet_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_AuditAuthenticationSet/dl_h3_hehe_public_AuditAuthenticationSet_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_AuditAuthenticationSet/dl_h3_hehe_public_AuditAuthenticationSet_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuditAuthenticationSet", "dl_h3_hehe_public_AuditAuthenticationSet_current"], "alias": "public_AuditAuthenticationSet_current", "checksum": {"name": "sha256", "checksum": "0a9d73628242459de79ed955f82c6eb6c12eb61ee39da5dee711693532726012"}, "config": {"enabled": true, "alias": "public_AuditAuthenticationSet_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_AuditAuthenticationSet_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "__auditid": {"name": "__auditid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "__auditdateutc": {"name": "__auditdateutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "__auditaction": {"name": "__auditaction", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationsetid": {"name": "authenticationsetid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "otpid": {"name": "otpid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "smsid": {"name": "smsid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "internalpseudonymid": {"name": "internalpseudonymid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "professionid": {"name": "professionid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationlevel": {"name": "authenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_AuditAuthenticationSet/dl_h3_hehe_public_AuditAuthenticationSet_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_AuditAuthenticationSet_current"}, "created_at": 1728271772.6144183, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_AuditAuthenticationSet_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `__auditid`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_AuditAuthenticationSet')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_AuditAuthenticationSet", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_AuthorizationSubject_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_AuthorizationSubject/dl_h3_hehe_public_AuthorizationSubject_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_AuthorizationSubject/dl_h3_hehe_public_AuthorizationSubject_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuthorizationSubject", "dl_h3_hehe_public_AuthorizationSubject_current"], "alias": "public_AuthorizationSubject_current", "checksum": {"name": "sha256", "checksum": "2f15ca56f8a945dcc525d59a8291e55919a91e8ab086ed119de2954c1c6f3dc2"}, "config": {"enabled": true, "alias": "public_AuthorizationSubject_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_AuthorizationSubject_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authorizationsubjectid": {"name": "authorizationsubjectid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedorganisationid": {"name": "chainedorganisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupid": {"name": "groupid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationlevel": {"name": "authenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_AuthorizationSubject/dl_h3_hehe_public_AuthorizationSubject_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_AuthorizationSubject_current"}, "created_at": 1728271772.6199372, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_AuthorizationSubject_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `AuthorizationSubjectId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_AuthorizationSubject')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_AuthorizationSubject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_AuthorizationSubject"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_AuthorizationSubject", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_AuthorizationSubject/dl_h3_hehe_public_AuthorizationSubject.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_AuthorizationSubject/dl_h3_hehe_public_AuthorizationSubject.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuthorizationSubject", "dl_h3_hehe_public_AuthorizationSubject"], "alias": "public_AuthorizationSubject", "checksum": {"name": "sha256", "checksum": "c6da70d55aaaf9f1c27b4e05472e548f454f75965c409b382a719f66ef0f5871"}, "config": {"enabled": true, "alias": "public_AuthorizationSubject", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_AuthorizationSubject", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authorizationsubjectid": {"name": "authorizationsubjectid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedorganisationid": {"name": "chainedorganisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupid": {"name": "groupid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationlevel": {"name": "authenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_AuthorizationSubject/dl_h3_hehe_public_AuthorizationSubject.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_AuthorizationSubject"}, "created_at": 1728271772.6181722, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_AuthorizationSubject`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_AuthorizationSubject')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_AuthorizationSubject"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_AuthorizationSubject"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_AuthenticationSet": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_AuthenticationSet", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_AuthenticationSet/dl_h3_hehe_public_AuthenticationSet.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_AuthenticationSet/dl_h3_hehe_public_AuthenticationSet.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_AuthenticationSet", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuthenticationSet", "dl_h3_hehe_public_AuthenticationSet"], "alias": "public_AuthenticationSet", "checksum": {"name": "sha256", "checksum": "ef2f19bbed633694152bf9e2e34ba73da1335dc6fe72fb7db87aee46b91b39d8"}, "config": {"enabled": true, "alias": "public_AuthenticationSet", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_AuthenticationSet", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationsetid": {"name": "authenticationsetid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "otpid": {"name": "otpid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "smsid": {"name": "smsid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "internalpseudonymid": {"name": "internalpseudonymid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "professionid": {"name": "professionid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationlevel": {"name": "authenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_AuthenticationSet/dl_h3_hehe_public_AuthenticationSet.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_AuthenticationSet"}, "created_at": 1728271772.6233716, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_AuthenticationSet`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_AuthenticationSet')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_AuthenticationSet"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_AuthenticationSet"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_AuthenticationSet_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_AuthenticationSet_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_AuthenticationSet/dl_h3_hehe_public_AuthenticationSet_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_AuthenticationSet/dl_h3_hehe_public_AuthenticationSet_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_AuthenticationSet_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuthenticationSet", "dl_h3_hehe_public_AuthenticationSet_current"], "alias": "public_AuthenticationSet_current", "checksum": {"name": "sha256", "checksum": "7691143658614c4533f8bd06746051e0b483d7bd2118b4c55a78c824e316e5f8"}, "config": {"enabled": true, "alias": "public_AuthenticationSet_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_AuthenticationSet_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationsetid": {"name": "authenticationsetid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "otpid": {"name": "otpid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "smsid": {"name": "smsid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "internalpseudonymid": {"name": "internalpseudonymid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "professionid": {"name": "professionid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "authenticationlevel": {"name": "authenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_AuthenticationSet/dl_h3_hehe_public_AuthenticationSet_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_AuthenticationSet_current"}, "created_at": 1728271772.6216874, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_AuthenticationSet_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `AuthenticationSetId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_AuthenticationSet')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_AuthenticationSet", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_AuthenticationSet"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ChainAuthorization_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ChainAuthorization_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ChainAuthorization/dl_h3_hehe_public_ChainAuthorization_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ChainAuthorization/dl_h3_hehe_public_ChainAuthorization_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ChainAuthorization_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainAuthorization", "dl_h3_hehe_public_ChainAuthorization_current"], "alias": "public_ChainAuthorization_current", "checksum": {"name": "sha256", "checksum": "03b0a7c350032686d46591f0785e20a05d1fff96683f923e2b4de3d2b50da5bb"}, "config": {"enabled": true, "alias": "public_ChainAuthorization_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ChainAuthorization_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainauthorizationid": {"name": "chainauthorizationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "displayname": {"name": "displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intermediatekvk": {"name": "intermediatekvk", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intermediateentitytype": {"name": "intermediateentitytype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intermediateentityid": {"name": "intermediateentityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ChainAuthorization/dl_h3_hehe_public_ChainAuthorization_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ChainAuthorization_current"}, "created_at": 1728271772.62755, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ChainAuthorization_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `ChainAuthorizationId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_ChainAuthorization')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_ChainAuthorization", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorization"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ChainAuthorization": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ChainAuthorization", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ChainAuthorization/dl_h3_hehe_public_ChainAuthorization.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ChainAuthorization/dl_h3_hehe_public_ChainAuthorization.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ChainAuthorization", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainAuthorization", "dl_h3_hehe_public_ChainAuthorization"], "alias": "public_ChainAuthorization", "checksum": {"name": "sha256", "checksum": "f72d2902443962ffd4824d1fe7a1896466ab0de1307306f65a521a6b88a80314"}, "config": {"enabled": true, "alias": "public_ChainAuthorization", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ChainAuthorization", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainauthorizationid": {"name": "chainauthorizationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "displayname": {"name": "displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intermediatekvk": {"name": "intermediatekvk", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intermediateentitytype": {"name": "intermediateentitytype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intermediateentityid": {"name": "intermediateentityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ChainAuthorization/dl_h3_hehe_public_ChainAuthorization.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ChainAuthorization"}, "created_at": 1728271772.6256378, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ChainAuthorization`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_ChainAuthorization')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_ChainAuthorization"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_ChainAuthorization"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Group_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Group_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Group/dl_h3_hehe_public_Group_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Group/dl_h3_hehe_public_Group_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Group_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Group", "dl_h3_hehe_public_Group_current"], "alias": "public_Group_current", "checksum": {"name": "sha256", "checksum": "be09b09593f0e0f80df9896bfdf13f54c7a6663495b768abf2c8fa65db5d206c"}, "config": {"enabled": true, "alias": "public_Group_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Group_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupid": {"name": "groupid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lowestusersauthenticationlevel": {"name": "lowestusersauthenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "highestserviceauthorizationlevel": {"name": "highestserviceauthorizationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Group/dl_h3_hehe_public_Group_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Group_current"}, "created_at": 1728271772.631637, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Group_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `GroupId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_Group')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_Group", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_Group"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Group": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Group", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Group/dl_h3_hehe_public_Group.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Group/dl_h3_hehe_public_Group.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Group", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Group", "dl_h3_hehe_public_Group"], "alias": "public_Group", "checksum": {"name": "sha256", "checksum": "175b7bbcaa0018e960da2c8e0ec1844438633f8623cee08152cb92c8b3ec44a3"}, "config": {"enabled": true, "alias": "public_Group", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Group", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupid": {"name": "groupid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lowestusersauthenticationlevel": {"name": "lowestusersauthenticationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "highestserviceauthorizationlevel": {"name": "highestserviceauthorizationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Group/dl_h3_hehe_public_Group.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Group"}, "created_at": 1728271772.6298099, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Group`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_Group')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_Group"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_Group"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ISO_Country": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ISO_Country", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ISO_Country/dl_h3_hehe_public_ISO_Country.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ISO_Country/dl_h3_hehe_public_ISO_Country.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ISO_Country", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ISO_Country", "dl_h3_hehe_public_ISO_Country"], "alias": "public_ISO_Country", "checksum": {"name": "sha256", "checksum": "b68256ca23d751d4fc20012cc01085268fbe0cbd00ecf1472ab7f40d3f113601"}, "config": {"enabled": true, "alias": "public_ISO_Country", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ISO_Country", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alpha2": {"name": "alpha2", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alpha3": {"name": "alpha3", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "countryen": {"name": "countryen", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "countrynl": {"name": "countrynl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numericcode": {"name": "numericcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ISO_Country/dl_h3_hehe_public_ISO_Country.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ISO_Country"}, "created_at": 1728271772.6341221, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ISO_Country`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_ISO_Country')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_ISO_Country"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_ISO_Country"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ISO_Country_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ISO_Country_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ISO_Country/dl_h3_hehe_public_ISO_Country_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ISO_Country/dl_h3_hehe_public_ISO_Country_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ISO_Country_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ISO_Country", "dl_h3_hehe_public_ISO_Country_current"], "alias": "public_ISO_Country_current", "checksum": {"name": "sha256", "checksum": "e7742f625a505ef71dee85418f7bfa2572a2db792124d1ef59d923561a234aaa"}, "config": {"enabled": true, "alias": "public_ISO_Country_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ISO_Country_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alpha2": {"name": "alpha2", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alpha3": {"name": "alpha3", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "countryen": {"name": "countryen", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "countrynl": {"name": "countrynl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numericcode": {"name": "numericcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ISO_Country/dl_h3_hehe_public_ISO_Country_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ISO_Country_current"}, "created_at": 1728271772.6358068, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ISO_Country_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `Alpha2`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_ISO_Country')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_ISO_Country", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_ISO_Country"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_GroupUser": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_GroupUser", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_GroupUser/dl_h3_hehe_public_GroupUser.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_GroupUser/dl_h3_hehe_public_GroupUser.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_GroupUser", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_GroupUser", "dl_h3_hehe_public_GroupUser"], "alias": "public_GroupUser", "checksum": {"name": "sha256", "checksum": "c5444efaa97e15f177f14d256fb323f7393062fb99b04b9897f9e96f23f63c34"}, "config": {"enabled": true, "alias": "public_GroupUser", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_GroupUser", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupuserid": {"name": "groupuserid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupid": {"name": "groupid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastserviceauthorizationuse": {"name": "lastserviceauthorizationuse", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastchangedbypersonid": {"name": "lastchangedbypersonid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_GroupUser/dl_h3_hehe_public_GroupUser.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_GroupUser"}, "created_at": 1728271772.6397076, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_GroupUser`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_GroupUser')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_GroupUser"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_GroupUser"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_GroupUser_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_GroupUser_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_GroupUser/dl_h3_hehe_public_GroupUser_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_GroupUser/dl_h3_hehe_public_GroupUser_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_GroupUser_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_GroupUser", "dl_h3_hehe_public_GroupUser_current"], "alias": "public_GroupUser_current", "checksum": {"name": "sha256", "checksum": "e7c125075c5776ab351a65da7f2fab847e510358a6fb4da1aba501c1bde39746"}, "config": {"enabled": true, "alias": "public_GroupUser_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_GroupUser_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupuserid": {"name": "groupuserid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupid": {"name": "groupid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creationdate": {"name": "creationdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastserviceauthorizationuse": {"name": "lastserviceauthorizationuse", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastchangedbypersonid": {"name": "lastchangedbypersonid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_GroupUser/dl_h3_hehe_public_GroupUser_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_GroupUser_current"}, "created_at": 1728271772.6381721, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_GroupUser_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `GroupUserId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_GroupUser')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_GroupUser", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_GroupUser"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonOrganisationLink_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonOrganisationLink/dl_h3_hehe_public_PersonOrganisationLink_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonOrganisationLink/dl_h3_hehe_public_PersonOrganisationLink_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonOrganisationLink", "dl_h3_hehe_public_PersonOrganisationLink_current"], "alias": "public_PersonOrganisationLink_current", "checksum": {"name": "sha256", "checksum": "b911e36e44d1735bb32251a4396671579e2f04cfa4c5dcf86b846347256733e9"}, "config": {"enabled": true, "alias": "public_PersonOrganisationLink_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonOrganisationLink_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "linktype": {"name": "linktype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastconfirmeddatetime": {"name": "lastconfirmeddatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastserviceauthorizationuse": {"name": "lastserviceauthorizationuse", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastextenddate": {"name": "lastextenddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonOrganisationLink/dl_h3_hehe_public_PersonOrganisationLink_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonOrganisationLink_current"}, "created_at": 1728271772.642254, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonOrganisationLink_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `PersonOrganisationLinkId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_PersonOrganisationLink')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_PersonOrganisationLink", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonOrganisationLink", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonOrganisationLink/dl_h3_hehe_public_PersonOrganisationLink.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonOrganisationLink/dl_h3_hehe_public_PersonOrganisationLink.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonOrganisationLink", "dl_h3_hehe_public_PersonOrganisationLink"], "alias": "public_PersonOrganisationLink", "checksum": {"name": "sha256", "checksum": "2eb2470eeefd5767417cf98e44c6b836e069f6b1443bb88483413ceb31e5b73c"}, "config": {"enabled": true, "alias": "public_PersonOrganisationLink", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonOrganisationLink", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "linktype": {"name": "linktype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastconfirmeddatetime": {"name": "lastconfirmeddatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastserviceauthorizationuse": {"name": "lastserviceauthorizationuse", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastextenddate": {"name": "lastextenddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonOrganisationLink/dl_h3_hehe_public_PersonOrganisationLink.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonOrganisationLink"}, "created_at": 1728271772.6438203, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonOrganisationLink`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_PersonOrganisationLink')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_PersonOrganisationLink"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_PersonOrganisationLink"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ServiceAuthorization_1_13_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ServiceAuthorization_1_13/dl_h3_hehe_public_ServiceAuthorization_1_13_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ServiceAuthorization_1_13/dl_h3_hehe_public_ServiceAuthorization_1_13_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ServiceAuthorization_1_13", "dl_h3_hehe_public_ServiceAuthorization_1_13_current"], "alias": "public_ServiceAuthorization_1_13_current", "checksum": {"name": "sha256", "checksum": "ff4a29184618a423fa66c9016802e209e0c2f206e6b0f5d0e4e173234101f231"}, "config": {"enabled": true, "alias": "public_ServiceAuthorization_1_13_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ServiceAuthorization_1_13_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceauthorizationid": {"name": "serviceauthorizationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fromdate": {"name": "fromdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todate": {"name": "todate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationrelationlinkid": {"name": "personorganisationrelationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registrationlevel": {"name": "registrationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastserviceauthorizationuseutc": {"name": "lastserviceauthorizationuseutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastextenddate": {"name": "lastextenddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedefinitionreference": {"name": "servicedefinitionreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlastserviceauthorization": {"name": "maxlastserviceauthorization", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ServiceAuthorization_1_13/dl_h3_hehe_public_ServiceAuthorization_1_13_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ServiceAuthorization_1_13_current"}, "created_at": 1728271772.6470761, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ServiceAuthorization_1_13_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `ServiceAuthorizationId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_ServiceAuthorization_1_13')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_ServiceAuthorization_1_13", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ServiceAuthorization_1_13", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ServiceAuthorization_1_13/dl_h3_hehe_public_ServiceAuthorization_1_13.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ServiceAuthorization_1_13/dl_h3_hehe_public_ServiceAuthorization_1_13.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ServiceAuthorization_1_13", "dl_h3_hehe_public_ServiceAuthorization_1_13"], "alias": "public_ServiceAuthorization_1_13", "checksum": {"name": "sha256", "checksum": "0cdd61960c63894b8df42ddda96148ff8d0b07e9a7552aa80d13e3b82b1c0e22"}, "config": {"enabled": true, "alias": "public_ServiceAuthorization_1_13", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ServiceAuthorization_1_13", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceauthorizationid": {"name": "serviceauthorizationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fromdate": {"name": "fromdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todate": {"name": "todate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationrelationlinkid": {"name": "personorganisationrelationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registrationlevel": {"name": "registrationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastserviceauthorizationuseutc": {"name": "lastserviceauthorizationuseutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastextenddate": {"name": "lastextenddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedefinitionreference": {"name": "servicedefinitionreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "maxlastserviceauthorization": {"name": "maxlastserviceauthorization", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ServiceAuthorization_1_13/dl_h3_hehe_public_ServiceAuthorization_1_13.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ServiceAuthorization_1_13"}, "created_at": 1728271772.6487083, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ServiceAuthorization_1_13`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_ServiceAuthorization_1_13')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_ServiceAuthorization_1_13"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_ServiceAuthorization_1_13"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Urn": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Urn", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Urn/dl_h3_hehe_public_Urn.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Urn/dl_h3_hehe_public_Urn.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Urn", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Urn", "dl_h3_hehe_public_Urn"], "alias": "public_Urn", "checksum": {"name": "sha256", "checksum": "b5371b430ec50edf001183faa6d90e37017c42c739ec8f2f6ecf38d6bf11e81a"}, "config": {"enabled": true, "alias": "public_Urn", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Urn", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "urnid": {"name": "urnid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "urn": {"name": "urn", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributeformat": {"name": "attributeformat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Urn/dl_h3_hehe_public_Urn.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Urn"}, "created_at": 1728271772.6507556, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Urn`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_Urn')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_Urn"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_Urn"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Urn_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Urn_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Urn/dl_h3_hehe_public_Urn_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Urn/dl_h3_hehe_public_Urn_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Urn_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Urn", "dl_h3_hehe_public_Urn_current"], "alias": "public_Urn_current", "checksum": {"name": "sha256", "checksum": "9e54de17f9d74ce4b508c0120e73b835541bce48611d4787f8ce20227588caf3"}, "config": {"enabled": true, "alias": "public_Urn_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Urn_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "urnid": {"name": "urnid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "urn": {"name": "urn", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributeformat": {"name": "attributeformat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Urn/dl_h3_hehe_public_Urn_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Urn_current"}, "created_at": 1728271772.6525123, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Urn_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `UrnId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_Urn')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_Urn", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_Urn"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_RegistrationLevel_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_RegistrationLevel_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_RegistrationLevel/dl_h3_hehe_public_RegistrationLevel_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_RegistrationLevel/dl_h3_hehe_public_RegistrationLevel_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_RegistrationLevel_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_RegistrationLevel", "dl_h3_hehe_public_RegistrationLevel_current"], "alias": "public_RegistrationLevel_current", "checksum": {"name": "sha256", "checksum": "7012c835e27cdbdd996e98dfd932cd67327af2304e81a151fac31a1ddcf9c97c"}, "config": {"enabled": true, "alias": "public_RegistrationLevel_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_RegistrationLevel_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registrationlevelid": {"name": "registrationlevelid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_RegistrationLevel/dl_h3_hehe_public_RegistrationLevel_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_RegistrationLevel_current"}, "created_at": 1728271772.6543844, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_RegistrationLevel_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `RegistrationLevelId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_RegistrationLevel')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_RegistrationLevel", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_RegistrationLevel"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_RegistrationLevel": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_RegistrationLevel", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_RegistrationLevel/dl_h3_hehe_public_RegistrationLevel.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_RegistrationLevel/dl_h3_hehe_public_RegistrationLevel.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_RegistrationLevel", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_RegistrationLevel", "dl_h3_hehe_public_RegistrationLevel"], "alias": "public_RegistrationLevel", "checksum": {"name": "sha256", "checksum": "ba0fd3308744328e09cf70645a1929b8a9c9dd171377f4c62c40f2081f416f37"}, "config": {"enabled": true, "alias": "public_RegistrationLevel", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_RegistrationLevel", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registrationlevelid": {"name": "registrationlevelid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_RegistrationLevel/dl_h3_hehe_public_RegistrationLevel.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_RegistrationLevel"}, "created_at": 1728271772.6559665, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_RegistrationLevel`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_RegistrationLevel')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_RegistrationLevel"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_RegistrationLevel"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Organisation_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Organisation_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Organisation/dl_h3_hehe_public_Organisation_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Organisation/dl_h3_hehe_public_Organisation_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Organisation_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Organisation", "dl_h3_hehe_public_Organisation_current"], "alias": "public_Organisation_current", "checksum": {"name": "sha256", "checksum": "be1f655a4ac95ed2f04734ab822d6a176a986da85761d271056b4714f275753b"}, "config": {"enabled": true, "alias": "public_Organisation_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Organisation_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vestigingsnummer": {"name": "vestigingsnummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvknummer": {"name": "kvknummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkendossiernummer": {"name": "kvkendossiernummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rsin": {"name": "rsin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddressstreet": {"name": "kvkaddressstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddressnumber": {"name": "kvkaddressnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddresszipcode": {"name": "kvkaddresszipcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddresscity": {"name": "kvkaddresscity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddresscountry": {"name": "kvkaddresscountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "poststreet": {"name": "poststreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postnumber": {"name": "postnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postzipcode": {"name": "postzipcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postcity": {"name": "postcity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postcountry": {"name": "postcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dashboardaccess": {"name": "dashboardaccess", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deleted": {"name": "deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phonenumber": {"name": "phonenumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailaddress": {"name": "emailaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccountnumber": {"name": "bankaccountnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bic": {"name": "bic", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactname": {"name": "contactname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactphonenumber": {"name": "contactphonenumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactcountry": {"name": "contactcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactemailaddress": {"name": "contactemailaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "externalreference": {"name": "externalreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bsnkid": {"name": "bsnkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trrnummer": {"name": "trrnummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Organisation/dl_h3_hehe_public_Organisation_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Organisation_current"}, "created_at": 1728271772.6642458, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Organisation_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `OrganisationId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_Organisation')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_Organisation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_Organisation"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Organisation": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Organisation", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Organisation/dl_h3_hehe_public_Organisation.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Organisation/dl_h3_hehe_public_Organisation.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Organisation", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Organisation", "dl_h3_hehe_public_Organisation"], "alias": "public_Organisation", "checksum": {"name": "sha256", "checksum": "920ae9b8f176aa5d9549fbfecc47a55dde855f3a6bf45c20edeaaa1e6aebdee2"}, "config": {"enabled": true, "alias": "public_Organisation", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Organisation", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationid": {"name": "organisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vestigingsnummer": {"name": "vestigingsnummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvknummer": {"name": "kvknummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkendossiernummer": {"name": "kvkendossiernummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rsin": {"name": "rsin", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddressstreet": {"name": "kvkaddressstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddressnumber": {"name": "kvkaddressnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddresszipcode": {"name": "kvkaddresszipcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddresscity": {"name": "kvkaddresscity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "kvkaddresscountry": {"name": "kvkaddresscountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "poststreet": {"name": "poststreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postnumber": {"name": "postnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postzipcode": {"name": "postzipcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postcity": {"name": "postcity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postcountry": {"name": "postcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dashboardaccess": {"name": "dashboardaccess", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deleted": {"name": "deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phonenumber": {"name": "phonenumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailaddress": {"name": "emailaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccountnumber": {"name": "bankaccountnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bic": {"name": "bic", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactname": {"name": "contactname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactphonenumber": {"name": "contactphonenumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactcountry": {"name": "contactcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactemailaddress": {"name": "contactemailaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "externalreference": {"name": "externalreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bsnkid": {"name": "bsnkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trrnummer": {"name": "trrnummer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Organisation/dl_h3_hehe_public_Organisation.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Organisation"}, "created_at": 1728271772.662018, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Organisation`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_Organisation')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_Organisation"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_Organisation"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonOrganisationRole", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonOrganisationRole/dl_h3_hehe_public_PersonOrganisationRole.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonOrganisationRole/dl_h3_hehe_public_PersonOrganisationRole.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonOrganisationRole", "dl_h3_hehe_public_PersonOrganisationRole"], "alias": "public_PersonOrganisationRole", "checksum": {"name": "sha256", "checksum": "e387ee2936f1db0b65a760fc46091f552801e631398c3097b6b821f933664d78"}, "config": {"enabled": true, "alias": "public_PersonOrganisationRole", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonOrganisationRole", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationroleid": {"name": "personorganisationroleid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role": {"name": "role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expiredate": {"name": "expiredate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active": {"name": "active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonOrganisationRole/dl_h3_hehe_public_PersonOrganisationRole.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonOrganisationRole"}, "created_at": 1728271772.6684258, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonOrganisationRole`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_PersonOrganisationRole')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_PersonOrganisationRole"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_PersonOrganisationRole"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonOrganisationRole_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonOrganisationRole/dl_h3_hehe_public_PersonOrganisationRole_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonOrganisationRole/dl_h3_hehe_public_PersonOrganisationRole_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonOrganisationRole", "dl_h3_hehe_public_PersonOrganisationRole_current"], "alias": "public_PersonOrganisationRole_current", "checksum": {"name": "sha256", "checksum": "b79c0a3448c879e4c13cf9ba7b4f423c7f90e5b978c6f37c855b1be2f523e7fe"}, "config": {"enabled": true, "alias": "public_PersonOrganisationRole_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonOrganisationRole_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationroleid": {"name": "personorganisationroleid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personorganisationlinkid": {"name": "personorganisationlinkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role": {"name": "role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expiredate": {"name": "expiredate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active": {"name": "active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonOrganisationRole/dl_h3_hehe_public_PersonOrganisationRole_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonOrganisationRole_current"}, "created_at": 1728271772.6668894, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonOrganisationRole_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `PersonOrganisationRoleId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_PersonOrganisationRole')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_PersonOrganisationRole", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_IntermediateAuthorizationService", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_IntermediateAuthorizationService/dl_h3_hehe_public_IntermediateAuthorizationService.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_IntermediateAuthorizationService/dl_h3_hehe_public_IntermediateAuthorizationService.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_IntermediateAuthorizationService", "dl_h3_hehe_public_IntermediateAuthorizationService"], "alias": "public_IntermediateAuthorizationService", "checksum": {"name": "sha256", "checksum": "ebc4771f25ec3ed8da4ff5d23b99b0eef72b3c292dbc73ed29e2711e8d802cf7"}, "config": {"enabled": true, "alias": "public_IntermediateAuthorizationService", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_IntermediateAuthorizationService", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedauthorizationserviceid": {"name": "chainedauthorizationserviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedorganisationid": {"name": "chainedorganisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedefinitionreference": {"name": "servicedefinitionreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todate": {"name": "todate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "executingpersonid": {"name": "executingpersonid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_IntermediateAuthorizationService/dl_h3_hehe_public_IntermediateAuthorizationService.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_IntermediateAuthorizationService"}, "created_at": 1728271772.6704128, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_IntermediateAuthorizationService`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_IntermediateAuthorizationService')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_IntermediateAuthorizationService"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_IntermediateAuthorizationService"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_IntermediateAuthorizationService_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_IntermediateAuthorizationService/dl_h3_hehe_public_IntermediateAuthorizationService_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_IntermediateAuthorizationService/dl_h3_hehe_public_IntermediateAuthorizationService_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_IntermediateAuthorizationService", "dl_h3_hehe_public_IntermediateAuthorizationService_current"], "alias": "public_IntermediateAuthorizationService_current", "checksum": {"name": "sha256", "checksum": "618566dbc01befb857d878ebc08fca36f6d928cf8344e108fd7d2a075a0c8fa8"}, "config": {"enabled": true, "alias": "public_IntermediateAuthorizationService_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_IntermediateAuthorizationService_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedauthorizationserviceid": {"name": "chainedauthorizationserviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainedorganisationid": {"name": "chainedorganisationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedefinitionreference": {"name": "servicedefinitionreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todate": {"name": "todate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "executingpersonid": {"name": "executingpersonid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_IntermediateAuthorizationService/dl_h3_hehe_public_IntermediateAuthorizationService_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_IntermediateAuthorizationService_current"}, "created_at": 1728271772.6721685, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_IntermediateAuthorizationService_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `ChainedAuthorizationServiceId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_IntermediateAuthorizationService')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_IntermediateAuthorizationService", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ServiceProvider_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ServiceProvider_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ServiceProvider/dl_h3_hehe_public_ServiceProvider_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ServiceProvider/dl_h3_hehe_public_ServiceProvider_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ServiceProvider_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ServiceProvider", "dl_h3_hehe_public_ServiceProvider_current"], "alias": "public_ServiceProvider_current", "checksum": {"name": "sha256", "checksum": "b4d2c708dcabf89c27ec0b0b90eb972895ec8d0eb46f808f444ca0d5ca916a79"}, "config": {"enabled": true, "alias": "public_ServiceProvider_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ServiceProvider_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organizationdisplayname": {"name": "organizationdisplayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceproviderid": {"name": "serviceproviderid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ServiceProvider/dl_h3_hehe_public_ServiceProvider_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ServiceProvider_current"}, "created_at": 1728271772.6757772, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ServiceProvider_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `ServiceProviderId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_ServiceProvider')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_ServiceProvider", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_ServiceProvider"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ServiceProvider": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ServiceProvider", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ServiceProvider/dl_h3_hehe_public_ServiceProvider.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ServiceProvider/dl_h3_hehe_public_ServiceProvider.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ServiceProvider", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ServiceProvider", "dl_h3_hehe_public_ServiceProvider"], "alias": "public_ServiceProvider", "checksum": {"name": "sha256", "checksum": "9801d29c5b6b80c132170862b4cab3290d22a69cce4497ef5eceb5b490475a1c"}, "config": {"enabled": true, "alias": "public_ServiceProvider", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ServiceProvider", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organizationdisplayname": {"name": "organizationdisplayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceproviderid": {"name": "serviceproviderid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ServiceProvider/dl_h3_hehe_public_ServiceProvider.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ServiceProvider"}, "created_at": 1728271772.6740978, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ServiceProvider`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_ServiceProvider')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_ServiceProvider"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_ServiceProvider"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Service": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Service", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Service/dl_h3_hehe_public_Service.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Service/dl_h3_hehe_public_Service.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Service", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Service", "dl_h3_hehe_public_Service"], "alias": "public_Service", "checksum": {"name": "sha256", "checksum": "f6f18b09ca3c672e9a294b4bd48eed684e831c12fbfeeb1f57210f20bc91db92"}, "config": {"enabled": true, "alias": "public_Service", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Service", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additionalinfo": {"name": "additionalinfo", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ignoreonautoupdate": {"name": "ignoreonautoupdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requiredlevel": {"name": "requiredlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedescription": {"name": "servicedescription", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceid": {"name": "serviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicename": {"name": "servicename", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceproviderid": {"name": "serviceproviderid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceuuid": {"name": "serviceuuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "showindashboard": {"name": "showindashboard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Service/dl_h3_hehe_public_Service.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Service"}, "created_at": 1728271772.6807554, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Service`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_Service')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_Service"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_Service"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Service_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Service_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Service/dl_h3_hehe_public_Service_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Service/dl_h3_hehe_public_Service_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Service_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Service", "dl_h3_hehe_public_Service_current"], "alias": "public_Service_current", "checksum": {"name": "sha256", "checksum": "3245e1a307894a4fc569f92f17cf426eeb32a45686ac551be9b357c4b52f1c25"}, "config": {"enabled": true, "alias": "public_Service_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Service_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additionalinfo": {"name": "additionalinfo", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enabled": {"name": "enabled", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ignoreonautoupdate": {"name": "ignoreonautoupdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requiredlevel": {"name": "requiredlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedescription": {"name": "servicedescription", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceid": {"name": "serviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicename": {"name": "servicename", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceproviderid": {"name": "serviceproviderid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceuuid": {"name": "serviceuuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "showindashboard": {"name": "showindashboard", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Service/dl_h3_hehe_public_Service_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Service_current"}, "created_at": 1728271772.6790752, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Service_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `ServiceId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_Service')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_Service", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_Service"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Person_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Person_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Person/dl_h3_hehe_public_Person_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Person/dl_h3_hehe_public_Person_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Person_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Person", "dl_h3_hehe_public_Person_current"], "alias": "public_Person_current", "checksum": {"name": "sha256", "checksum": "b1bd59495bf4c738afd187f8c6e3a75344c1e6004be0ea4a1bcef33dc13b28ee"}, "config": {"enabled": true, "alias": "public_Person_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Person_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailaddress": {"name": "emailaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addressstreet": {"name": "addressstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addressnumber": {"name": "addressnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addresscity": {"name": "addresscity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addresscountry": {"name": "addresscountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addresszipcode": {"name": "addresszipcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phonenumber": {"name": "phonenumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "initials": {"name": "initials", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastname": {"name": "lastname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastnameprefix": {"name": "lastnameprefix", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dateofbirth": {"name": "dateofbirth", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "externalreference": {"name": "externalreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bsnkid": {"name": "bsnkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Person/dl_h3_hehe_public_Person_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Person_current"}, "created_at": 1728271772.6859474, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Person_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `PersonId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_Person')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_Person", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_Person"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Person": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Person", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Person/dl_h3_hehe_public_Person.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Person/dl_h3_hehe_public_Person.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Person", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Person", "dl_h3_hehe_public_Person"], "alias": "public_Person", "checksum": {"name": "sha256", "checksum": "f856e023bc3e32ad481e90e02f3f61503d4a88978e2aa23d8c86624ea19281b4"}, "config": {"enabled": true, "alias": "public_Person", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Person", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emailaddress": {"name": "emailaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addressstreet": {"name": "addressstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addressnumber": {"name": "addressnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addresscity": {"name": "addresscity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addresscountry": {"name": "addresscountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addresszipcode": {"name": "addresszipcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phonenumber": {"name": "phonenumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "initials": {"name": "initials", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastname": {"name": "lastname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastnameprefix": {"name": "lastnameprefix", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dateofbirth": {"name": "dateofbirth", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "externalreference": {"name": "externalreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "insertdate": {"name": "insertdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdateddate": {"name": "lastupdateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bsnkid": {"name": "bsnkid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Person/dl_h3_hehe_public_Person.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Person"}, "created_at": 1728271772.684222, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Person`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_Person')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_Person"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_Person"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonUsageTransactions", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonUsageTransactions/dl_h3_hehe_public_PersonUsageTransactions.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonUsageTransactions/dl_h3_hehe_public_PersonUsageTransactions.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonUsageTransactions", "dl_h3_hehe_public_PersonUsageTransactions"], "alias": "public_PersonUsageTransactions", "checksum": {"name": "sha256", "checksum": "8a85e2ec5b9063f0b4a4cb43191ff3d656490fd50d2af0533c77c762a9313260"}, "config": {"enabled": true, "alias": "public_PersonUsageTransactions", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonUsageTransactions", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personusagetransactionid": {"name": "personusagetransactionid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceid": {"name": "serviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicename": {"name": "servicename", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "userhostaddress": {"name": "userhostaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transactiontime": {"name": "transactiontime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transactiontype": {"name": "transactiontype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceprovidername": {"name": "serviceprovidername", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "entityconcernedid": {"name": "entityconcernedid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "entityconcernedsubid": {"name": "entityconcernedsubid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationname": {"name": "organisationname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonUsageTransactions/dl_h3_hehe_public_PersonUsageTransactions.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonUsageTransactions"}, "created_at": 1728271772.6912212, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonUsageTransactions`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_PersonUsageTransactions')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_PersonUsageTransactions"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_PersonUsageTransactions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_PersonUsageTransactions_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_PersonUsageTransactions/dl_h3_hehe_public_PersonUsageTransactions_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_PersonUsageTransactions/dl_h3_hehe_public_PersonUsageTransactions_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonUsageTransactions", "dl_h3_hehe_public_PersonUsageTransactions_current"], "alias": "public_PersonUsageTransactions_current", "checksum": {"name": "sha256", "checksum": "aa4005cfa17d7656395cdee7d442ab0527c7d285ae704e757c7717812cbc74fa"}, "config": {"enabled": true, "alias": "public_PersonUsageTransactions_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_PersonUsageTransactions_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personusagetransactionid": {"name": "personusagetransactionid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceid": {"name": "serviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicename": {"name": "servicename", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "userhostaddress": {"name": "userhostaddress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transactiontime": {"name": "transactiontime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transactiontype": {"name": "transactiontype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serviceprovidername": {"name": "serviceprovidername", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "entityconcernedid": {"name": "entityconcernedid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "entityconcernedsubid": {"name": "entityconcernedsubid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "personid": {"name": "personid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organisationname": {"name": "organisationname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_PersonUsageTransactions/dl_h3_hehe_public_PersonUsageTransactions_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_PersonUsageTransactions_current"}, "created_at": 1728271772.6894016, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonUsageTransactions_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `PersonUsageTransactionId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_PersonUsageTransactions')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_PersonUsageTransactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ChainAuthorizationService", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ChainAuthorizationService/dl_h3_hehe_public_ChainAuthorizationService.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ChainAuthorizationService/dl_h3_hehe_public_ChainAuthorizationService.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainAuthorizationService", "dl_h3_hehe_public_ChainAuthorizationService"], "alias": "public_ChainAuthorizationService", "checksum": {"name": "sha256", "checksum": "332b289c06353803aa5050d82a9de619040326c86e15df0178d1589bc7257530"}, "config": {"enabled": true, "alias": "public_ChainAuthorizationService", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ChainAuthorizationService", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainauthorizationserviceid": {"name": "chainauthorizationserviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainauthorizationid": {"name": "chainauthorizationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedefinitionreference": {"name": "servicedefinitionreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastauthorizationuseutc": {"name": "lastauthorizationuseutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registrationlevel": {"name": "registrationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ChainAuthorizationService/dl_h3_hehe_public_ChainAuthorizationService.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ChainAuthorizationService"}, "created_at": 1728271772.6949675, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ChainAuthorizationService`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_ChainAuthorizationService')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_ChainAuthorizationService"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_ChainAuthorizationService"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_ChainAuthorizationService_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_ChainAuthorizationService/dl_h3_hehe_public_ChainAuthorizationService_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_ChainAuthorizationService/dl_h3_hehe_public_ChainAuthorizationService_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainAuthorizationService", "dl_h3_hehe_public_ChainAuthorizationService_current"], "alias": "public_ChainAuthorizationService_current", "checksum": {"name": "sha256", "checksum": "c0966feca6b0a33b301fbae31484e385359dbe75d91a8e694ed0bde2c035991f"}, "config": {"enabled": true, "alias": "public_ChainAuthorizationService_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_ChainAuthorizationService_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainauthorizationserviceid": {"name": "chainauthorizationserviceid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chainauthorizationid": {"name": "chainauthorizationid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedefinitionreference": {"name": "servicedefinitionreference", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastauthorizationuseutc": {"name": "lastauthorizationuseutc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registrationlevel": {"name": "registrationlevel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_ChainAuthorizationService/dl_h3_hehe_public_ChainAuthorizationService_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_ChainAuthorizationService_current"}, "created_at": 1728271772.693325, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_ChainAuthorizationService_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `ChainAuthorizationServiceId`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_ChainAuthorizationService')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_ChainAuthorizationService", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Roles": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Roles", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Roles/dl_h3_hehe_public_Roles.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Roles/dl_h3_hehe_public_Roles.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Roles", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Roles", "dl_h3_hehe_public_Roles"], "alias": "public_Roles", "checksum": {"name": "sha256", "checksum": "807b6bb1d5ecef2cf063be986deff8c773c77be5055b20ea4aa43290d43bbdc0"}, "config": {"enabled": true, "alias": "public_Roles", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Roles", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role": {"name": "role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Roles/dl_h3_hehe_public_Roles.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Roles"}, "created_at": 1728271772.6981268, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Roles`", "raw_code": "WITH dedup_table AS (\n\nSELECT * EXCEPT(rn)\nFROM (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY ingestion_meta_data_uuid ORDER BY ingestion_meta_data_processing_timestamp) AS rn\n    FROM   {{  source('h3_hehe', 'public_Roles')  }} \n)\nWHERE rn = 1\n),\nsurrogate_key as(\n    select\n         {{  dbt_utils.generate_surrogate_key([\n                'ingestion_meta_data_uuid', \n                'row_hash'\n            ])\n         }}  as T_UNIQUE_KEY, \n    CURRENT_TIMESTAMP AS INSERT_HIST_TIMESTAMP,\n        *\n    FROM dedup_table\n)\nSELECT \n    *\nFROM surrogate_key", "language": "sql", "refs": [], "sources": [["h3_hehe", "public_Roles"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.project_dbt.h3_hehe.public_Roles"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.project_dbt.dl_h3_hehe_public_Roles_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "dl_h3_hehe_public_Roles_current", "resource_type": "model", "package_name": "project_dbt", "path": "STRH/datalake/h3_hehe/public_Roles/dl_h3_hehe_public_Roles_current.sql", "original_file_path": "models/STRH/datalake/h3_hehe/public_Roles/dl_h3_hehe_public_Roles_current.sql", "unique_id": "model.project_dbt.dl_h3_hehe_public_Roles_current", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Roles", "dl_h3_hehe_public_Roles_current"], "alias": "public_Roles_current", "checksum": {"name": "sha256", "checksum": "7f4ed60bbf1b7192d47fe8e3c4bfe54dd26c3825944845e0778abe76badd671e"}, "config": {"enabled": true, "alias": "public_Roles_current", "schema": "dl_h3_hehe", "database": null, "tags": ["nightly", "datalake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["nightly", "datalake"], "description": "auto render table public_Roles_current", "columns": {"INSERT_HIST_TIMESTAMP": {"name": "INSERT_HIST_TIMESTAMP", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_processing_timestamp": {"name": "ingestion_meta_data_processing_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_uuid": {"name": "ingestion_meta_data_uuid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_timestamp": {"name": "ingestion_meta_data_read_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_source_timestamp": {"name": "ingestion_meta_data_source_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_object": {"name": "ingestion_meta_data_object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_read_method": {"name": "ingestion_meta_data_read_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_schema": {"name": "source_metadata_schema", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_table": {"name": "source_metadata_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_is_deleted": {"name": "source_metadata_is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_change_type": {"name": "source_metadata_change_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_metadata_primary_keys": {"name": "source_metadata_primary_keys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role": {"name": "role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extra_col1": {"name": "extra_col1", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ingestion_meta_data_gcs_path": {"name": "ingestion_meta_data_gcs_path", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_hash": {"name": "row_hash", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "project_dbt://models/STRH/datalake/h3_hehe/public_Roles/dl_h3_hehe_public_Roles_current.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "dl_h3_hehe", "tags": ["datalake"], "alias": "public_Roles_current"}, "created_at": 1728271772.6966102, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Roles_current`", "raw_code": "WITH current_table AS (\n    SELECT *,\n    ROW_NUMBER() OVER(PARTITION BY _pk_id ORDER BY INSERT_HIST_TIMESTAMP DESC) AS rn\n    FROM (\n        SELECT\n        CONCAT( `Role`  ,\"\") AS _pk_id,\n        *\n        FROM  {{  ref('dl_h3_hehe_public_Roles')  }} \n    ) \n)\nSELECT * EXCEPT(rn)\nFROM current_table\nWHERE rn = 1", "language": "sql", "refs": [{"name": "dl_h3_hehe_public_Roles", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.project_dbt.dl_h3_hehe_public_Roles"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}}, "sources": {"source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_IBIS_ACCOUNT_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_IBIS_ACCOUNT_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_IBIS_ACCOUNT_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_IBIS_ACCOUNT_CURRENT`", "created_at": 1728271772.7009516}, "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_BANK_ACCOUNTS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_BANK_ACCOUNTS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_BANK_ACCOUNTS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_BANK_ACCOUNTS_DECRYPTED`", "created_at": 1728271772.7018554}, "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ACCESS_CONSENT_INFO", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ACCESS_CONSENT_INFO"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ACCESS_CONSENT_INFO", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ACCESS_CONSENT_INFO`", "created_at": 1728271772.7019765}, "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PXG_PAYMENT_ACCOUNT_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PXG_PAYMENT_ACCOUNT_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PXG_PAYMENT_ACCOUNT_CURRENT`", "created_at": 1728271772.702079}, "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_FINANCIAL_PLATFORMS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_FINANCIAL_PLATFORMS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_FINANCIAL_PLATFORMS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_FINANCIAL_PLATFORMS_DECRYPTED`", "created_at": 1728271772.702178}, "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_FINANCIAL_INSTITUTIONS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_FINANCIAL_INSTITUTIONS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_FINANCIAL_INSTITUTIONS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_FINANCIAL_INSTITUTIONS`", "created_at": 1728271772.7022698}, "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_CONTRACT_INFO", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_CONTRACT_INFO"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_CONTRACT_INFO", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_CONTRACT_INFO`", "created_at": 1728271772.7023616}, "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_APPLICATION_ACCOUNT_INFO_DECRYPTED`", "created_at": 1728271772.7024536}, "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_APPLICATIONS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_APPLICATIONS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_APPLICATIONS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_APPLICATIONS_DECRYPTED`", "created_at": 1728271772.7025425}, "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_ACCOUNT_TRANSACTIONS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_ACCOUNT_TRANSACTIONS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_ACCOUNT_TRANSACTIONS_DECRYPTED`", "created_at": 1728271772.702629}, "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ACCOUNT_TRANSACTION_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ACCOUNT_TRANSACTION_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ACCOUNT_TRANSACTION_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ACCOUNT_TRANSACTION_CURRENT`", "created_at": 1728271772.7027159}, "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ASPSP_CONSENT_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ASPSP_CONSENT_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ASPSP_CONSENT_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ASPSP_CONSENT_DECRYPTED`", "created_at": 1728271772.7028027}, "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ASPSP_TPP", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ASPSP_TPP"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ASPSP_TPP", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ASPSP_TPP`", "created_at": 1728271772.7028985}, "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_INBOUND_PAYMENT_INFO_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_INBOUND_PAYMENT_INFO_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_INBOUND_PAYMENT_INFO_DECRYPTED`", "created_at": 1728271772.7029953}, "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_INBOUND_TRANSACTIONS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_INBOUND_TRANSACTIONS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_INBOUND_TRANSACTIONS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_INBOUND_TRANSACTIONS_DECRYPTED`", "created_at": 1728271772.7031024}, "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_INBOUND_TRANSACTION_INFO", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_INBOUND_TRANSACTION_INFO", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_INBOUND_TRANSACTION_INFO`", "created_at": 1728271772.7032156}, "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PAYMENT_INITIATIONS_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PAYMENT_INITIATIONS_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PAYMENT_INITIATIONS_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PAYMENT_INITIATIONS_CURRENT`", "created_at": 1728271772.7033114}, "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PAYMENT_ITEM_INFO_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PAYMENT_ITEM_INFO_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PAYMENT_ITEM_INFO_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PAYMENT_ITEM_INFO_DECRYPTED`", "created_at": 1728271772.703396}, "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_PAYMENT_ITEMS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_PAYMENT_ITEMS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_PAYMENT_ITEMS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_PAYMENT_ITEMS`", "created_at": 1728271772.7034795}, "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_MERCHANTS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_MERCHANTS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_MERCHANTS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_MERCHANTS_DECRYPTED`", "created_at": 1728271772.7035615}, "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_PAYMENT_TRANSACTIONS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_PAYMENT_TRANSACTIONS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_PAYMENT_TRANSACTIONS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_PAYMENT_TRANSACTIONS_DECRYPTED`", "created_at": 1728271772.7036455}, "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PAYMENT_TRANSACTION_INFO_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PAYMENT_TRANSACTION_INFO_DECRYPTED`", "created_at": 1728271772.7037282}, "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PAYMENT_PRODUCTS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PAYMENT_PRODUCTS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PAYMENT_PRODUCTS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PAYMENT_PRODUCTS`", "created_at": 1728271772.7038136}, "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_PAYMENT_TRANSACTIONS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_PAYMENT_TRANSACTIONS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_PAYMENT_TRANSACTIONS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_PAYMENT_TRANSACTIONS`", "created_at": 1728271772.703905}, "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_APPLICATION_OWNERS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_APPLICATION_OWNERS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_APPLICATION_OWNERS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_APPLICATION_OWNERS_DECRYPTED`", "created_at": 1728271772.7039914}, "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_CONTRACT_INFO_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_CONTRACT_INFO_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_CONTRACT_INFO_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_CONTRACT_INFO_CURRENT`", "created_at": 1728271772.7040756}, "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PXG_PAYMENT_ACCOUNT_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PXG_PAYMENT_ACCOUNT_DECRYPTED`", "created_at": 1728271772.70416}, "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_INBOUND_PAYMENT_INFO_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_INBOUND_PAYMENT_INFO_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_INBOUND_PAYMENT_INFO_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_INBOUND_PAYMENT_INFO_CURRENT`", "created_at": 1728271772.7042444}, "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PAYMENT_INITIATIONS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PAYMENT_INITIATIONS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PAYMENT_INITIATIONS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PAYMENT_INITIATIONS`", "created_at": 1728271772.7043295}, "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_LEGAL_ENTITY_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_LEGAL_ENTITY_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_LEGAL_ENTITY_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_LEGAL_ENTITY_CURRENT`", "created_at": 1728271772.7044153}, "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_LEGAL_ENTITY_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_LEGAL_ENTITY_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_LEGAL_ENTITY_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_LEGAL_ENTITY_DECRYPTED`", "created_at": 1728271772.7044983}, "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ACCESS_CONSENT_INFO_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ACCESS_CONSENT_INFO_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ACCESS_CONSENT_INFO_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ACCESS_CONSENT_INFO_CURRENT`", "created_at": 1728271772.7045858}, "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ACCESS_CONSENT_INFO_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ACCESS_CONSENT_INFO_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ACCESS_CONSENT_INFO_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ACCESS_CONSENT_INFO_DECRYPTED`", "created_at": 1728271772.7046728}, "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_CI_CARD_TRANSACTION_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_CI_CARD_TRANSACTION_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_CI_CARD_TRANSACTION_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_CI_CARD_TRANSACTION_DECRYPTED`", "created_at": 1728271772.7047594}, "source.project_dbt.source_dwh_STRP.D_CI_CARD": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_CI_CARD", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_CI_CARD", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_CI_CARD"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_CI_CARD", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_CI_CARD`", "created_at": 1728271772.7049277}, "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_CI_CARD_TRANSACTION", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_CI_CARD_TRANSACTION"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_CI_CARD_TRANSACTION", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_CI_CARD_TRANSACTION`", "created_at": 1728271772.7050247}, "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_CI_CARD_TRANSACTION_EVENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_CI_CARD_TRANSACTION_EVENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_CI_CARD_TRANSACTION_EVENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_CI_CARD_TRANSACTION_EVENT`", "created_at": 1728271772.7051115}, "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_CI_CARD_PRODUCT_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_CI_CARD_PRODUCT_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_CI_CARD_PRODUCT_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_CI_CARD_PRODUCT_DECRYPTED`", "created_at": 1728271772.7051957}, "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_CI_CARD_TRANSACTION_EVENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_CI_CARD_TRANSACTION_EVENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_CI_CARD_TRANSACTION_EVENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_CI_CARD_TRANSACTION_EVENT`", "created_at": 1728271772.7052813}, "source.project_dbt.source_dwh_STRP.F_ASPSP_PAYMENT_INITIATION": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_ASPSP_PAYMENT_INITIATION", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_ASPSP_PAYMENT_INITIATION", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_ASPSP_PAYMENT_INITIATION"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_ASPSP_PAYMENT_INITIATION", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_ASPSP_PAYMENT_INITIATION`", "created_at": 1728271772.7053676}, "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ASPSP_TPP_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ASPSP_TPP_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ASPSP_TPP_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ASPSP_TPP_DECRYPTED`", "created_at": 1728271772.7054522}, "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_ACCOUNT_BALANCE", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_ACCOUNT_BALANCE"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_ACCOUNT_BALANCE", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_ACCOUNT_BALANCE`", "created_at": 1728271772.705535}, "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PAYMENT_ACCOUNT_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PAYMENT_ACCOUNT_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PAYMENT_ACCOUNT_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PAYMENT_ACCOUNT_CURRENT`", "created_at": 1728271772.705618}, "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES`", "created_at": 1728271772.7057014}, "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ASPSP_TPP_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ASPSP_TPP_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ASPSP_TPP_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ASPSP_TPP_CURRENT`", "created_at": 1728271772.705785}, "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_ACCOUNT_TRANSACTION_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_ACCOUNT_TRANSACTION_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_ACCOUNT_TRANSACTION_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_ACCOUNT_TRANSACTION_DECRYPTED`", "created_at": 1728271772.7058704}, "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_INBOUND_TRANSACTION_INFO_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_INBOUND_TRANSACTION_INFO_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_INBOUND_TRANSACTION_INFO_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_INBOUND_TRANSACTION_INFO_DECRYPTED`", "created_at": 1728271772.7059531}, "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PAYMENT_ACCOUNT_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PAYMENT_ACCOUNT_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PAYMENT_ACCOUNT_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PAYMENT_ACCOUNT_DECRYPTED`", "created_at": 1728271772.7060382}, "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED`", "created_at": 1728271772.7061212}, "source.project_dbt.source_dwh_STRP.F_UNMATCHED_ACCOUNT_TRANSACTIONS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_UNMATCHED_ACCOUNT_TRANSACTIONS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_UNMATCHED_ACCOUNT_TRANSACTIONS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_UNMATCHED_ACCOUNT_TRANSACTIONS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_UNMATCHED_ACCOUNT_TRANSACTIONS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_UNMATCHED_ACCOUNT_TRANSACTIONS`", "created_at": 1728271772.7062042}, "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_ACCOUNT_MOVEMENTS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_ACCOUNT_MOVEMENTS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_ACCOUNT_MOVEMENTS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_ACCOUNT_MOVEMENTS`", "created_at": 1728271772.706287}, "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_IBIS_ACCOUNT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_IBIS_ACCOUNT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_IBIS_ACCOUNT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_IBIS_ACCOUNT`", "created_at": 1728271772.7063742}, "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_PXG_PAYMENT_ACCOUNT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_PXG_PAYMENT_ACCOUNT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_PXG_PAYMENT_ACCOUNT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_PXG_PAYMENT_ACCOUNT`", "created_at": 1728271772.7064571}, "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_FINANCIAL_PLATFORMS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_FINANCIAL_PLATFORMS"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_FINANCIAL_PLATFORMS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_FINANCIAL_PLATFORMS`", "created_at": 1728271772.7065392}, "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_APPLICATION_ACCOUNT_INFO", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_APPLICATION_ACCOUNT_INFO"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_APPLICATION_ACCOUNT_INFO", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_APPLICATION_ACCOUNT_INFO`", "created_at": 1728271772.7066221}, "source.project_dbt.source_dwh_STRP.D_MERCHANTS_CURRENT": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "D_MERCHANTS_CURRENT", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.D_MERCHANTS_CURRENT", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "D_MERCHANTS_CURRENT"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "D_MERCHANTS_CURRENT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`D_MERCHANTS_CURRENT`", "created_at": 1728271772.7067041}, "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS_DECRYPTED": {"database": "pj-bu-dw-dwh-prod", "schema": "prd_data_warehouse_STRP", "name": "F_ACCOUNT_MOVEMENTS_DECRYPTED", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS_DECRYPTED", "fqn": ["project_dbt", "PST3", "mart", "source_dwh_STRP", "F_ACCOUNT_MOVEMENTS_DECRYPTED"], "source_name": "source_dwh_STRP", "source_description": "", "loader": "", "identifier": "F_ACCOUNT_MOVEMENTS_DECRYPTED", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dwh-prod`.`prd_data_warehouse_STRP`.`F_ACCOUNT_MOVEMENTS_DECRYPTED`", "created_at": 1728271772.706788}, "source.project_dbt.source_dm_PPST_BE.SCA_MAPPING_TABLE": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_BE", "name": "SCA_MAPPING_TABLE", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_BE.SCA_MAPPING_TABLE", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_BE", "SCA_MAPPING_TABLE"], "source_name": "source_dm_PPST_BE", "source_description": "", "loader": "", "identifier": "SCA_MAPPING_TABLE", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_BE`.`SCA_MAPPING_TABLE`", "created_at": 1728271772.7068756}, "source.project_dbt.source_dm_PPST_BE.PCP": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_BE", "name": "PCP", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_BE.PCP", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_BE", "PCP"], "source_name": "source_dm_PPST_BE", "source_description": "", "loader": "", "identifier": "PCP", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_BE`.`PCP`", "created_at": 1728271772.70696}, "source.project_dbt.source_dm_PPST_BE.PCP_ALBATROS_CMD_OCS": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_BE", "name": "PCP_ALBATROS_CMD_OCS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_BE.PCP_ALBATROS_CMD_OCS", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_BE", "PCP_ALBATROS_CMD_OCS"], "source_name": "source_dm_PPST_BE", "source_description": "", "loader": "", "identifier": "PCP_ALBATROS_CMD_OCS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_BE`.`PCP_ALBATROS_CMD_OCS`", "created_at": 1728271772.707044}, "source.project_dbt.source_dm_PPST_BE.PST3_MAPPING": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_BE", "name": "PST3_MAPPING", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_BE.PST3_MAPPING", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_BE", "PST3_MAPPING"], "source_name": "source_dm_PPST_BE", "source_description": "", "loader": "", "identifier": "PST3_MAPPING", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_BE`.`PST3_MAPPING`", "created_at": 1728271772.7071273}, "source.project_dbt.source_dm_PPST_BE.PCP_MERCHANT_ACCT_TRX": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_BE", "name": "PCP_MERCHANT_ACCT_TRX", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_BE.PCP_MERCHANT_ACCT_TRX", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_BE", "PCP_MERCHANT_ACCT_TRX"], "source_name": "source_dm_PPST_BE", "source_description": "", "loader": "", "identifier": "PCP_MERCHANT_ACCT_TRX", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_BE`.`PCP_MERCHANT_ACCT_TRX`", "created_at": 1728271772.707212}, "source.project_dbt.source_dm_PPST_BE.PCP_POS_ONLINE": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_BE", "name": "PCP_POS_ONLINE", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_BE.PCP_POS_ONLINE", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_BE", "PCP_POS_ONLINE"], "source_name": "source_dm_PPST_BE", "source_description": "", "loader": "", "identifier": "PCP_POS_ONLINE", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_BE`.`PCP_POS_ONLINE`", "created_at": 1728271772.7073045}, "source.project_dbt.source_dl_P1_PSTA.dwh_transaction_properties_current": {"database": "pj-bu-dw-dl-prod", "schema": "prd_datalake_P1_PSTA", "name": "dwh_transaction_properties_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dl_P1_PSTA.dwh_transaction_properties_current", "fqn": ["project_dbt", "PST3", "mart", "source_dl_P1_PSTA", "dwh_transaction_properties_current"], "source_name": "source_dl_P1_PSTA", "source_description": "", "loader": "", "identifier": "dwh_transaction_properties_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dl-prod`.`prd_datalake_P1_PSTA`.`dwh_transaction_properties_current`", "created_at": 1728271772.7073927}, "source.project_dbt.source_keyset__.merged": {"database": "pj-bu-dw-ks-prod", "schema": "prd_keysets", "name": "merged", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_keyset__.merged", "fqn": ["project_dbt", "PST3", "mart", "source_keyset__", "merged"], "source_name": "source_keyset__", "source_description": "", "loader": "", "identifier": "merged", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-ks-prod`.`prd_keysets`.`merged`", "created_at": 1728271772.7074773}, "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_IBIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PPST_PT", "name": "PAY_TROP_5845_IBIS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_IBIS", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_PT", "PAY_TROP_5845_IBIS"], "source_name": "source_dm_PPST_PT", "source_description": "", "loader": "", "identifier": "PAY_TROP_5845_IBIS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PPST_PT`.`PAY_TROP_5845_IBIS`", "created_at": 1728271772.7075613}, "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_CMD": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PPST_PT", "name": "PAY_TROP_5845_CMD", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_CMD", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_PT", "PAY_TROP_5845_CMD"], "source_name": "source_dm_PPST_PT", "source_description": "", "loader": "", "identifier": "PAY_TROP_5845_CMD", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PPST_PT`.`PAY_TROP_5845_CMD`", "created_at": 1728271772.707645}, "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_PIS": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dm_pst3_PPST_PT", "name": "PAY_TROP_5845_PIS", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_PIS", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_PT", "PAY_TROP_5845_PIS"], "source_name": "source_dm_PPST_PT", "source_description": "", "loader": "", "identifier": "PAY_TROP_5845_PIS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dm_pst3_PPST_PT`.`PAY_TROP_5845_PIS`", "created_at": 1728271772.707729}, "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_FR", "name": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_FR", "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo"], "source_name": "source_dm_PPST_FR", "source_description": "", "loader": "", "identifier": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_FR`.`CT1_agMoyPaiTypeOpeCanalTransactZoneGeo`", "created_at": 1728271772.7078154}, "source.project_dbt.source_dm_PPST_FR.COUNTRIES": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_FR", "name": "COUNTRIES", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_FR.COUNTRIES", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_FR", "COUNTRIES"], "source_name": "source_dm_PPST_FR", "source_description": "", "loader": "", "identifier": "COUNTRIES", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_FR`.`COUNTRIES`", "created_at": 1728271772.7078996}, "source.project_dbt.source_dm_PPST_FR.MCC_CODES": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_FR", "name": "MCC_CODES", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_FR.MCC_CODES", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_FR", "MCC_CODES"], "source_name": "source_dm_PPST_FR", "source_description": "", "loader": "", "identifier": "MCC_CODES", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_FR`.`MCC_CODES`", "created_at": 1728271772.7079818}, "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals": {"database": "pj-bu-dw-dm-prod", "schema": "prd_data_mart_PPST_FR", "name": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "resource_type": "source", "package_name": "project_dbt", "path": "models/PST3/mart/source_tables.yml", "original_file_path": "models/PST3/mart/source_tables.yml", "unique_id": "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "fqn": ["project_dbt", "PST3", "mart", "source_dm_PPST_FR", "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals"], "source_name": "source_dm_PPST_FR", "source_description": "", "loader": "", "identifier": "CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-dm-prod`.`prd_data_mart_PPST_FR`.`CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals`", "created_at": 1728271772.7080653}, "source.project_dbt.dwh_strh.D_AUTHORIZED_PERSON": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "D_AUTHORIZED_PERSON", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/warehouse/dwh_strh_source.yml", "original_file_path": "models/STRH/warehouse/dwh_strh_source.yml", "unique_id": "source.project_dbt.dwh_strh.D_AUTHORIZED_PERSON", "fqn": ["project_dbt", "STRH", "warehouse", "dwh_strh", "D_AUTHORIZED_PERSON"], "source_name": "dwh_strh", "source_description": "", "loader": "", "identifier": "D_AUTHORIZED_PERSON", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_AUTHORIZED_PERSON`", "created_at": 1728271772.7081528}, "source.project_dbt.dwh_strh.D_ENTERPRISE": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "D_ENTERPRISE", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/warehouse/dwh_strh_source.yml", "original_file_path": "models/STRH/warehouse/dwh_strh_source.yml", "unique_id": "source.project_dbt.dwh_strh.D_ENTERPRISE", "fqn": ["project_dbt", "STRH", "warehouse", "dwh_strh", "D_ENTERPRISE"], "source_name": "dwh_strh", "source_description": "", "loader": "", "identifier": "D_ENTERPRISE", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_ENTERPRISE`", "created_at": 1728271772.7082367}, "source.project_dbt.dwh_strh.D_LEGAL_ENTITY": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dwh_view_cmd", "name": "D_LEGAL_ENTITY", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/warehouse/dwh_strh_source.yml", "original_file_path": "models/STRH/warehouse/dwh_strh_source.yml", "unique_id": "source.project_dbt.dwh_strh.D_LEGAL_ENTITY", "fqn": ["project_dbt", "STRH", "warehouse", "dwh_strh", "D_LEGAL_ENTITY"], "source_name": "dwh_strh", "source_description": "", "loader": "", "identifier": "D_LEGAL_ENTITY", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dwh_view_cmd`.`D_LEGAL_ENTITY`", "created_at": 1728271772.7083192}, "source.project_dbt.stg_dl_h3_hehe.public_Person_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "public_Person_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/staging/stg_strh_source.yml", "original_file_path": "models/STRH/staging/stg_strh_source.yml", "unique_id": "source.project_dbt.stg_dl_h3_hehe.public_Person_current", "fqn": ["project_dbt", "STRH", "staging", "stg_dl_h3_hehe", "public_Person_current"], "source_name": "stg_dl_h3_hehe", "source_description": "", "loader": "", "identifier": "public_Person_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_Person_current`", "created_at": 1728271772.7084217}, "source.project_dbt.stg_dl_h3_hehe.public_PersonAttribute_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hehe", "name": "public_PersonAttribute_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/staging/stg_strh_source.yml", "original_file_path": "models/STRH/staging/stg_strh_source.yml", "unique_id": "source.project_dbt.stg_dl_h3_hehe.public_PersonAttribute_current", "fqn": ["project_dbt", "STRH", "staging", "stg_dl_h3_hehe", "public_PersonAttribute_current"], "source_name": "stg_dl_h3_hehe", "source_description": "", "loader": "", "identifier": "public_PersonAttribute_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hehe`.`public_PersonAttribute_current`", "created_at": 1728271772.7085083}, "source.project_dbt.stg_dl_h3_hklc.public_tblKlantSysAttr_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "public_tblKlantSysAttr_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/staging/stg_strh_source.yml", "original_file_path": "models/STRH/staging/stg_strh_source.yml", "unique_id": "source.project_dbt.stg_dl_h3_hklc.public_tblKlantSysAttr_current", "fqn": ["project_dbt", "STRH", "staging", "stg_dl_h3_hklc", "public_tblKlantSysAttr_current"], "source_name": "stg_dl_h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlantSysAttr_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlantSysAttr_current`", "created_at": 1728271772.7085958}, "source.project_dbt.stg_dl_h3_hklc.public_tblSysteemAttribuut_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "public_tblSysteemAttribuut_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/staging/stg_strh_source.yml", "original_file_path": "models/STRH/staging/stg_strh_source.yml", "unique_id": "source.project_dbt.stg_dl_h3_hklc.public_tblSysteemAttribuut_current", "fqn": ["project_dbt", "STRH", "staging", "stg_dl_h3_hklc", "public_tblSysteemAttribuut_current"], "source_name": "stg_dl_h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblSysteemAttribuut_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblSysteemAttribuut_current`", "created_at": 1728271772.7086802}, "source.project_dbt.stg_dl_h3_hklc.public_tblLand_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "public_tblLand_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/staging/stg_strh_source.yml", "original_file_path": "models/STRH/staging/stg_strh_source.yml", "unique_id": "source.project_dbt.stg_dl_h3_hklc.public_tblLand_current", "fqn": ["project_dbt", "STRH", "staging", "stg_dl_h3_hklc", "public_tblLand_current"], "source_name": "stg_dl_h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblLand_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblLand_current`", "created_at": 1728271772.708764}, "source.project_dbt.stg_dl_h3_hklc.public_tblKlant_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hklc", "name": "public_tblKlant_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/staging/stg_strh_source.yml", "original_file_path": "models/STRH/staging/stg_strh_source.yml", "unique_id": "source.project_dbt.stg_dl_h3_hklc.public_tblKlant_current", "fqn": ["project_dbt", "STRH", "staging", "stg_dl_h3_hklc", "public_tblKlant_current"], "source_name": "stg_dl_h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlant_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hklc`.`public_tblKlant_current`", "created_at": 1728271772.7088501}, "source.project_dbt.stg_dl_h3_hkvk.public_RequestCache_current": {"database": "pj-bu-dw-data-sbx", "schema": "dev_dl_h3_hkvk", "name": "public_RequestCache_current", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/staging/stg_strh_source.yml", "original_file_path": "models/STRH/staging/stg_strh_source.yml", "unique_id": "source.project_dbt.stg_dl_h3_hkvk.public_RequestCache_current", "fqn": ["project_dbt", "STRH", "staging", "stg_dl_h3_hkvk", "public_RequestCache_current"], "source_name": "stg_dl_h3_hkvk", "source_description": "", "loader": "", "identifier": "public_RequestCache_current", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_dl_h3_hkvk`.`public_RequestCache_current`", "created_at": 1728271772.7089345}, "source.project_dbt.h1_hkvk.public_RequestCache": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_RequestCache", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h1_hkvk.public_RequestCache", "fqn": ["project_dbt", "STRH", "datalake", "h1_hkvk", "public_RequestCache"], "source_name": "h1_hkvk", "source_description": "", "loader": "", "identifier": "public_RequestCache", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_RequestCache`", "created_at": 1728271772.7090218}, "source.project_dbt.h3_hklc.public_aselect_loginhistory": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_aselect_loginhistory", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_aselect_loginhistory", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_aselect_loginhistory"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_aselect_loginhistory", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_aselect_loginhistory`", "created_at": 1728271772.7091079}, "source.project_dbt.h3_hklc.public_DA_relation": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_DA_relation", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_DA_relation", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relation"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_DA_relation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_DA_relation`", "created_at": 1728271772.7091918}, "source.project_dbt.h3_hklc.public_DA_relation_audit": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_DA_relation_audit", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_DA_relation_audit", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relation_audit"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_DA_relation_audit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_DA_relation_audit`", "created_at": 1728271772.709276}, "source.project_dbt.h3_hklc.public_DA_relationrole": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_DA_relationrole", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_DA_relationrole", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_DA_relationrole"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_DA_relationrole", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_DA_relationrole`", "created_at": 1728271772.7093604}, "source.project_dbt.h3_hklc.public_tblAbonnement": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblAbonnement", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblAbonnement", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblAbonnement"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblAbonnement", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblAbonnement`", "created_at": 1728271772.7094426}, "source.project_dbt.h3_hklc.public_tblAbonnementType": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblAbonnementType", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblAbonnementType", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblAbonnementType"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblAbonnementType", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblAbonnementType`", "created_at": 1728271772.7095263}, "source.project_dbt.h3_hklc.public_tblDienst": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblDienst", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblDienst", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblDienst"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblDienst", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblDienst`", "created_at": 1728271772.7096097}, "source.project_dbt.h3_hklc.public_tblDienstType": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblDienstType", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblDienstType", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblDienstType"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblDienstType", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblDienstType`", "created_at": 1728271772.7096937}, "source.project_dbt.h3_hklc.public_tblFactType": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblFactType", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblFactType", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblFactType"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblFactType", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblFactType`", "created_at": 1728271772.7097776}, "source.project_dbt.h3_hklc.public_tblGrootboek": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblGrootboek", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblGrootboek", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblGrootboek"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblGrootboek", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblGrootboek`", "created_at": 1728271772.7098627}, "source.project_dbt.h3_hklc.public_tblKlant": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblKlant", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblKlant", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlant"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlant", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblKlant`", "created_at": 1728271772.709949}, "source.project_dbt.h3_hklc.public_tblKlantAbonnement": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblKlantAbonnement", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblKlantAbonnement", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnement"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlantAbonnement", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblKlantAbonnement`", "created_at": 1728271772.710033}, "source.project_dbt.h3_hklc.public_tblKlantAbonnementGebruik": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblKlantAbonnementGebruik", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblKlantAbonnementGebruik", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnementGebruik"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlantAbonnementGebruik", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblKlantAbonnementGebruik`", "created_at": 1728271772.7101173}, "source.project_dbt.h3_hklc.public_tblKlantAbonnementSysAttr": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblKlantAbonnementSysAttr", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblKlantAbonnementSysAttr", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantAbonnementSysAttr"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlantAbonnementSysAttr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblKlantAbonnementSysAttr`", "created_at": 1728271772.7102015}, "source.project_dbt.h3_hklc.public_tblKlantBankMachtiging": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblKlantBankMachtiging", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblKlantBankMachtiging", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantBankMachtiging"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlantBankMachtiging", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblKlantBankMachtiging`", "created_at": 1728271772.7102842}, "source.project_dbt.h3_hklc.public_tblKlantDienst": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblKlantDienst", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblKlantDienst", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantDienst"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlantDienst", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblKlantDienst`", "created_at": 1728271772.7103674}, "source.project_dbt.h3_hklc.public_tblKlantSysAttr": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblKlantSysAttr", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblKlantSysAttr", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblKlantSysAttr"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblKlantSysAttr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblKlantSysAttr`", "created_at": 1728271772.710451}, "source.project_dbt.h3_hklc.public_tblLand": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblLand", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblLand", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblLand"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblLand", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblLand`", "created_at": 1728271772.7105339}, "source.project_dbt.h3_hklc.public_tblOrganisatie": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblOrganisatie", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblOrganisatie", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblOrganisatie"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblOrganisatie", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblOrganisatie`", "created_at": 1728271772.7106168}, "source.project_dbt.h3_hklc.public_tblSysteemAttribuut": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblSysteemAttribuut", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblSysteemAttribuut", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblSysteemAttribuut"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblSysteemAttribuut", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblSysteemAttribuut`", "created_at": 1728271772.710699}, "source.project_dbt.h3_hklc.public_tblBTW": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_tblBTW", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hklc.public_tblBTW", "fqn": ["project_dbt", "STRH", "datalake", "h3_hklc", "public_tblBTW"], "source_name": "h3_hklc", "source_description": "", "loader": "", "identifier": "public_tblBTW", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_tblBTW`", "created_at": 1728271772.7107825}, "source.project_dbt.h3_hehe.public_AuditAuthenticationSet": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_AuditAuthenticationSet", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_AuditAuthenticationSet", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuditAuthenticationSet"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_AuditAuthenticationSet", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_AuditAuthenticationSet`", "created_at": 1728271772.7108674}, "source.project_dbt.h3_hehe.public_AuthenticationSet": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_AuthenticationSet", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_AuthenticationSet", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuthenticationSet"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_AuthenticationSet", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_AuthenticationSet`", "created_at": 1728271772.7109504}, "source.project_dbt.h3_hehe.public_AuthorizationSubject": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_AuthorizationSubject", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_AuthorizationSubject", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_AuthorizationSubject"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_AuthorizationSubject", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_AuthorizationSubject`", "created_at": 1728271772.7110333}, "source.project_dbt.h3_hehe.public_ChainAuthorization": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_ChainAuthorization", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_ChainAuthorization", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainAuthorization"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_ChainAuthorization", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_ChainAuthorization`", "created_at": 1728271772.7111177}, "source.project_dbt.h3_hehe.public_ChainAuthorizationService": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_ChainAuthorizationService", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_ChainAuthorizationService", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainAuthorizationService"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_ChainAuthorizationService", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_ChainAuthorizationService`", "created_at": 1728271772.7112024}, "source.project_dbt.h3_hehe.public_ChainedOrganisation": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_ChainedOrganisation", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_ChainedOrganisation", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ChainedOrganisation"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_ChainedOrganisation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_ChainedOrganisation`", "created_at": 1728271772.7112844}, "source.project_dbt.h3_hehe.public_Group": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_Group", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_Group", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Group"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_Group", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_Group`", "created_at": 1728271772.7113667}, "source.project_dbt.h3_hehe.public_GroupUser": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_GroupUser", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_GroupUser", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_GroupUser"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_GroupUser", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_GroupUser`", "created_at": 1728271772.7114496}, "source.project_dbt.h3_hehe.public_IntermediateAuthorizationService": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_IntermediateAuthorizationService", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_IntermediateAuthorizationService", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_IntermediateAuthorizationService"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_IntermediateAuthorizationService", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_IntermediateAuthorizationService`", "created_at": 1728271772.711532}, "source.project_dbt.h3_hehe.public_Organisation": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_Organisation", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_Organisation", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Organisation"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_Organisation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_Organisation`", "created_at": 1728271772.7116168}, "source.project_dbt.h3_hehe.public_Person": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_Person", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_Person", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Person"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_Person", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_Person`", "created_at": 1728271772.7117004}, "source.project_dbt.h3_hehe.public_PersonAttribute": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_PersonAttribute", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_PersonAttribute", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonAttribute"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_PersonAttribute", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_PersonAttribute`", "created_at": 1728271772.7117822}, "source.project_dbt.h3_hehe.public_PersonOrganisationLink": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_PersonOrganisationLink", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_PersonOrganisationLink", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonOrganisationLink"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_PersonOrganisationLink", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_PersonOrganisationLink`", "created_at": 1728271772.7121346}, "source.project_dbt.h3_hehe.public_PersonOrganisationRole": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_PersonOrganisationRole", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_PersonOrganisationRole", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonOrganisationRole"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_PersonOrganisationRole", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_PersonOrganisationRole`", "created_at": 1728271772.7122445}, "source.project_dbt.h3_hehe.public_PersonUsageTransactions": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_PersonUsageTransactions", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_PersonUsageTransactions", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_PersonUsageTransactions"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_PersonUsageTransactions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_PersonUsageTransactions`", "created_at": 1728271772.7123363}, "source.project_dbt.h3_hehe.public_ServiceAuthorization_1_13": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_ServiceAuthorization_1_13", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_ServiceAuthorization_1_13", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ServiceAuthorization_1_13"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_ServiceAuthorization_1_13", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_ServiceAuthorization_1_13`", "created_at": 1728271772.712427}, "source.project_dbt.h3_hehe.public_Urn": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_Urn", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_Urn", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Urn"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_Urn", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_Urn`", "created_at": 1728271772.7125158}, "source.project_dbt.h3_hehe.public_ISO_Country": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_ISO_Country", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_ISO_Country", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ISO_Country"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_ISO_Country", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_ISO_Country`", "created_at": 1728271772.7126052}, "source.project_dbt.h3_hehe.public_RegistrationLevel": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_RegistrationLevel", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_RegistrationLevel", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_RegistrationLevel"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_RegistrationLevel", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_RegistrationLevel`", "created_at": 1728271772.7126932}, "source.project_dbt.h3_hehe.public_Roles": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_Roles", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_Roles", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Roles"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_Roles", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_Roles`", "created_at": 1728271772.7127805}, "source.project_dbt.h3_hehe.public_Service": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_Service", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_Service", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_Service"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_Service", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_Service`", "created_at": 1728271772.7128747}, "source.project_dbt.h3_hehe.public_ServiceProvider": {"database": "pj-bu-dw-data-sbx", "schema": "dev_lake_view_cmd", "name": "public_ServiceProvider", "resource_type": "source", "package_name": "project_dbt", "path": "models/STRH/datalake/dl_eID_source.yml", "original_file_path": "models/STRH/datalake/dl_eID_source.yml", "unique_id": "source.project_dbt.h3_hehe.public_ServiceProvider", "fqn": ["project_dbt", "STRH", "datalake", "h3_hehe", "public_ServiceProvider"], "source_name": "h3_hehe", "source_description": "", "loader": "", "identifier": "public_ServiceProvider", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`pj-bu-dw-data-sbx`.`dev_lake_view_cmd`.`public_ServiceProvider`", "created_at": 1728271772.7129629}}, "macros": {"macro.project_dbt.last_day_of_month": {"name": "last_day_of_month", "resource_type": "macro", "package_name": "project_dbt", "path": "macros/PST3_time_period.sql", "original_file_path": "macros/PST3_time_period.sql", "unique_id": "macro.project_dbt.last_day_of_month", "macro_sql": "{% macro last_day_of_month(any_day) %}\n    {% set next_month = any_day.replace(day=28) + modules.datetime.timedelta(days=4) %}\n    # subtracting the number of the current day brings us back one month\n    {{ return (next_month - modules.datetime.timedelta(days=next_month.day)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.651363, "supported_languages": null}, "macro.project_dbt.period_calculate": {"name": "period_calculate", "resource_type": "macro", "package_name": "project_dbt", "path": "macros/PST3_time_period.sql", "original_file_path": "macros/PST3_time_period.sql", "unique_id": "macro.project_dbt.period_calculate", "macro_sql": "{% macro period_calculate(time, selection_date=\"today\", prefix=\"\", suffix=\"\") %}\n    {%- set period = \"\" %}\n    {%- set begin_date = \"\" %}\n    {%- set end_date = \"\" %}\n    {%- if time == \"semesterly\" %}\n        {%- if selection_date == \"today\" %}\n            {% set selection_date = modules.datetime.datetime.now() - modules.datetime.timedelta(days=6*30) %}\n        {%- else %}\n            {% set selection_date = modules.datetime.datetime.strptime(selection_date, \"%Y-%m-%d\").date() %}\n        {%- endif %}\n\n        {%- if selection_date.month <= 6 %}\n            {% set semester = \"1\" %}\n        {%- else %}\n            {% set semester = \"2\" %}\n        {%- endif %}\n\n        {%- if semester == \"1\" %}\n            {% set begin_date = selection_date.replace(day=1, month=1).strftime(\"%Y-%m-%d\") %}\n            {% set end_date = selection_date.replace(day=30, month=6).strftime(\"%Y-%m-%d\") %}\n        {%- else %}\n            {% set begin_date = selection_date.replace(day=1, month=7, year=selection_date.year).strftime(\"%Y-%m-%d\") %}\n            {% set end_date = selection_date.replace(day=31, month=12, year=selection_date.year).strftime(\"%Y-%m-%d\") %}\n        {%- endif %}\n        {% set period = prefix + selection_date.year| string() + suffix + semester %}\n    {%- endif %}\n\n    {%- if time == \"daily\" %}\n        {%- if selection_date == \"today\" %}\n            {% set selection_date = modules.datetime.datetime.now() %}\n        {%- else %}\n            {% set selection_date = modules.datetime.datetime.strptime(selection_date, \"%Y-%m-%d\").date() %}\n        {%- endif %}\n        {% set begin_date = (selection_date - modules.datetime.timedelta(days=1)).strftime(\"%Y-%m-%d\") %}\n        {% set end_date = selection_date.strftime(\"%Y-%m-%d\") %}\n        {% set period = prefix + selection_date.year| string() + suffix %}\n    {%- endif %}\n    {%- if time == \"monthly\" %}\n         {%- if selection_date == \"today\" %}\n            {% set selection_date = modules.datetime.datetime.now() %}\n        {%- else %}\n            {% set selection_date = modules.datetime.datetime.strptime(selection_date, \"%Y-%m-%d\").date() %}\n        {%- endif %}\n\n        {% set begin_date = selection_date.replace(day=1) %}\n        {% set end_date = last_day_of_month(selection_date) %}\n        {% set period = prefix + begin_date.year| string() + suffix + (begin_date.strftime(\"%m\")) %}\n    {%- endif %}\n    {%- if time == \"quarterly\" %}\n        {%- if selection_date == \"today\" %}\n            {% set selection_date = modules.datetime.datetime.now() %}\n        {%- else %}\n            {% set selection_date = modules.datetime.datetime.strptime(selection_date, \"%Y-%m-%d\").date() %}\n        {%- endif %}\n\n        {%- if selection_date.month <= 3 %}\n            {% set begin_date = selection_date.replace( day=1, month=10, year=selection_date.year - 1).strftime(\"%Y-%m-%d\") %}\n            {% set end_date = selection_date.replace( day=31, month=12, year=selection_date.year - 1).strftime(\"%Y-%m-%d\") %}\n            {% set quarter = 4 %}\n            {% set period = prefix + (selection_date.year - 1)| string() + suffix + quarter| string() %}\n        {%- elif selection_date.month <= 6 %}\n            {% set begin_date = selection_date.replace( day=1, month=1 ).strftime(\"%Y-%m-%d\") %}\n            {% set end_date = selection_date.replace( day=31, month=3).strftime(\"%Y-%m-%d\") %}\n            {% set quarter = 1 %}\n            {% set period = prefix + (selection_date.year)| string() + suffix + quarter| string() %}\n        {%- elif selection_date.month <= 9 %}\n            {% set begin_date = selection_date.replace( day=1, month=4 ).strftime(\"%Y-%m-%d\") %}\n            {% set end_date = selection_date.replace( day=30, month=6).strftime(\"%Y-%m-%d\") %}\n            {% set quarter = 2 %}\n            {% set period = prefix + (selection_date.year)| string() + suffix + quarter| string() %}\n        {%- elif selection_date.month <= 12 %}\n            {% set begin_date = selection_date.replace( day=1, month=7 ).strftime(\"%Y-%m-%d\") %}\n            {% set end_date = selection_date.replace( day=30, month=9).strftime(\"%Y-%m-%d\") %}\n            {% set quarter = 3 %}\n            {% set period = prefix + (selection_date.year)| string() + suffix + quarter| string() %}\n        {%- endif %}\n    {%- endif %}\n    {%- if time == \"yearly\" %}    \n        {%- if selection_date == \"today\" %}\n            {% set selection_date = modules.datetime.datetime.now() %}\n        {%- else %}\n            {% set selection_date = modules.datetime.datetime.strptime(selection_date, \"%Y-%m-%d\").date() %}\n        {%- endif %}\n        {% set begin_date = selection_date.replace( day=1, month=1, year=selection_date.year - 1 ).strftime(\"%Y-%m-%d\") %}\n        {% set end_date = selection_date.replace( day=31, month=12, year=selection_date.year - 1).strftime(\"%Y-%m-%d\") %}\n        {% set period = prefix + (selection_date.year -1 )| string() + suffix %}\n    {%- endif %}\n    {%- if time == \"weekly\" %}\n        {%- if selection_date == \"today\" %}\n            {% set selection_date = modules.datetime.datetime.now() %}\n        {%- else %}\n            {% set selection_date = modules.datetime.datetime.strptime(selection_date, \"%Y-%m-%d\").date() %}\n        {%- endif %}\n        {% set begin_date = selection_date - modules.datetime.timedelta(days=selection_date.weekday()) %}\n        {% set end_date = begin_date + modules.datetime.timedelta(days=6) %}\n        {% set period = prefix + (selection_date.year)| string() + suffix + begin_date.strftime(\"%W\")| string()  %}\n        {% set begin_date = begin_date.strftime(\"%Y-%m-%d\") %}\n        {% set end_date = end_date.strftime(\"%Y-%m-%d\") %}\n    {%- endif %}  \n    {{ return({\"period\":period,\"begin_date\":begin_date,\"end_date\":end_date }) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.project_dbt.last_day_of_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.659054, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_table_as": {"name": "bigquery__create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_table_as", "macro_sql": "{% macro bigquery__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- if language == 'sql' -%}\n    {%- set raw_partition_by = config.get('partition_by', none) -%}\n    {%- set raw_cluster_by = config.get('cluster_by', none) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n    {%- if partition_config.time_ingestion_partitioning -%}\n    {%- set columns = get_columns_with_types_in_query_sql(sql) -%}\n    {%- set table_dest_columns_csv = columns_without_partition_fields_csv(partition_config, columns) -%}\n    {%- set columns = '(' ~ table_dest_columns_csv ~ ')' -%}\n    {%- endif -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    create or replace table {{ relation }}\n      {%- set contract_config = config.get('contract') -%}\n      {%- if contract_config.enforced -%}\n        {{ get_assert_columns_equivalent(compiled_code) }}\n        {{ get_table_columns_and_constraints() }}\n        {%- set compiled_code = get_select_subquery(compiled_code) %}\n      {% else %}\n        {#-- cannot do contracts at the same time as time ingestion partitioning -#}\n        {{ columns }}\n      {% endif %}\n    {{ partition_by(partition_config) }}\n    {{ cluster_by(raw_cluster_by) }}\n\n    {{ bigquery_table_options(config, model, temporary) }}\n\n    {#-- PARTITION BY cannot be used with the AS query_statement clause.\n         https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#partition_expression\n    -#}\n    {%- if not partition_config.time_ingestion_partitioning %}\n    as (\n      {{ compiled_code }}\n    );\n    {%- endif %}\n  {%- elif language == 'python' -%}\n    {#--\n    N.B. Python models _can_ write to temp views HOWEVER they use a different session\n    and have already expired by the time they need to be used (I.E. in merges for incremental models)\n\n    TODO: Deep dive into spark sessions to see if we can reuse a single session for an entire\n    dbt invocation.\n     --#}\n\n    {#-- when a user wants to change the schema of an existing relation, they must intentionally drop the table in the dataset --#}\n    {%- set old_relation = adapter.get_relation(database=relation.database, schema=relation.schema, identifier=relation.identifier) -%}\n    {%- if (old_relation.is_table and (should_full_refresh())) -%}\n      {% do adapter.drop_relation(relation) %}\n    {%- endif -%}\n    {{ py_write_table(compiled_code=compiled_code, target_relation=relation.quote(database=False, schema=False, identifier=False)) }}\n  {%- else -%}\n    {% do exceptions.raise_compiler_error(\"bigquery__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_table_options", "macro.dbt.should_full_refresh", "macro.dbt_bigquery.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6632948, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_view_as": {"name": "bigquery__create_view_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_view_as", "macro_sql": "{% macro bigquery__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace view {{ relation }}\n  {{ bigquery_view_options(config, model) }}\n  {%- set contract_config = config.get('contract') -%}\n  {%- if contract_config.enforced -%}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  as {{ sql }};\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_view_options", "macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6638315, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_schema": {"name": "bigquery__drop_schema", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_schema", "macro_sql": "{% macro bigquery__drop_schema(relation) -%}\n  {{ adapter.drop_schema(relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6639876, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_columns_in_relation": {"name": "bigquery__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_columns_in_relation", "macro_sql": "{% macro bigquery__get_columns_in_relation(relation) -%}\n  {{ return(adapter.get_columns_in_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.664152, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_relations_without_caching": {"name": "bigquery__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_relations_without_caching", "macro_sql": "{% macro bigquery__list_relations_without_caching(schema_relation) -%}\n  {{ return(adapter.list_relations_without_caching(schema_relation)) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6643114, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_schemas": {"name": "bigquery__list_schemas", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_schemas", "macro_sql": "{% macro bigquery__list_schemas(database) -%}\n  {{ return(adapter.list_schemas(database)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6644726, "supported_languages": null}, "macro.dbt_bigquery.bigquery__check_schema_exists": {"name": "bigquery__check_schema_exists", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__check_schema_exists", "macro_sql": "{% macro bigquery__check_schema_exists(information_schema, schema) %}\n  {{ return(adapter.check_schema_exists(information_schema.database, schema)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6646676, "supported_languages": null}, "macro.dbt_bigquery.bigquery__persist_docs": {"name": "bigquery__persist_docs", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__persist_docs", "macro_sql": "{% macro bigquery__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do alter_column_comment(relation, model.columns) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6649668, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_comment": {"name": "bigquery__alter_column_comment", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_comment", "macro_sql": "{% macro bigquery__alter_column_comment(relation, column_dict) -%}\n  {% do adapter.update_columns(relation, column_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6651404, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_add_columns": {"name": "bigquery__alter_relation_add_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_add_columns", "macro_sql": "{% macro bigquery__alter_relation_add_columns(relation, add_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n        {% for column in add_columns %}\n          add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.665586, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_drop_columns": {"name": "bigquery__alter_relation_drop_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_drop_columns", "macro_sql": "{% macro bigquery__alter_relation_drop_columns(relation, drop_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n        {% for column in drop_columns %}\n          drop column {{ column.name }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6660001, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_type": {"name": "bigquery__alter_column_type", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_type", "macro_sql": "{% macro bigquery__alter_column_type(relation, column_name, new_column_type) -%}\n  {#-- Changing a column's data type using a query requires you to scan the entire table.\n    The query charges can be significant if the table is very large.\n\n    https://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\n  #}\n  {% set relation_columns = get_columns_in_relation(relation) %}\n\n  {% set sql %}\n    select\n      {%- for col in relation_columns -%}\n        {% if col.column == column_name %}\n          CAST({{ col.quoted }} AS {{ new_column_type }}) AS {{ col.quoted }}\n        {%- else %}\n          {{ col.quoted }}\n        {%- endif %}\n        {%- if not loop.last %},{% endif -%}\n      {%- endfor %}\n    from {{ relation }}\n  {% endset %}\n\n  {% call statement('alter_column_type') %}\n    {{ create_table_as(False, relation, sql)}}\n  {%- endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_relation", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6667297, "supported_languages": null}, "macro.dbt_bigquery.bigquery__test_unique": {"name": "bigquery__test_unique", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__test_unique", "macro_sql": "{% macro bigquery__test_unique(model, column_name) %}\n\nwith dbt_test__target as (\n\n  select {{ column_name }} as unique_field\n  from {{ model }}\n  where {{ column_name }} is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6669197, "supported_languages": null}, "macro.dbt_bigquery.bigquery__upload_file": {"name": "bigquery__upload_file", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__upload_file", "macro_sql": "{% macro bigquery__upload_file(local_file_path, database, table_schema, table_name) %}\n\n  {{ log(\"kwargs: \" ~ kwargs) }}\n\n  {% do adapter.upload_file(local_file_path, database, table_schema, table_name, kwargs=kwargs) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6672292, "supported_languages": null}, "macro.dbt_bigquery.date_sharded_table": {"name": "date_sharded_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.date_sharded_table", "macro_sql": "{% macro date_sharded_table(base_name) %}\n    {{ return(base_name ~ \"[DBT__PARTITION_DATE]\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.667539, "supported_languages": null}, "macro.dbt_bigquery.grant_access_to": {"name": "grant_access_to", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.grant_access_to", "macro_sql": "{% macro grant_access_to(entity, entity_type, role, grant_target_dict) -%}\n  {% do adapter.grant_access_to(entity, entity_type, role, grant_target_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6677594, "supported_languages": null}, "macro.dbt_bigquery.get_partitions_metadata": {"name": "get_partitions_metadata", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.get_partitions_metadata", "macro_sql": "\n\n{%- macro get_partitions_metadata(table) -%}\n  {%- if execute -%}\n    {%- set res = adapter.get_partitions_metadata(table) -%}\n    {{- return(res) -}}\n  {%- endif -%}\n  {{- return(None) -}}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6680508, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_catalog_relations": {"name": "bigquery__get_catalog_relations", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/by_relation.sql", "original_file_path": "macros/catalog/by_relation.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_catalog_relations", "macro_sql": "{% macro bigquery__get_catalog_relations(information_schema, relations) -%}\n\n    {%- if (relations | length) == 0 -%}\n        {# Hopefully nothing cares about the columns we return when there are no rows #}\n        {%- set query = \"select 1 as id limit 0\" -%}\n\n    {%- else -%}\n        {%- set query -%}\n            with\n                table_shards_stage as ({{ _bigquery__get_table_shards_sql(information_schema) }}),\n                table_shards as (\n                    select * from table_shards_stage\n                    where (\n                        {%- for relation in relations -%}\n                            (\n                                upper(table_schema) = upper('{{ relation.schema }}')\n                            and upper(table_name) = upper('{{ relation.identifier }}')\n                            )\n                            {%- if not loop.last %} or {% endif -%}\n                        {%- endfor -%}\n                    )\n                ),\n                tables as ({{ _bigquery__get_tables_sql() }}),\n                table_stats as ({{ _bigquery__get_table_stats_sql() }}),\n\n                columns as ({{ _bigquery__get_columns_sql(information_schema) }}),\n                column_stats as ({{ _bigquery__get_column_stats_sql() }})\n\n            {{ _bigquery__get_extended_catalog_sql() }}\n        {%- endset -%}\n\n    {%- endif -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery._bigquery__get_table_shards_sql", "macro.dbt_bigquery._bigquery__get_tables_sql", "macro.dbt_bigquery._bigquery__get_table_stats_sql", "macro.dbt_bigquery._bigquery__get_columns_sql", "macro.dbt_bigquery._bigquery__get_column_stats_sql", "macro.dbt_bigquery._bigquery__get_extended_catalog_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6694083, "supported_languages": null}, "macro.dbt_bigquery._bigquery__get_table_shards_sql": {"name": "_bigquery__get_table_shards_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/catalog.sql", "original_file_path": "macros/catalog/catalog.sql", "unique_id": "macro.dbt_bigquery._bigquery__get_table_shards_sql", "macro_sql": "{% macro _bigquery__get_table_shards_sql(information_schema) %}\n    select\n        tables.project_id as table_catalog,\n        tables.dataset_id as table_schema,\n        coalesce(REGEXP_EXTRACT(tables.table_id, '^(.+)[0-9]{8}$'), tables.table_id) as table_name,\n        tables.table_id as shard_name,\n        REGEXP_EXTRACT(tables.table_id, '^.+([0-9]{8})$') as shard_index,\n        REGEXP_CONTAINS(tables.table_id, '^.+[0-9]{8}$') and tables.type = 1 as is_date_shard,\n        case\n            when materialized_views.table_name is not null then 'materialized view'\n            when tables.type = 1 then 'table'\n            when tables.type = 2 then 'view'\n            else 'external'\n        end as table_type,\n        tables.type = 1 as is_table,\n        JSON_VALUE(table_description.option_value) as table_comment,\n        tables.size_bytes,\n        tables.row_count\n    from {{ information_schema.replace(information_schema_view='__TABLES__') }} tables\n    left join {{ information_schema.replace(information_schema_view='MATERIALIZED_VIEWS') }} materialized_views\n        on materialized_views.table_catalog = tables.project_id\n        and materialized_views.table_schema = tables.dataset_id\n        and materialized_views.table_name = tables.table_id\n    left join {{ information_schema.replace(information_schema_view='TABLE_OPTIONS') }} table_description\n        on table_description.table_catalog = tables.project_id\n        and table_description.table_schema = tables.dataset_id\n        and table_description.table_name = tables.table_id\n        and table_description.option_name = 'description'\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6720345, "supported_languages": null}, "macro.dbt_bigquery._bigquery__get_tables_sql": {"name": "_bigquery__get_tables_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/catalog.sql", "original_file_path": "macros/catalog/catalog.sql", "unique_id": "macro.dbt_bigquery._bigquery__get_tables_sql", "macro_sql": "{% macro _bigquery__get_tables_sql() %}\n    select distinct\n        table_catalog,\n        table_schema,\n        table_name,\n        is_date_shard,\n        table_type,\n        is_table,\n        table_comment\n    from table_shards\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6721444, "supported_languages": null}, "macro.dbt_bigquery._bigquery__get_table_stats_sql": {"name": "_bigquery__get_table_stats_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/catalog.sql", "original_file_path": "macros/catalog/catalog.sql", "unique_id": "macro.dbt_bigquery._bigquery__get_table_stats_sql", "macro_sql": "{% macro _bigquery__get_table_stats_sql() %}\n    select\n        table_catalog,\n        table_schema,\n        table_name,\n        max(shard_name) as latest_shard_name,\n        min(shard_index) as shard_min,\n        max(shard_index) as shard_max,\n        count(shard_index) as shard_count,\n        sum(size_bytes) as size_bytes,\n        sum(row_count) as row_count\n    from table_shards\n    group by 1, 2, 3\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6722527, "supported_languages": null}, "macro.dbt_bigquery._bigquery__get_columns_sql": {"name": "_bigquery__get_columns_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/catalog.sql", "original_file_path": "macros/catalog/catalog.sql", "unique_id": "macro.dbt_bigquery._bigquery__get_columns_sql", "macro_sql": "{% macro _bigquery__get_columns_sql(information_schema) %}\n    select\n        columns.table_catalog,\n        columns.table_schema,\n        columns.table_name as shard_name,\n        coalesce(paths.field_path, '<unknown>') as column_name,\n        -- invent a row number to account for nested fields\n        -- BQ does not treat these nested properties as independent fields\n        row_number() over (\n            partition by\n                columns.table_catalog,\n                columns.table_schema,\n                columns.table_name\n            order by\n                columns.ordinal_position,\n                paths.field_path\n        ) as column_index,\n        coalesce(paths.data_type, '<unknown>') as column_type,\n        paths.description as column_comment,\n        case when columns.is_partitioning_column = 'YES' then 1 else 0 end as is_partitioning_column,\n        case when columns.is_partitioning_column = 'YES' then paths.field_path end as partition_column,\n        case when columns.clustering_ordinal_position is not null then 1 else 0 end as is_clustering_column,\n        case when columns.clustering_ordinal_position is not null then paths.field_path end as cluster_column,\n        columns.clustering_ordinal_position\n    from {{ information_schema.replace(information_schema_view='COLUMNS') }} columns\n    join {{ information_schema.replace(information_schema_view='COLUMN_FIELD_PATHS') }} paths\n        on paths.table_catalog = columns.table_catalog\n        and paths.table_schema = columns.table_schema\n        and paths.table_name = columns.table_name\n        and paths.column_name = columns.column_name\n    where columns.ordinal_position is not null\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6725442, "supported_languages": null}, "macro.dbt_bigquery._bigquery__get_column_stats_sql": {"name": "_bigquery__get_column_stats_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/catalog.sql", "original_file_path": "macros/catalog/catalog.sql", "unique_id": "macro.dbt_bigquery._bigquery__get_column_stats_sql", "macro_sql": "{% macro _bigquery__get_column_stats_sql() %}\n    select\n        table_catalog,\n        table_schema,\n        shard_name,\n        max(is_partitioning_column) = 1 as is_partitioned,\n        max(partition_column) as partition_column,\n        max(is_clustering_column) = 1 as is_clustered,\n        array_to_string(\n            array_agg(\n                cluster_column ignore nulls\n                order by clustering_ordinal_position\n            ), ', '\n        ) as clustering_columns\n    from columns\n    group by 1, 2, 3\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6726592, "supported_languages": null}, "macro.dbt_bigquery._bigquery__get_extended_catalog_sql": {"name": "_bigquery__get_extended_catalog_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/catalog.sql", "original_file_path": "macros/catalog/catalog.sql", "unique_id": "macro.dbt_bigquery._bigquery__get_extended_catalog_sql", "macro_sql": "{% macro _bigquery__get_extended_catalog_sql() %}\n    select\n        tables.table_catalog as table_database,\n        tables.table_schema,\n        case\n            when tables.is_date_shard then concat(tables.table_name, '*')\n            else tables.table_name\n        end as table_name,\n        tables.table_type,\n        tables.table_comment,\n        -- coalesce column metadata fields to ensure they are non-null for catalog generation\n        -- external table columns are not present in COLUMN_FIELD_PATHS\n        coalesce(columns.column_name, '<unknown>') as column_name,\n        coalesce(columns.column_index, 1) as column_index,\n        coalesce(columns.column_type, '<unknown>') as column_type,\n        coalesce(columns.column_comment, '') as column_comment,\n\n        'Shard count' as `stats__date_shards__label`,\n        table_stats.shard_count as `stats__date_shards__value`,\n        'The number of date shards in this table' as `stats__date_shards__description`,\n        tables.is_date_shard as `stats__date_shards__include`,\n\n        'Shard (min)' as `stats__date_shard_min__label`,\n        table_stats.shard_min as `stats__date_shard_min__value`,\n        'The first date shard in this table' as `stats__date_shard_min__description`,\n        tables.is_date_shard as `stats__date_shard_min__include`,\n\n        'Shard (max)' as `stats__date_shard_max__label`,\n        table_stats.shard_max as `stats__date_shard_max__value`,\n        'The last date shard in this table' as `stats__date_shard_max__description`,\n        tables.is_date_shard as `stats__date_shard_max__include`,\n\n        '# Rows' as `stats__num_rows__label`,\n        table_stats.row_count as `stats__num_rows__value`,\n        'Approximate count of rows in this table' as `stats__num_rows__description`,\n        tables.is_table as `stats__num_rows__include`,\n\n        'Approximate Size' as `stats__num_bytes__label`,\n        table_stats.size_bytes as `stats__num_bytes__value`,\n        'Approximate size of table as reported by BigQuery' as `stats__num_bytes__description`,\n        tables.is_table as `stats__num_bytes__include`,\n\n        'Partitioned By' as `stats__partitioning_type__label`,\n        column_stats.partition_column as `stats__partitioning_type__value`,\n        'The partitioning column for this table' as `stats__partitioning_type__description`,\n        column_stats.is_partitioned as `stats__partitioning_type__include`,\n\n        'Clustered By' as `stats__clustering_fields__label`,\n        column_stats.clustering_columns as `stats__clustering_fields__value`,\n        'The clustering columns for this table' as `stats__clustering_fields__description`,\n        column_stats.is_clustered as `stats__clustering_fields__include`\n\n    from tables\n    join table_stats\n        on table_stats.table_catalog = tables.table_catalog\n        and table_stats.table_schema = tables.table_schema\n        and table_stats.table_name = tables.table_name\n    left join column_stats\n        on column_stats.table_catalog = tables.table_catalog\n        and column_stats.table_schema = tables.table_schema\n        and column_stats.shard_name = table_stats.latest_shard_name\n    left join columns\n        on columns.table_catalog = tables.table_catalog\n        and columns.table_schema = tables.table_schema\n        and columns.shard_name = table_stats.latest_shard_name\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6729114, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_catalog": {"name": "bigquery__get_catalog", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog/by_schema.sql", "original_file_path": "macros/catalog/by_schema.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_catalog", "macro_sql": "{% macro bigquery__get_catalog(information_schema, schemas) -%}\n\n    {%- if (schemas | length) == 0 -%}\n        {# Hopefully nothing cares about the columns we return when there are no rows #}\n        {%- set query = \"select 1 as id limit 0\" -%}\n\n    {%- else -%}\n        {%- set query -%}\n            with\n                table_shards as (\n                    {{ _bigquery__get_table_shards_sql(information_schema) }}\n                    where (\n                        {%- for schema in schemas -%}\n                            upper(tables.dataset_id) = upper('{{ schema }}')\n                            {%- if not loop.last %} or {% endif -%}\n                        {%- endfor -%}\n                    )\n                ),\n                tables as ({{ _bigquery__get_tables_sql() }}),\n                table_stats as ({{ _bigquery__get_table_stats_sql() }}),\n\n                columns as ({{ _bigquery__get_columns_sql(information_schema) }}),\n                column_stats as ({{ _bigquery__get_column_stats_sql() }})\n\n            {{ _bigquery__get_extended_catalog_sql() }}\n        {%- endset -%}\n\n    {%- endif -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery._bigquery__get_table_shards_sql", "macro.dbt_bigquery._bigquery__get_tables_sql", "macro.dbt_bigquery._bigquery__get_table_stats_sql", "macro.dbt_bigquery._bigquery__get_columns_sql", "macro.dbt_bigquery._bigquery__get_column_stats_sql", "macro.dbt_bigquery._bigquery__get_extended_catalog_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6740596, "supported_languages": null}, "macro.dbt_bigquery.bigquery__resolve_model_name": {"name": "bigquery__resolve_model_name", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt_bigquery.bigquery__resolve_model_name", "macro_sql": "{% macro bigquery__resolve_model_name(input_model_name) -%}\n    {{ input_model_name | string | replace('`', '') | replace('\"', '\\\"') }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6743238, "supported_languages": null}, "macro.dbt_bigquery.bigquery__except": {"name": "bigquery__except", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt_bigquery.bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.67444, "supported_languages": null}, "macro.dbt_bigquery.bigquery__datediff": {"name": "bigquery__datediff", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_bigquery.bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) -%}\n\n  {% if dbt_version[0] == 1 and dbt_version[2] >= 2 %}\n    {{ return(dbt.datediff(first_date, second_date, datepart)) }}\n  {% else %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6749687, "supported_languages": null}, "macro.dbt_bigquery.bigquery__bool_or": {"name": "bigquery__bool_or", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt_bigquery.bigquery__bool_or", "macro_sql": "{% macro bigquery__bool_or(expression) -%}\n\n    logical_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.675131, "supported_languages": null}, "macro.dbt_bigquery.bigquery__safe_cast": {"name": "bigquery__safe_cast", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt_bigquery.bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n{%- if type.lower().startswith('array') and field is iterable and (field is not string and field is not mapping) and field | length > 0 -%}\n    {#-- Extract nested type from 'array<nested_type>' --#}\n    {% set nested_type = type.lower()[6:-1] %}\n    {#-- BigQuery does not support direct casts to arrays. instead, each element must be cast individually + reaggregated into an array --#}\n    {%- if cast_from_string_unsupported_for(nested_type)  %}\n        (select array_agg(safe_cast(i as {{ nested_type }})) from unnest([\n            {%- for nested_field in field %}\n                {{ nested_field.strip('\"').strip(\"'\") }}{{ ',' if not loop.last }}\n            {%- endfor %}\n        ]) i)\n    {%- else -%}\n        (select array_agg(safe_cast(i as {{nested_type}})) from unnest({{field}}) i)\n    {%- endif -%}\n\n{%- elif type.lower() == 'json' and field is mapping -%}\n    safe_cast(json {{ dbt.string_literal(tojson(field)) }} as json)\n{%- elif cast_from_string_unsupported_for(type) and field is string -%}\n    safe_cast({{field.strip('\"').strip(\"'\")}} as {{type}})\n{%- else -%}\n    safe_cast({{field}} as {{type}})\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.cast_from_string_unsupported_for", "macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.67669, "supported_languages": null}, "macro.dbt_bigquery.cast_from_string_unsupported_for": {"name": "cast_from_string_unsupported_for", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt_bigquery.cast_from_string_unsupported_for", "macro_sql": "{% macro cast_from_string_unsupported_for(type) %}\n    {{ return(type.lower().startswith('struct') or type.lower() == 'geography') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6770108, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_concat": {"name": "bigquery__array_concat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_concat", "macro_sql": "{% macro bigquery__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6772163, "supported_languages": null}, "macro.dbt_bigquery.bigquery__date_trunc": {"name": "bigquery__date_trunc", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt_bigquery.bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) -%}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6774158, "supported_languages": null}, "macro.dbt_bigquery.bigquery__escape_single_quotes": {"name": "bigquery__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt_bigquery.bigquery__escape_single_quotes", "macro_sql": "{% macro bigquery__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6776218, "supported_languages": null}, "macro.dbt_bigquery.bigquery__dateadd": {"name": "bigquery__dateadd", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_bigquery.bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6778646, "supported_languages": null}, "macro.dbt_bigquery.bigquery__intersect": {"name": "bigquery__intersect", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt_bigquery.bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6779757, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp": {"name": "bigquery__current_timestamp", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() -%}\n  current_timestamp()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6781456, "supported_languages": null}, "macro.dbt_bigquery.bigquery__snapshot_string_as_time": {"name": "bigquery__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_string_as_time", "macro_sql": "{% macro bigquery__snapshot_string_as_time(timestamp) -%}\n    {%- set result = 'TIMESTAMP(\"' ~ timestamp ~ '\")' -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6783495, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp_backcompat": {"name": "bigquery__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp_backcompat", "macro_sql": "{% macro bigquery__current_timestamp_backcompat() -%}\n  current_timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6784394, "supported_languages": null}, "macro.dbt_bigquery.bigquery__string_literal": {"name": "bigquery__string_literal", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/string_literal.sql", "original_file_path": "macros/utils/string_literal.sql", "unique_id": "macro.dbt_bigquery.bigquery__string_literal", "macro_sql": "{%- macro bigquery__string_literal(value) -%}\n    '''{{ value }}'''\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.678591, "supported_languages": null}, "macro.dbt_bigquery.bigquery__right": {"name": "bigquery__right", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt_bigquery.bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0\n        then ''\n    else\n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6788313, "supported_languages": null}, "macro.dbt_bigquery.bigquery__split_part": {"name": "bigquery__split_part", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt_bigquery.bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n  {% else %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset(\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 1 + {{ part_number }}\n        )]\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.679433, "supported_languages": null}, "macro.dbt_bigquery.bigquery__position": {"name": "bigquery__position", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt_bigquery.bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6796272, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_append": {"name": "bigquery__array_append", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_append", "macro_sql": "{% macro bigquery__array_append(array, new_element) -%}\n    {{ array_concat(array, array_construct([new_element])) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.array_concat", "macro.dbt.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6798506, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_construct": {"name": "bigquery__array_construct", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_construct", "macro_sql": "{% macro bigquery__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    [ {{ inputs|join(' , ') }} ]\n    {% else %}\n    ARRAY<{{data_type}}>[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.680191, "supported_languages": null}, "macro.dbt_bigquery.bigquery__listagg": {"name": "bigquery__listagg", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_bigquery.bigquery__listagg", "macro_sql": "{% macro bigquery__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        {% if limit_num -%}\n        limit {{ limit_num }}\n        {%- endif %}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6806078, "supported_languages": null}, "macro.dbt_bigquery.bigquery__format_column": {"name": "bigquery__format_column", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__format_column", "macro_sql": "{% macro bigquery__format_column(column) -%}\n  {% set data_type = column.data_type %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6814172, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_empty_schema_sql": {"name": "bigquery__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_empty_schema_sql", "macro_sql": "{% macro bigquery__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {% for col in columns.values() %}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n\n    {%- set columns = adapter.nest_column_data_types(columns) -%}\n    {{ return(dbt.default__get_empty_schema_sql(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6821415, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_select_subquery": {"name": "bigquery__get_select_subquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_select_subquery", "macro_sql": "{% macro bigquery__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.682344, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_column_names": {"name": "bigquery__get_column_names", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_column_names", "macro_sql": "{% macro bigquery__get_column_names() %}\n  {#- loop through nested user_provided_columns to get column names -#}\n    {%- set user_provided_columns = adapter.nest_column_data_types(model['columns']) -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6829247, "supported_languages": null}, "macro.dbt_bigquery.bigquery__hash": {"name": "bigquery__hash", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt_bigquery.bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt.default__hash(field)}})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.683117, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_show_grant_sql": {"name": "bigquery__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_show_grant_sql", "macro_sql": "{% macro bigquery__get_show_grant_sql(relation) %}\n    {% set location = adapter.get_dataset_location(relation) %}\n    {% set relation = relation.incorporate(location=location) %}\n\n    select privilege_type, grantee\n    from {{ relation.information_schema(\"OBJECT_PRIVILEGES\") }}\n    where object_schema = \"{{ relation.dataset }}\"\n      and object_name = \"{{ relation.identifier }}\"\n      -- filter out current user\n      and split(grantee, ':')[offset(1)] != session_user()\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6837912, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_grant_sql": {"name": "bigquery__get_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_grant_sql", "macro_sql": "\n\n\n{%- macro bigquery__get_grant_sql(relation, privilege, grantee) -%}\n    grant `{{ privilege }}` on {{ relation.type }} {{ relation }} to {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6840706, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_revoke_sql": {"name": "bigquery__get_revoke_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_revoke_sql", "macro_sql": "{%- macro bigquery__get_revoke_sql(relation, privilege, grantee) -%}\n    revoke `{{ privilege }}` on {{ relation.type }} {{ relation }} from {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6843343, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_empty_subquery_sql": {"name": "bigquery__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_empty_subquery_sql", "macro_sql": "{% macro bigquery__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false and current_timestamp() = current_timestamp()\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6846397, "supported_languages": null}, "macro.dbt_bigquery.bigquery_options": {"name": "bigquery_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/options.sql", "original_file_path": "macros/relations/options.sql", "unique_id": "macro.dbt_bigquery.bigquery_options", "macro_sql": "{% macro bigquery_options(opts) %}\n  {% set options -%}\n    OPTIONS({% for opt_key, opt_val in opts.items() %}\n      {{ opt_key }}={{ opt_val }}{{ \",\" if not loop.last }}\n    {% endfor %})\n  {%- endset %}\n  {%- do return(options) -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6851234, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_relation": {"name": "bigquery__drop_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_relation", "macro_sql": "{% macro bigquery__drop_relation(relation) -%}\n    {% do adapter.drop_relation(relation) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6853068, "supported_languages": null}, "macro.dbt_bigquery.cluster_by": {"name": "cluster_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/cluster.sql", "original_file_path": "macros/relations/cluster.sql", "unique_id": "macro.dbt_bigquery.cluster_by", "macro_sql": "{% macro cluster_by(raw_cluster_by) %}\n  {%- if raw_cluster_by is not none -%}\n  cluster by {% if raw_cluster_by is string -%}\n    {% set raw_cluster_by = [raw_cluster_by] %}\n  {%- endif -%}\n  {%- for cluster in raw_cluster_by -%}\n    {{ cluster }}\n    {%- if not loop.last -%}, {% endif -%}\n  {%- endfor -%}\n\n  {% endif %}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6858087, "supported_languages": null}, "macro.dbt_bigquery.partition_by": {"name": "partition_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/partition.sql", "original_file_path": "macros/relations/partition.sql", "unique_id": "macro.dbt_bigquery.partition_by", "macro_sql": "{% macro partition_by(partition_config) -%}\n    {%- if partition_config is none -%}\n      {% do return('') %}\n    {%- elif partition_config.time_ingestion_partitioning -%}\n        partition by {{ partition_config.render_wrapped() }}\n    {%- elif partition_config.data_type | lower in ('date','timestamp','datetime') -%}\n        partition by {{ partition_config.render() }}\n    {%- elif partition_config.data_type | lower in ('int64') -%}\n        {%- set range = partition_config.range -%}\n        partition by range_bucket(\n            {{ partition_config.field }},\n            generate_array({{ range.start}}, {{ range.end }}, {{ range.interval }})\n        )\n    {%- endif -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6866975, "supported_languages": null}, "macro.dbt_bigquery.bigquery__rename_relation": {"name": "bigquery__rename_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt_bigquery.bigquery__rename_relation", "macro_sql": "{% macro bigquery__rename_relation(from_relation, to_relation) -%}\n  {% do adapter.rename_relation(from_relation, to_relation) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6869347, "supported_languages": null}, "macro.dbt_bigquery.bigquery_view_options": {"name": "bigquery_view_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/view/options.sql", "original_file_path": "macros/relations/view/options.sql", "unique_id": "macro.dbt_bigquery.bigquery_view_options", "macro_sql": "{% macro bigquery_view_options(config, node) %}\n  {% set opts = adapter.get_view_options(config, node) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6872442, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_view": {"name": "bigquery__drop_view", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_view", "macro_sql": "{% macro bigquery__drop_view(relation) %}\n    drop view if exists {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6873996, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_or_replace_view": {"name": "bigquery__create_or_replace_view", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_or_replace_view", "macro_sql": "{% macro bigquery__create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and not old_relation.is_view -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt_bigquery.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6892152, "supported_languages": null}, "macro.dbt_bigquery.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt_bigquery.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.689683, "supported_languages": null}, "macro.dbt_bigquery.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt_bigquery.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6899567, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_rename_view_sql": {"name": "bigquery__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_rename_view_sql", "macro_sql": "{%- macro bigquery__get_rename_view_sql(relation, new_name) -%}\n    alter view {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6901667, "supported_languages": null}, "macro.dbt_bigquery.bigquery_table_options": {"name": "bigquery_table_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/table/options.sql", "original_file_path": "macros/relations/table/options.sql", "unique_id": "macro.dbt_bigquery.bigquery_table_options", "macro_sql": "{% macro bigquery_table_options(config, node, temporary) %}\n  {% set opts = adapter.get_table_options(config, node, temporary) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6905098, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_table": {"name": "bigquery__drop_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_table", "macro_sql": "{% macro bigquery__drop_table(relation) %}\n    drop table if exists {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6906621, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_rename_table_sql": {"name": "bigquery__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_rename_table_sql", "macro_sql": "{%- macro bigquery__get_rename_table_sql(relation, new_name) -%}\n    alter table {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6908412, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_materialized_view": {"name": "bigquery__drop_materialized_view", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_materialized_view", "macro_sql": "{% macro bigquery__drop_materialized_view(relation) %}\n    drop materialized view if exists {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6910005, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_create_materialized_view_as_sql": {"name": "bigquery__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_create_materialized_view_as_sql", "macro_sql": "{% macro bigquery__get_create_materialized_view_as_sql(relation, sql) %}\n\n    {%- set materialized_view = adapter.Relation.materialized_view_from_relation_config(config.model) -%}\n\n    create materialized view if not exists {{ relation }}\n    {% if materialized_view.partition %}{{ partition_by(materialized_view.partition) }}{% endif %}\n    {% if materialized_view.cluster %}{{ cluster_by(materialized_view.cluster.fields) }}{% endif %}\n    {{ bigquery_options(materialized_view.options.as_ddl_dict()) }}\n    as {{ sql }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6916595, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_alter_materialized_view_as_sql": {"name": "bigquery__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_alter_materialized_view_as_sql", "macro_sql": "{% macro bigquery__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n\n    {% if configuration_changes.requires_full_refresh %}\n        {{ get_replace_sql(existing_relation, relation, sql) }}\n    {% else %}\n\n        alter materialized view {{ relation }}\n            set {{ bigquery_options(configuration_changes.options.context.as_ddl_dict()) }}\n\n    {%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_sql", "macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6922867, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_materialized_view_configuration_changes": {"name": "bigquery__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_materialized_view_configuration_changes", "macro_sql": "{% macro bigquery__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {% set _existing_materialized_view = adapter.describe_relation(existing_relation) %}\n    {% set _configuration_changes = existing_relation.materialized_view_config_changeset(_existing_materialized_view, new_config.model) %}\n    {% do return(_configuration_changes) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6926186, "supported_languages": null}, "macro.dbt_bigquery.bigquery__refresh_materialized_view": {"name": "bigquery__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt_bigquery.bigquery__refresh_materialized_view", "macro_sql": "{% macro bigquery__refresh_materialized_view(relation) %}\n    call bq.refresh_materialized_view('{{ relation.database }}.{{ relation.schema }}.{{ relation.identifier }}')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6928654, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_replace_materialized_view_as_sql": {"name": "bigquery__get_replace_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_replace_materialized_view_as_sql", "macro_sql": "{% macro bigquery__get_replace_materialized_view_as_sql(relation, sql) %}\n\n    {%- set materialized_view = adapter.Relation.materialized_view_from_relation_config(config.model) -%}\n\n    create or replace materialized view if not exists {{ relation }}\n    {% if materialized_view.partition %}{{ partition_by(materialized_view.partition) }}{% endif %}\n    {% if materialized_view.cluster %}{{ cluster_by(materialized_view.cluster.fields) }}{% endif %}\n    {{ bigquery_options(materialized_view.options.as_ddl_dict()) }}\n    as {{ sql }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.693565, "supported_languages": null}, "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy": {"name": "dbt_bigquery_validate_get_incremental_strategy", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_bigquery_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\") or 'merge' -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'insert_overwrite'\n  {%- endset %}\n  {% if strategy not in ['merge', 'insert_overwrite'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6955607, "supported_languages": null}, "macro.dbt_bigquery.source_sql_with_partition": {"name": "source_sql_with_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.source_sql_with_partition", "macro_sql": "{% macro source_sql_with_partition(partition_by, source_sql) %}\n\n  {%- if partition_by.time_ingestion_partitioning %}\n    {{ return(wrap_with_time_ingestion_partitioning_sql(partition_by, source_sql, False))  }}\n  {% else %}\n    {{ return(source_sql)  }}\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.6958818, "supported_languages": null}, "macro.dbt_bigquery.bq_create_table_as": {"name": "bq_create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_create_table_as", "macro_sql": "{% macro bq_create_table_as(partition_by, temporary, relation, compiled_code, language='sql') %}\n  {%- set _dbt_max_partition = declare_dbt_max_partition(this, partition_by, compiled_code, language) -%}\n  {% if partition_by.time_ingestion_partitioning and language == 'python' %}\n    {% do exceptions.raise_compiler_error(\n      \"Python models do not support ingestion time partitioning\"\n    ) %}\n  {% elif partition_by.time_ingestion_partitioning and language == 'sql' %}\n    {#-- Create the table before inserting data as ingestion time partitioned tables can't be created with the transformed data --#}\n    {% do run_query(create_table_as(temporary, relation, compiled_code)) %}\n    {{ return(_dbt_max_partition + bq_insert_into_ingestion_time_partitioned_table_sql(relation, compiled_code)) }}\n  {% else %}\n    {{ return(_dbt_max_partition + create_table_as(temporary, relation, compiled_code, language)) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.run_query", "macro.dbt.create_table_as", "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.696698, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_build_sql": {"name": "bq_generate_incremental_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro_sql": "{% macro bq_generate_incremental_build_sql(\n    strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions, incremental_predicates\n) %}\n  {#-- if partitioned, use BQ scripting to get the range of partition values to be updated --#}\n  {% if strategy == 'insert_overwrite' %}\n\n    {% set build_sql = bq_generate_incremental_insert_overwrite_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n  {% else %} {# strategy == 'merge' #}\n\n    {% set build_sql = bq_generate_incremental_merge_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n    ) %}\n\n  {% endif %}\n\n  {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7506924, "supported_languages": null}, "macro.dbt_bigquery.materialization_incremental_bigquery": {"name": "materialization_incremental_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.materialization_incremental_bigquery", "macro_sql": "{% materialization incremental, adapter='bigquery', supported_languages=['sql', 'python'] -%}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n  {%- set language = model['language'] %}\n\n  {%- set target_relation = this %}\n  {%- set existing_relation = load_relation(this) %}\n  {%- set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_bigquery_validate_get_incremental_strategy(config) -%}\n\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set partitions = config.get('partitions', none) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n  {% set incremental_predicates = config.get('predicates', default=none) or config.get('incremental_predicates', default=none) %}\n\n   -- grab current tables grants config for comparison later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if partition_by.copy_partitions is true and strategy != 'insert_overwrite' %} {#-- We can't copy partitions with merge strategy --#}\n        {% set wrong_strategy_msg -%}\n        The 'copy_partitions' option requires the 'incremental_strategy' option to be set to 'insert_overwrite'.\n        {%- endset %}\n        {% do exceptions.raise_compiler_error(wrong_strategy_msg) %}\n\n  {% elif existing_relation is none %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif existing_relation.is_view %}\n      {#-- There's no way to atomically replace a view with a table on BQ --#}\n      {{ adapter.drop_relation(existing_relation) }}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif full_refresh_mode %}\n      {#-- If the partition/cluster config has changed, then we must drop and recreate --#}\n      {% if not adapter.is_replaceable(existing_relation, partition_by, cluster_by) %}\n          {% do log(\"Hard refreshing \" ~ existing_relation ~ \" because it is not replaceable\") %}\n          {{ adapter.drop_relation(existing_relation) }}\n      {% endif %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% else %}\n    {%- if language == 'python' and strategy == 'insert_overwrite' -%}\n      {#-- This lets us move forward assuming no python will be directly templated into a query --#}\n      {%- set python_unsupported_msg -%}\n        The 'insert_overwrite' strategy is not yet supported for python models.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(python_unsupported_msg) %}\n    {%- endif -%}\n\n    {% set tmp_relation_exists = false %}\n    {% if on_schema_change != 'ignore' or language == 'python' %}\n      {#-- Check first, since otherwise we may not build a temp table --#}\n      {#-- Python always needs to create a temp table --#}\n      {%- call statement('create_tmp_relation', language=language) -%}\n        {{ bq_create_table_as(partition_by, True, tmp_relation, compiled_code, language) }}\n      {%- endcall -%}\n      {% set tmp_relation_exists = true %}\n      {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n      {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {#--  Add time ingestion pseudo column to destination column as not part of the 'schema' but still need it for actual data insertion --#}\n    {% if partition_by.time_ingestion_partitioning %}\n      {% set dest_columns = adapter.add_time_ingestion_partition_column(partition_by, dest_columns) %}\n    {% endif %}\n\n    {% set build_sql = bq_generate_incremental_build_sql(\n        strategy, tmp_relation, target_relation, compiled_code, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, partition_by.copy_partitions, incremental_predicates\n    ) %}\n\n    {%- call statement('main') -%}\n      {{ build_sql }}\n    {% endcall %}\n\n    {%- if language == 'python' and tmp_relation -%}\n      {{ adapter.drop_relation(tmp_relation) }}\n    {%- endif -%}\n\n  {% endif %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.process_schema_changes", "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7553763, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.bigquery__can_clone_table": {"name": "bigquery__can_clone_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__can_clone_table", "macro_sql": "{% macro bigquery__can_clone_table() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7556853, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_or_replace_clone": {"name": "bigquery__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_or_replace_clone", "macro_sql": "{% macro bigquery__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7558563, "supported_languages": null}, "macro.dbt_bigquery.bigquery__handle_existing_table": {"name": "bigquery__handle_existing_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.bigquery__handle_existing_table", "macro_sql": "{% macro bigquery__handle_existing_table(full_refresh, old_relation) %}\n    {%- if full_refresh -%}\n      {{ adapter.drop_relation(old_relation) }}\n    {%- else -%}\n      {{ exceptions.relation_wrong_type(old_relation, 'view') }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.756448, "supported_languages": null}, "macro.dbt_bigquery.materialization_view_bigquery": {"name": "materialization_view_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.materialization_view_bigquery", "macro_sql": "{% materialization view, adapter='bigquery' -%}\n    -- grab current tables grants config for comparision later on\n    {% set grant_config = config.get('grants') %}\n\n    {% set to_return = bigquery__create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {% if config.get('grant_access_to') %}\n      {% for grant_target_dict in config.get('grant_access_to') %}\n        {% do adapter.grant_access_to(this, 'view', None, grant_target_dict) %}\n      {% endfor %}\n    {% endif %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_or_replace_view", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7572136, "supported_languages": ["sql"]}, "macro.dbt_bigquery.bigquery__create_csv_table": {"name": "bigquery__create_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_csv_table", "macro_sql": "{% macro bigquery__create_csv_table(model, agate_table) %}\n    -- no-op\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7576115, "supported_languages": null}, "macro.dbt_bigquery.bigquery__reset_csv_table": {"name": "bigquery__reset_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__reset_csv_table", "macro_sql": "{% macro bigquery__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7578015, "supported_languages": null}, "macro.dbt_bigquery.bigquery__load_csv_rows": {"name": "bigquery__load_csv_rows", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__load_csv_rows", "macro_sql": "{% macro bigquery__load_csv_rows(model, agate_table) %}\n\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {{ adapter.load_dataframe(model['database'], model['schema'], model['alias'],\n  \t\t\t\t\t\t\tagate_table, column_override) }}\n\n  {% call statement() %}\n    alter table {{ this.render() }} set {{ bigquery_table_options(config, model) }}\n  {% endcall %}\n\n  {% if config.persist_relation_docs() and 'description' in model %}\n\n  \t{{ adapter.update_table_description(model['database'], model['schema'], model['alias'], model['description']) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bigquery_table_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7586362, "supported_languages": null}, "macro.dbt_bigquery.materialization_table_bigquery": {"name": "materialization_table_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.materialization_table_bigquery", "macro_sql": "{% materialization table, adapter='bigquery', supported_languages=['sql', 'python']-%}\n\n  {%- set language = model['language'] -%}\n  {%- set identifier = model['alias'] -%}\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n  {%- set target_relation = api.Relation.create(database=database, schema=schema, identifier=identifier, type='table') -%}\n\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#\n      We only need to drop this thing if it is not a table.\n      If it _is_ already a table, then we can overwrite it without downtime\n      Unlike table -> view, no need for `--full-refresh`: dropping a view is no big deal\n  #}\n  {%- if exists_not_as_table -%}\n      {{ adapter.drop_relation(old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n  {% if not adapter.is_replaceable(old_relation, partition_by, cluster_by) %}\n    {% do log(\"Hard refreshing \" ~ old_relation ~ \" because it is not replaceable\") %}\n    {% do adapter.drop_relation(old_relation) %}\n  {% endif %}\n\n  -- build model\n  {%- call statement('main', language=language) -%}\n    {{ create_table_as(False, target_relation, compiled_code, language) }}\n  {%- endcall -%}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7627811, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.py_write_table", "macro_sql": "{% macro py_write_table(compiled_code, target_relation) %}\nfrom pyspark.sql import SparkSession\n{%- set raw_partition_by = config.get('partition_by', none) -%}\n{%- set raw_cluster_by = config.get('cluster_by', none) -%}\n{%- set enable_list_inference = config.get('enable_list_inference', true) -%}\n{%- set intermediate_format = config.get('intermediate_format', none) -%}\n\n{%- set partition_config = adapter.parse_partition_by(raw_partition_by) %}\n\nspark = SparkSession.builder.appName('smallTest').getOrCreate()\n\nspark.conf.set(\"viewsEnabled\",\"true\")\nspark.conf.set(\"temporaryGcsBucket\",\"{{target.gcs_bucket}}\")\nspark.conf.set(\"enableListInference\", \"{{ enable_list_inference }}\")\n{% if intermediate_format %}\nspark.conf.set(\"intermediateFormat\", \"{{ intermediate_format }}\")\n{% endif %}\n\n{{ compiled_code }}\ndbt = dbtObj(spark.read.format(\"bigquery\").load)\ndf = model(dbt, spark)\n\n# COMMAND ----------\n# this is materialization code dbt generated, please do not modify\n\nimport pyspark\n# make sure pandas exists before using it\ntry:\n  import pandas\n  pandas_available = True\nexcept ImportError:\n  pandas_available = False\n\n# make sure pyspark.pandas exists before using it\ntry:\n  import pyspark.pandas\n  pyspark_pandas_api_available = True\nexcept ImportError:\n  pyspark_pandas_api_available = False\n\n# make sure databricks.koalas exists before using it\ntry:\n  import databricks.koalas\n  koalas_available = True\nexcept ImportError:\n  koalas_available = False\n\n# preferentially convert pandas DataFrames to pandas-on-Spark or Koalas DataFrames first\n# since they know how to convert pandas DataFrames better than `spark.createDataFrame(df)`\n# and converting from pandas-on-Spark to Spark DataFrame has no overhead\nif pyspark_pandas_api_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = pyspark.pandas.frame.DataFrame(df)\nelif koalas_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = databricks.koalas.frame.DataFrame(df)\n\n# convert to pyspark.sql.dataframe.DataFrame\nif isinstance(df, pyspark.sql.dataframe.DataFrame):\n  pass  # since it is already a Spark DataFrame\nelif pyspark_pandas_api_available and isinstance(df, pyspark.pandas.frame.DataFrame):\n  df = df.to_spark()\nelif koalas_available and isinstance(df, databricks.koalas.frame.DataFrame):\n  df = df.to_spark()\nelif pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = spark.createDataFrame(df)\nelse:\n  msg = f\"{type(df)} is not a supported type for dbt Python materialization\"\n  raise Exception(msg)\n\ndf.write \\\n  .mode(\"overwrite\") \\\n  .format(\"bigquery\") \\\n  .option(\"writeMethod\", \"indirect\").option(\"writeDisposition\", 'WRITE_TRUNCATE') \\\n  {%- if partition_config is not none %}\n  {%- if partition_config.data_type | lower in ('date','timestamp','datetime') %}\n  .option(\"partitionField\", \"{{- partition_config.field -}}\") \\\n  {%- if partition_config.granularity is not none %}\n  .option(\"partitionType\", \"{{- partition_config.granularity| upper -}}\") \\\n  {%- endif %}\n  {%- endif %}\n  {%- endif %}\n  {%- if raw_cluster_by is not none %}\n  .option(\"clusteredFields\", \"{{- raw_cluster_by | join(',') -}}\") \\\n  {%- endif %}\n  .save(\"{{target_relation}}\")\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7641764, "supported_languages": null}, "macro.dbt_bigquery.bigquery__snapshot_hash_arguments": {"name": "bigquery__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_hash_arguments", "macro_sql": "{% macro bigquery__snapshot_hash_arguments(args) -%}\n  to_hex(md5(concat({%- for arg in args -%}\n    coalesce(cast({{ arg }} as string), ''){% if not loop.last %}, '|',{% endif -%}\n  {%- endfor -%}\n  )))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7646203, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_columns": {"name": "bigquery__create_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_columns", "macro_sql": "{% macro bigquery__create_columns(relation, columns) %}\n  {{ adapter.alter_table_add_columns(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7648084, "supported_languages": null}, "macro.dbt_bigquery.bigquery__post_snapshot": {"name": "bigquery__post_snapshot", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__post_snapshot", "macro_sql": "{% macro bigquery__post_snapshot(staging_relation) %}\n  -- Clean up the snapshot temp table\n  {% do drop_relation(staging_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7649708, "supported_languages": null}, "macro.dbt_bigquery.materialization_copy_bigquery": {"name": "materialization_copy_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/copy.sql", "original_file_path": "macros/materializations/copy.sql", "unique_id": "macro.dbt_bigquery.materialization_copy_bigquery", "macro_sql": "{% materialization copy, adapter='bigquery' -%}\n\n  {# Setup #}\n  {{ run_hooks(pre_hooks) }}\n\n  {% set destination = this.incorporate(type='table') %}\n\n  {# there can be several ref() or source() according to BQ copy API docs #}\n  {# cycle over ref() and source() to create source tables array #}\n  {% set source_array = [] %}\n  {% for ref_table in model.refs %}\n    {{ source_array.append(ref(ref_table.get('package'), ref_table.name, version=ref_table.get('version'))) }}\n  {% endfor %}\n\n  {% for src_table in model.sources %}\n    {{ source_array.append(source(*src_table)) }}\n  {% endfor %}\n\n  {# Call adapter copy_table function #}\n  {%- set result_str = adapter.copy_table(\n      source_array,\n      destination,\n      config.get('copy_materialization', default = 'table')) -%}\n\n  {{ store_result('main', response=result_str) }}\n\n  {# Clean up #}\n  {{ run_hooks(post_hooks) }}\n  {%- do apply_grants(target_relation, grant_config) -%}\n  {{ adapter.commit() }}\n\n  {{ return({'relations': [destination]}) }}\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7663834, "supported_languages": ["sql"]}, "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql": {"name": "bq_generate_incremental_merge_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/merge.sql", "original_file_path": "macros/materializations/incremental_strategy/merge.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql", "macro_sql": "{% macro bq_generate_incremental_merge_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n) %}\n    {%- set source_sql -%}\n        {%- if tmp_relation_exists -%}\n        (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n        )\n        {%- else -%} {#-- wrap sql in parens to make it a subquery --#}\n        (\n            {%- if partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n            {%- else -%}\n            {{sql}}\n            {%- endif %}\n        )\n        {%- endif -%}\n    {%- endset -%}\n\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set avoid_require_partition_filter = predicate_for_avoid_require_partition_filter() -%}\n    {%- if avoid_require_partition_filter is not none -%}\n        {% do predicates.append(avoid_require_partition_filter) %}\n    {%- endif -%}\n\n    {% set build_sql = get_merge_sql(target_relation, source_sql, unique_key, dest_columns, predicates) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt_bigquery.predicate_for_avoid_require_partition_filter", "macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7677476, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql": {"name": "bq_generate_incremental_insert_overwrite_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro_sql": "{% macro bq_generate_incremental_insert_overwrite_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n    {% if partition_by is none %}\n      {% set missing_partition_msg -%}\n      The 'insert_overwrite' strategy requires the `partition_by` config.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(missing_partition_msg) %}\n    {% endif %}\n\n    {% set build_sql = bq_insert_overwrite_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7702875, "supported_languages": null}, "macro.dbt_bigquery.bq_copy_partitions": {"name": "bq_copy_partitions", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_copy_partitions", "macro_sql": "{% macro bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n\n  {% for partition in partitions %}\n    {% if partition_by.data_type == 'int64' %}\n      {% set partition = partition | as_text %}\n    {% elif partition_by.granularity == 'hour' %}\n      {% set partition = partition.strftime(\"%Y%m%d%H\") %}\n    {% elif partition_by.granularity == 'day' %}\n      {% set partition = partition.strftime(\"%Y%m%d\") %}\n    {% elif partition_by.granularity == 'month' %}\n      {% set partition = partition.strftime(\"%Y%m\") %}\n    {% elif partition_by.granularity == 'year' %}\n      {% set partition = partition.strftime(\"%Y\") %}\n    {% endif %}\n    {% set tmp_relation_partitioned = api.Relation.create(database=tmp_relation.database, schema=tmp_relation.schema, identifier=tmp_relation.table ~ '$' ~ partition, type=tmp_relation.type) %}\n    {% set target_relation_partitioned = api.Relation.create(database=target_relation.database, schema=target_relation.schema, identifier=target_relation.table ~ '$' ~ partition, type=target_relation.type) %}\n    {% do adapter.copy_table(tmp_relation_partitioned, target_relation_partitioned, \"table\") %}\n  {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.771675, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_overwrite_sql": {"name": "bq_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_insert_overwrite_sql", "macro_sql": "{% macro bq_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n  {% if partitions is not none and partitions != [] %} {# static #}\n      {{ bq_static_insert_overwrite_sql(tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else %} {# dynamic #}\n      {{ bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7723546, "supported_languages": null}, "macro.dbt_bigquery.bq_static_insert_overwrite_sql": {"name": "bq_static_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro_sql": "{% macro bq_static_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in (\n              {{ partitions | join (', ') }}\n          )\n      {%- endset %}\n\n      {%- set source_sql -%}\n        (\n          {% if partition_by.time_ingestion_partitioning and tmp_relation_exists -%}\n          select\n            {{ partition_by.insertable_time_partitioning_field() }},\n            * from {{ tmp_relation }}\n          {% elif tmp_relation_exists -%}\n            select\n            * from {{ tmp_relation }}\n          {%- elif partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n          {%- else -%}\n            {{sql}}\n          {%- endif %}\n\n        )\n      {%- endset -%}\n\n      {% if copy_partitions %}\n          {% do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n      {% else %}\n\n      {#-- In case we're putting the model SQL _directly_ into the MERGE statement,\n         we need to prepend the MERGE statement with the user-configured sql_header,\n         which may be needed to resolve that model SQL (e.g. referencing a variable or UDF in the header)\n         in the \"temporary table exists\" case, we save the model SQL result as a temp table first, wherein the\n         sql_header is included by the create_table_as macro.\n      #}\n      -- 1. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header = not tmp_relation_exists) }};\n\n      {%- if tmp_relation_exists -%}\n      -- 2. clean up the temp table\n      drop table if exists {{ tmp_relation }};\n      {%- endif -%}\n\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt_bigquery.bq_copy_partitions", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7734928, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql": {"name": "bq_dynamic_copy_partitions_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_copy_partitions_insert_overwrite_sql(\n  tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions\n  ) %}\n  {%- if tmp_relation_exists is false -%}\n  {# We run temp table creation in a separated script to move to partitions copy if it doesn't already exist #}\n    {%- call statement('create_tmp_relation_for_copy', language='sql') -%}\n      {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql')\n    }}\n    {%- endcall %}\n  {%- endif -%}\n  {%- set partitions_sql -%}\n    select distinct {{ partition_by.render_wrapped() }}\n    from {{ tmp_relation }}\n  {%- endset -%}\n  {%- set partitions = run_query(partitions_sql).columns[0].values() -%}\n  {# We copy the partitions #}\n  {%- do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) -%}\n  -- Clean up the temp table\n  drop table if exists {{ tmp_relation }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.run_query", "macro.dbt_bigquery.bq_copy_partitions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7742596, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql": {"name": "bq_dynamic_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) %}\n  {%- if copy_partitions is true %}\n     {{ bq_dynamic_copy_partitions_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else -%}\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in unnest(dbt_partitions_for_replacement)\n      {%- endset %}\n\n      {%- set source_sql -%}\n      (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n      )\n      {%- endset -%}\n\n      -- generated script to merge partitions into {{ target_relation }}\n      declare dbt_partitions_for_replacement array<{{ partition_by.data_type_for_partition() }}>;\n\n      {# have we already created the temp table to check for schema changes? #}\n      {% if not tmp_relation_exists %}\n       -- 1. create a temp table with model data\n        {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql') }}\n      {% else %}\n        -- 1. temp table already exists, we used it to check for schema changes\n      {% endif %}\n      {%- set partition_field = partition_by.time_partitioning_field() if partition_by.time_ingestion_partitioning else partition_by.render_wrapped() -%}\n\n      -- 2. define partitions to update\n      set (dbt_partitions_for_replacement) = (\n          select as struct\n              -- IGNORE NULLS: this needs to be aligned to _dbt_max_partition, which ignores null\n              array_agg(distinct {{ partition_field }} IGNORE NULLS)\n          from {{ tmp_relation }}\n      );\n\n      -- 3. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate]) }};\n\n      -- 4. clean up the temp table\n      drop table if exists {{ tmp_relation }}\n\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7754934, "supported_languages": null}, "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql": {"name": "wrap_with_time_ingestion_partitioning_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro_sql": "{% macro wrap_with_time_ingestion_partitioning_sql(partition_by, sql, is_nested) %}\n\n  select TIMESTAMP({{ partition_by.field }}) as {{ partition_by.insertable_time_partitioning_field() }}, * EXCEPT({{ partition_by.field }}) from (\n    {{ sql }}\n  ){%- if not is_nested -%};{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7767892, "supported_languages": null}, "macro.dbt_bigquery.get_quoted_with_types_csv": {"name": "get_quoted_with_types_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_quoted_with_types_csv", "macro_sql": "{% macro get_quoted_with_types_csv(columns) %}\n    {% set quoted = [] %}\n    {% for col in columns -%}\n        {%- do quoted.append(adapter.quote(col.name) ~ \" \" ~ col.data_type) -%}\n    {%- endfor %}\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7772636, "supported_languages": null}, "macro.dbt_bigquery.columns_without_partition_fields_csv": {"name": "columns_without_partition_fields_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro_sql": "{% macro columns_without_partition_fields_csv(partition_config, columns) -%}\n  {%- set columns_no_partition = partition_config.reject_partition_field_column(columns) -%}\n  {% set columns_names = get_quoted_with_types_csv(columns_no_partition) %}\n  {{ return(columns_names) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_quoted_with_types_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7775736, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql": {"name": "bq_insert_into_ingestion_time_partitioned_table_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql", "macro_sql": "{% macro bq_insert_into_ingestion_time_partitioned_table_sql(target_relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {{ sql_header if sql_header is not none }}\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {% set dest_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set dest_columns_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n  insert into {{ target_relation }} ({{ partition_by.insertable_time_partitioning_field() }}, {{ dest_columns_csv }})\n    {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, False) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7783687, "supported_languages": null}, "macro.dbt_bigquery.get_columns_with_types_in_query_sql": {"name": "get_columns_with_types_in_query_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro_sql": "{% macro get_columns_with_types_in_query_sql(select_sql) %}\n  {% set sql %}\n    {%- set sql_header = config.get('sql_header', none) -%}\n    {{ sql_header if sql_header is not none }}\n    select * from (\n      {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n  {% endset %}\n  {{ return(adapter.get_columns_in_select_sql(sql)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7787728, "supported_languages": null}, "macro.dbt_bigquery.declare_dbt_max_partition": {"name": "declare_dbt_max_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/common.sql", "original_file_path": "macros/materializations/incremental_strategy/common.sql", "unique_id": "macro.dbt_bigquery.declare_dbt_max_partition", "macro_sql": "{% macro declare_dbt_max_partition(relation, partition_by, compiled_code, language='sql') %}\n\n  {#-- TODO: revisit partitioning with python models --#}\n  {%- if '_dbt_max_partition' in compiled_code and language == 'sql' -%}\n\n    declare _dbt_max_partition {{ partition_by.data_type_for_partition() }} default (\n      select max({{ partition_by.field }}) from {{ this }}\n      where {{ partition_by.field }} is not null\n    );\n\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.779621, "supported_languages": null}, "macro.dbt_bigquery.predicate_for_avoid_require_partition_filter": {"name": "predicate_for_avoid_require_partition_filter", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/common.sql", "original_file_path": "macros/materializations/incremental_strategy/common.sql", "unique_id": "macro.dbt_bigquery.predicate_for_avoid_require_partition_filter", "macro_sql": "{% macro predicate_for_avoid_require_partition_filter(target='DBT_INTERNAL_DEST') %}\n\n    {%- set raw_partition_by = config.get('partition_by', none) -%}\n    {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n    {%- set predicate = none -%}\n\n    {% if partition_config and config.get('require_partition_filter') -%}\n        {%- set partition_field = partition_config.time_partitioning_field() if partition_config.time_ingestion_partitioning else partition_config.field -%}\n        {% set predicate %}\n            (\n                `{{ target }}`.`{{ partition_field }}` is null\n                or `{{ target }}`.`{{ partition_field }}` is not null\n            )\n        {% endset %}\n    {%- endif -%}\n\n    {{ return(predicate) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7803438, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7819047, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7825546, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7828903, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.784589, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partition start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.786052, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.786905, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7871692, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7886465, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7888308, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7897377, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.79021, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7908618, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.791377, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7914672, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7918048, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7920806, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7927148, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7932599, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7936254, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.793765, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7940423, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7941434, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7945232, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7947276, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7957141, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7959917, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7961981, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.796383, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.796579, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.796761, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7969618, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7971644, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.797352, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7975237, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7977023, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7978656, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7980433, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7982032, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7984753, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.798594, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7988577, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7989786, "supported_languages": null}, "macro.dbt.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.7997365, "supported_languages": null}, "macro.dbt.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8002872, "supported_languages": null}, "macro.dbt.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8005004, "supported_languages": null}, "macro.dbt.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8011117, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.801444, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8016126, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.80193, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8020878, "supported_languages": null}, "macro.dbt.date": {"name": "date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.date", "macro_sql": "{% macro date(year, month, day) %}\n  {{ return(adapter.dispatch('date', 'dbt') (year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8024359, "supported_languages": null}, "macro.dbt.default__date": {"name": "default__date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.default__date", "macro_sql": "{% macro default__date(year, month, day) -%}\n    {%- set dt = modules.datetime.date(year, month, day) -%}\n    {%- set iso_8601_formatted_date = dt.strftime('%Y-%m-%d') -%}\n    to_date('{{ iso_8601_formatted_date }}', 'YYYY-MM-DD')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8027592, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.803066, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8032148, "supported_languages": null}, "macro.dbt.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8039086, "supported_languages": null}, "macro.dbt.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8045793, "supported_languages": null}, "macro.dbt.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8048408, "supported_languages": null}, "macro.dbt.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n    {# call as follows:\n\n    date_spine(\n        \"day\",\n        \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n        \"dbt.dateadd(week, 1, current_date)\"\n    ) #}\n\n\n    with rawdata as (\n\n        {{dbt.generate_series(\n            dbt.get_intervals_between(start_date, end_date, datepart)\n        )}}\n\n    ),\n\n    all_periods as (\n\n        select (\n            {{\n                dbt.dateadd(\n                    datepart,\n                    \"row_number() over (order by 1) - 1\",\n                    start_date\n                )\n            }}\n        ) as date_{{datepart}}\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_{{datepart}} <= {{ end_date }}\n\n    )\n\n    select * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_series", "macro.dbt.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8052802, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8055944, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8057652, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8061566, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8063493, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.806605, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8066978, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8071494, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8074627, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8076394, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.80798, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.808139, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8086596, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8088539, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.809115, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.809397, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.809523, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8097842, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.809973, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8103049, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8104718, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.810787, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8109522, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.811286, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8114765, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8118687, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8122258, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8128269, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8132932, "supported_languages": null}, "macro.dbt.cast": {"name": "cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.cast", "macro_sql": "{% macro cast(field, type) %}\n  {{ return(adapter.dispatch('cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8135962, "supported_languages": null}, "macro.dbt.default__cast": {"name": "default__cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.default__cast", "macro_sql": "{% macro default__cast(field, type) %}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.813743, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.814037, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8142185, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8144777, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8146172, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8150241, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.81524, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8154228, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8156297, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8171928, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.817344, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8175445, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8176823, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8181834, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.818422, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.818575, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.81885, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation.render() }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8190858, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8193355, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation.render() }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.819565, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8198135, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.820587, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8208044, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8210914, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8214185, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation.render() ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.822868, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8235996, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8237875, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.823984, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8241074, "supported_languages": null}, "macro.dbt.get_snapshot_get_time_data_type": {"name": "get_snapshot_get_time_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.get_snapshot_get_time_data_type", "macro_sql": "{% macro get_snapshot_get_time_data_type() %}\n    {% set snapshot_time = adapter.dispatch('snapshot_get_time', 'dbt')() %}\n    {% set time_data_type_sql = 'select ' ~ snapshot_time ~ ' as dbt_snapshot_time' %}\n    {% set snapshot_time_column_schema = get_column_schema_from_query(time_data_type_sql) %}\n    {% set time_data_type = snapshot_time_column_schema[0].dtype %}\n    {{ return(time_data_type or none) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.default__snapshot_get_time", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8245716, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.824842, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8249624, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8251622, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8253534, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header is not none -%}\n  {{ sql_header }}\n  {%- endif %}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8257904, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "\n{%- macro get_limit_subquery_sql(sql, limit) -%}\n  {{ adapter.dispatch('get_limit_sql', 'dbt')(sql, limit) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_limit_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8260248, "supported_languages": null}, "macro.dbt.default__get_limit_sql": {"name": "default__get_limit_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_sql", "macro_sql": "{% macro default__get_limit_sql(sql, limit) %}\n  {{ compiled_code }}\n  {% if limit is not none %}\n  limit {{ limit }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8262408, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8270702, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8272326, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8274155, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.827867, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8280835, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8282373, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8284135, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8285584, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8305361, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8307219, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.831077, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8314192, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8316817, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8319201, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {%- set col_naked_numeric = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {%- do col_err.append(col['name']) -%}\n      {#-- If this column's type is just 'numeric' then it is missing precision/scale, raise a warning --#}\n      {%- elif col['data_type'].strip().lower() in ('numeric', 'decimal', 'number') -%}\n        {%- do col_naked_numeric.append(col['name']) -%}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      {{ cast('null', col['data_type']) }} as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- elif (col_naked_numeric | length) > 0 -%}\n      {{ exceptions.warn(\"Detected columns with numeric type and unspecified precision/scale, this can lead to unintended rounding: \" ~ col_naked_numeric ~ \"`\") }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8332574, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8336537, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.833866, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8342795, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8345275, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation.render() }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation.render() }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation.render() }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation.render() }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8352787, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8355784, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation.render() }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8365126, "supported_languages": null}, "macro.dbt.get_catalog_relations": {"name": "get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_relations", "macro_sql": "{% macro get_catalog_relations(information_schema, relations) -%}\n  {{ return(adapter.dispatch('get_catalog_relations', 'dbt')(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8398015, "supported_languages": null}, "macro.dbt.default__get_catalog_relations": {"name": "default__get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_relations", "macro_sql": "{% macro default__get_catalog_relations(information_schema, relations) -%}\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog_relations not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8401058, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.840334, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8406308, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8408346, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.841017, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8412137, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8414888, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8419816, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.842328, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8425503, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.842738, "supported_languages": null}, "macro.dbt.get_catalog_for_single_relation": {"name": "get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_for_single_relation", "macro_sql": "{% macro get_catalog_for_single_relation(relation) %}\n  {{ return(adapter.dispatch('get_catalog_for_single_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_catalog_for_single_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8429503, "supported_languages": null}, "macro.dbt.default__get_catalog_for_single_relation": {"name": "default__get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_for_single_relation", "macro_sql": "{% macro default__get_catalog_for_single_relation(relation) %}\n  {{ exceptions.raise_not_implemented(\n    'get_catalog_for_single_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8431325, "supported_languages": null}, "macro.dbt.get_relations": {"name": "get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relations", "macro_sql": "{% macro get_relations() %}\n  {{ return(adapter.dispatch('get_relations', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8433232, "supported_languages": null}, "macro.dbt.default__get_relations": {"name": "default__get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relations", "macro_sql": "{% macro default__get_relations() %}\n  {{ exceptions.raise_not_implemented(\n    'get_relations macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8434956, "supported_languages": null}, "macro.dbt.get_relation_last_modified": {"name": "get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relation_last_modified", "macro_sql": "{% macro get_relation_last_modified(information_schema, relations) %}\n  {{ return(adapter.dispatch('get_relation_last_modified', 'dbt')(information_schema, relations)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relation_last_modified"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8437228, "supported_languages": null}, "macro.dbt.default__get_relation_last_modified": {"name": "default__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relation_last_modified", "macro_sql": "{% macro default__get_relation_last_modified(information_schema, relations) %}\n  {{ exceptions.raise_not_implemented(\n    'get_relation_last_modified macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8439138, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8443577, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8448262, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8465707, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8467598, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8470087, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8473415, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8476129, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8479695, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8481715, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation.render() }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8483734, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8487277, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8493462, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.849598, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8497593, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8500745, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.850346, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8510036, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.851196, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8514237, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8516083, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.851903, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8524315, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.852872, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8533018, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.853708, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8540015, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8545165, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8548262, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8551633, "supported_languages": null}, "macro.dbt.drop_schema_named": {"name": "drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.drop_schema_named", "macro_sql": "{% macro drop_schema_named(schema_name) %}\n    {{ return(adapter.dispatch('drop_schema_named', 'dbt') (schema_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema_named"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8554564, "supported_languages": null}, "macro.dbt.default__drop_schema_named": {"name": "default__drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.default__drop_schema_named", "macro_sql": "{% macro default__drop_schema_named(schema_name) %}\n  {% set schema_relation = api.Relation.create(schema=schema_name) %}\n  {{ adapter.drop_schema(schema_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8557878, "supported_languages": null}, "macro.dbt.get_drop_sql": {"name": "get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.get_drop_sql", "macro_sql": "{%- macro get_drop_sql(relation) -%}\n    {{- log('Applying DROP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8564842, "supported_languages": null}, "macro.dbt.default__get_drop_sql": {"name": "default__get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__get_drop_sql", "macro_sql": "{%- macro default__get_drop_sql(relation) -%}\n\n    {%- if relation.is_view -%}\n        {{ drop_view(relation) }}\n\n    {%- elif relation.is_table -%}\n        {{ drop_table(relation) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ drop_materialized_view(relation) }}\n\n    {%- else -%}\n        drop {{ relation.type }} if exists {{ relation.render() }} cascade\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.drop_view", "macro.dbt.drop_table", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8569386, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8571475, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {{ get_drop_sql(relation) }}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8573735, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.857596, "supported_languages": null}, "macro.dbt.get_create_backup_sql": {"name": "get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.get_create_backup_sql", "macro_sql": "{%- macro get_create_backup_sql(relation) -%}\n    {{- log('Applying CREATE BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8579772, "supported_languages": null}, "macro.dbt.default__get_create_backup_sql": {"name": "default__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.default__get_create_backup_sql", "macro_sql": "{%- macro default__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    {{ get_rename_sql(relation, backup_relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8582911, "supported_languages": null}, "macro.dbt.get_create_sql": {"name": "get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.get_create_sql", "macro_sql": "{%- macro get_create_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8587646, "supported_languages": null}, "macro.dbt.default__get_create_sql": {"name": "default__get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.default__get_create_sql", "macro_sql": "{%- macro default__get_create_sql(relation, sql) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_create_view_as_sql(relation, sql) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_create_table_as_sql(False, relation, sql) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_create_materialized_view_as_sql(relation, sql) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_create_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.get_create_view_as_sql", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.859263, "supported_languages": null}, "macro.dbt.get_rename_intermediate_sql": {"name": "get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.get_rename_intermediate_sql", "macro_sql": "{%- macro get_rename_intermediate_sql(relation) -%}\n    {{- log('Applying RENAME INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_intermediate_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8596423, "supported_languages": null}, "macro.dbt.default__get_rename_intermediate_sql": {"name": "default__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.default__get_rename_intermediate_sql", "macro_sql": "{%- macro default__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    {{ get_rename_sql(intermediate_relation, relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8599012, "supported_languages": null}, "macro.dbt.get_create_intermediate_sql": {"name": "get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.get_create_intermediate_sql", "macro_sql": "{%- macro get_create_intermediate_sql(relation, sql) -%}\n    {{- log('Applying CREATE INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_intermediate_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8602831, "supported_languages": null}, "macro.dbt.default__get_create_intermediate_sql": {"name": "default__get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.default__get_create_intermediate_sql", "macro_sql": "{%- macro default__get_create_intermediate_sql(relation, sql) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- drop any pre-existing intermediate\n    {{ get_drop_sql(intermediate_relation) }};\n\n    {{ get_create_sql(intermediate_relation, sql) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.86056, "supported_languages": null}, "macro.dbt.get_replace_sql": {"name": "get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.get_replace_sql", "macro_sql": "{% macro get_replace_sql(existing_relation, target_relation, sql) %}\n    {{- log('Applying REPLACE to: ' ~ existing_relation) -}}\n    {{- adapter.dispatch('get_replace_sql', 'dbt')(existing_relation, target_relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8612475, "supported_languages": null}, "macro.dbt.default__get_replace_sql": {"name": "default__get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.default__get_replace_sql", "macro_sql": "{% macro default__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {# /* use a create or replace statement if possible */ #}\n\n    {% set is_replaceable = existing_relation.type == target_relation_type and existing_relation.can_be_replaced %}\n\n    {% if is_replaceable and existing_relation.is_view %}\n        {{ get_replace_view_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_table %}\n        {{ get_replace_table_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_materialized_view %}\n        {{ get_replace_materialized_view_sql(target_relation, sql) }}\n\n    {# /* a create or replace statement is not possible, so try to stage and/or backup to be safe */ #}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one using a backup */ #}\n    {%- elif target_relation.can_be_renamed and existing_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one without using a backup */ #}\n    {%- elif target_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }}\n\n    {# /* create target_relation in place by first backing up the existing relation */ #}\n    {%- elif existing_relation.can_be_renamed -%}\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* no renaming is allowed, so just drop and create */ #}\n    {%- else -%}\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_view_sql", "macro.dbt.get_replace_table_sql", "macro.dbt.get_replace_materialized_view_sql", "macro.dbt.get_create_intermediate_sql", "macro.dbt.get_create_backup_sql", "macro.dbt.get_rename_intermediate_sql", "macro.dbt.get_drop_backup_sql", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8626556, "supported_languages": null}, "macro.dbt.get_drop_backup_sql": {"name": "get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.get_drop_backup_sql", "macro_sql": "{%- macro get_drop_backup_sql(relation) -%}\n    {{- log('Applying DROP BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8630257, "supported_languages": null}, "macro.dbt.default__get_drop_backup_sql": {"name": "default__get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.default__get_drop_backup_sql", "macro_sql": "{%- macro default__get_drop_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    {{ get_drop_sql(backup_relation) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8632615, "supported_languages": null}, "macro.dbt.get_rename_sql": {"name": "get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.get_rename_sql", "macro_sql": "{%- macro get_rename_sql(relation, new_name) -%}\n    {{- log('Applying RENAME to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_sql', 'dbt')(relation, new_name) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8639486, "supported_languages": null}, "macro.dbt.default__get_rename_sql": {"name": "default__get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__get_rename_sql", "macro_sql": "{%- macro default__get_rename_sql(relation, new_name) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_rename_view_sql(relation, new_name) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_rename_table_sql(relation, new_name) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_rename_materialized_view_sql(relation, new_name) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_rename_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.get_rename_view_sql", "macro.dbt.get_rename_table_sql", "macro.dbt.get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8644273, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8646488, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation.render() }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8649805, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.865916, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8660553, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8666553, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.866843, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8670015, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8684285, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.868937, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8693209, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n    {{- adapter.dispatch('drop_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8695962, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8697367, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.870161, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8703413, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8705409, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation.render() }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8710256, "supported_languages": null}, "macro.dbt.get_replace_view_sql": {"name": "get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.get_replace_view_sql", "macro_sql": "{% macro get_replace_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8718405, "supported_languages": null}, "macro.dbt.default__get_replace_view_sql": {"name": "default__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__get_replace_view_sql", "macro_sql": "{% macro default__get_replace_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8720093, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8732846, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8735073, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation.render() ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8737621, "supported_languages": null}, "macro.dbt.get_rename_view_sql": {"name": "get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.get_rename_view_sql", "macro_sql": "{% macro get_rename_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_rename_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8740592, "supported_languages": null}, "macro.dbt.default__get_rename_view_sql": {"name": "default__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.default__get_rename_view_sql", "macro_sql": "{% macro default__get_rename_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.874221, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n    {{- adapter.dispatch('drop_table', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8744755, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8746116, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.875424, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8756351, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8762093, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8769784, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8774924, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8776999, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8779001, "supported_languages": null}, "macro.dbt.get_replace_table_sql": {"name": "get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.get_replace_table_sql", "macro_sql": "{% macro get_replace_table_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_table_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.878189, "supported_languages": null}, "macro.dbt.default__get_replace_table_sql": {"name": "default__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.default__get_replace_table_sql", "macro_sql": "{% macro default__get_replace_table_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8783514, "supported_languages": null}, "macro.dbt.get_rename_table_sql": {"name": "get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.get_rename_table_sql", "macro_sql": "{% macro get_rename_table_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_table_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_rename_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8786337, "supported_languages": null}, "macro.dbt.default__get_rename_table_sql": {"name": "default__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.default__get_rename_table_sql", "macro_sql": "{% macro default__get_rename_table_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.878793, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n    {{- adapter.dispatch('drop_materialized_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8790526, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.879188, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8794773, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\n        \"`get_create_materialized_view_as_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8796384, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8802407, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.88044, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8807461, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8809104, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.881244, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"`refresh_materialized_view` has not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8813982, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_sql": {"name": "get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.get_replace_materialized_view_sql", "macro_sql": "{% macro get_replace_materialized_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_materialized_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8816967, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_sql": {"name": "default__get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_sql", "macro_sql": "{% macro default__get_replace_materialized_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8818667, "supported_languages": null}, "macro.dbt.get_rename_materialized_view_sql": {"name": "get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.get_rename_materialized_view_sql", "macro_sql": "{% macro get_rename_materialized_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_materialized_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8821502, "supported_languages": null}, "macro.dbt.default__get_rename_materialized_view_sql": {"name": "default__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.default__get_rename_materialized_view_sql", "macro_sql": "{% macro default__get_rename_materialized_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.882384, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8834867, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8837068, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.883872, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.884043, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8842008, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8845816, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8849227, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.885256, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation.render())) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.888692, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8927794, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8937917, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8940938, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation.render() %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8946493, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8948648, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8950315, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8952043, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.895348, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.895538, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8956726, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.896211, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.8964195, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.897869, "supported_languages": null}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n    {% set store_failures_as = config.get('store_failures_as') %}\n    -- if `--store-failures` is invoked via command line and `store_failures_as` is not set,\n    -- config.get('store_failures_as', 'table') returns None, not 'table'\n    {% if store_failures_as == none %}{% set store_failures_as = 'table' %}{% endif %}\n    {% if store_failures_as not in ['table', 'view'] %}\n        {{ exceptions.raise_compiler_error(\n            \"'\" ~ store_failures_as ~ \"' is not a valid value for `store_failures_as`. \"\n            \"Accepted values are: ['ephemeral', 'table', 'view']\"\n        ) }}\n    {% endif %}\n\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type=store_failures_as) -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ get_create_sql(target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.get_create_sql", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.900637, "supported_languages": ["sql"]}, "macro.dbt.materialization_unit_default": {"name": "materialization_unit_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/unit.sql", "original_file_path": "macros/materializations/tests/unit.sql", "unique_id": "macro.dbt.materialization_unit_default", "macro_sql": "{%- materialization unit, default -%}\n\n  {% set relations = [] %}\n\n  {% set expected_rows = config.get('expected_rows') %}\n  {% set expected_sql = config.get('expected_sql') %}\n  {% set tested_expected_column_names = expected_rows[0].keys() if (expected_rows | length ) > 0 else get_columns_in_query(sql) %} %}\n\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {% do run_query(get_create_table_as_sql(True, temp_relation, get_empty_subquery_sql(sql))) %}\n  {%- set columns_in_relation = adapter.get_columns_in_relation(temp_relation) -%}\n  {%- set column_name_to_data_types = {} -%}\n  {%- for column in columns_in_relation -%}\n  {%-   do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n  {%- endfor -%}\n\n  {% if not expected_sql %}\n  {%   set expected_sql = get_expected_sql(expected_rows, column_name_to_data_types) %}\n  {% endif %}\n  {% set unit_test_sql = get_unit_test_sql(sql, expected_sql, tested_expected_column_names) %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ unit_test_sql }}\n\n  {%- endcall %}\n\n  {% do adapter.drop_relation(temp_relation) %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt.make_temp_relation", "macro.dbt.run_query", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_empty_subquery_sql", "macro.dbt.get_expected_sql", "macro.dbt.get_unit_test_sql", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9024942, "supported_languages": ["sql"]}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.902905, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9033418, "supported_languages": null}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9043593, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9047015, "supported_languages": null}, "macro.dbt.get_unit_test_sql": {"name": "get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_unit_test_sql", "macro_sql": "{% macro get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n  {{ adapter.dispatch('get_unit_test_sql', 'dbt')(main_sql, expected_fixture_sql, expected_column_names) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_unit_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9049387, "supported_languages": null}, "macro.dbt.default__get_unit_test_sql": {"name": "default__get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_unit_test_sql", "macro_sql": "{% macro default__get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n-- Build actual result given inputs\nwith dbt_internal_unit_test_actual as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%},{% endif %}{%- endfor -%}, {{ dbt.string_literal(\"actual\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ main_sql }}\n  ) _dbt_internal_unit_test_actual\n),\n-- Build expected result\ndbt_internal_unit_test_expected as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%}, {% endif %}{%- endfor -%}, {{ dbt.string_literal(\"expected\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ expected_fixture_sql }}\n  ) _dbt_internal_unit_test_expected\n)\n-- Union actual and expected results\nselect * from dbt_internal_unit_test_actual\nunion all\nselect * from dbt_internal_unit_test_expected\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.905613, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.910133, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.910566, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9108403, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation.render() ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation.render() ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.912384, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9126568, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9134204, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view.sql", "original_file_path": "macros/materializations/models/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9163551, "supported_languages": ["sql"]}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table.sql", "original_file_path": "macros/materializations/models/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9192793, "supported_languages": ["sql"]}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.924341, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9261374, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9264326, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9275384, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.927832, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9285345, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9295847, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9298623, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.930087, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9304378, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9306653, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.930998, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9311988, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9314847, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.931762, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9319375, "supported_languages": null}, "macro.dbt.get_incremental_microbatch_sql": {"name": "get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_microbatch_sql", "macro_sql": "{% macro get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_microbatch_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_microbatch_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9321527, "supported_languages": null}, "macro.dbt.default__get_incremental_microbatch_sql": {"name": "default__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_microbatch_sql", "macro_sql": "{% macro default__get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ exceptions.raise_not_implemented('microbatch materialization strategy not implemented for adapter ' + adapter.type()) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.932335, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9326441, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9341538, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.934769, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9355037, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9357667, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.936565, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% set contract_config = config.get('contract') %}\n    {% if not contract_config or not contract_config.enforced %}\n      {% do adapter.expand_target_column_types(\n               from_relation=temp_relation,\n               to_relation=target_relation) %}\n    {% endif %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9419217, "supported_languages": ["sql"]}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.942642, "supported_languages": null}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.947294, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.94864, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9499588, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.950894, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation.render() ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {% if target_relation and defer_relation and target_relation == defer_relation %}\n              {{ log(\"Target relation and defer relation are the same, skipping clone for relation: \" ~ target_relation.render()) }}\n          {% else %}\n              {{ create_or_replace_clone(target_relation, defer_relation) }}\n          {% endif %}\n\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.95445, "supported_languages": ["sql"]}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9548, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation.render() }} clone {{ defer_relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9550068, "supported_languages": null}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9552734, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.955414, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.958628, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9588308, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.959094, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set primary_key = config.get('unique_key') %}\n    {% set updated_at = config.get('updated_at') %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes') or false %}\n    {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.{{ columns.dbt_valid_from }} < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9602506, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.960451, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.960642, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9621944, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set check_cols_config = config.get('check_cols') %}\n    {% set primary_key = config.get('unique_key') %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes') or false %}\n    {% set updated_at = config.get('updated_at') or snapshot_get_time() %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.963661, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9642406, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {%- set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() -%}\n\n    merge into {{ target.render() }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.{{ columns.dbt_scd_id }} = DBT_INTERNAL_DEST.{{ columns.dbt_scd_id }}\n\n    when matched\n     and DBT_INTERNAL_DEST.{{ columns.dbt_valid_to }} is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set {{ columns.dbt_valid_to }} = DBT_INTERNAL_SOURCE.{{ columns.dbt_valid_to }}\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.964803, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {# The model['config'] parameter below is no longer used, but passing anyway for compatibility #}\n  {# It was a dictionary of config, instead of the config object from the context #}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", model['config'], target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set build_or_select_sql = build_sql %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n      {{ adapter.valid_snapshot_target(target_relation, columns) }}\n\n      {% set build_or_select_sql = snapshot_staging_table(strategy, sql, target_relation) %}\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n\n  {{ check_time_data_types(build_or_select_sql) }}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_staging_table", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.check_time_data_types", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9702432, "supported_languages": ["sql"]}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.975735, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation.render() }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9760897, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.976282, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.976388, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9765549, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9766874, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9769142, "supported_languages": null}, "macro.dbt.get_snapshot_table_column_names": {"name": "get_snapshot_table_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_snapshot_table_column_names", "macro_sql": "{% macro get_snapshot_table_column_names() %}\n    {{ return({'dbt_valid_to': 'dbt_valid_to', 'dbt_valid_from': 'dbt_valid_from', 'dbt_scd_id': 'dbt_scd_id', 'dbt_updated_at': 'dbt_updated_at'}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9771569, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where {{ columns.dbt_valid_to }} is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as {{ columns.dbt_valid_to }},\n            {{ strategy.scd_id }} as {{ columns.dbt_scd_id }}\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_to }}\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.{{ columns.dbt_scd_id }}\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_to }},\n            snapshotted_data.{{ columns.dbt_scd_id }}\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9785602, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9787676, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n\n    select *,\n        {{ strategy.scd_id }} as {{ columns.dbt_scd_id }},\n        {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n        {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as {{ columns.dbt_valid_to }}\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9792573, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9797301, "supported_languages": null}, "macro.dbt.get_updated_at_column_data_type": {"name": "get_updated_at_column_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_updated_at_column_data_type", "macro_sql": "{% macro get_updated_at_column_data_type(snapshot_sql) %}\n    {% set snapshot_sql_column_schema = get_column_schema_from_query(snapshot_sql) %}\n    {% set dbt_updated_at_data_type = null %}\n    {% set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {% set ns.dbt_updated_at_data_type = null -%}\n    {% for column in snapshot_sql_column_schema %}\n    {%   if ((column.column == 'dbt_updated_at') or (column.column == 'DBT_UPDATED_AT')) %}\n    {%     set ns.dbt_updated_at_data_type = column.dtype %}\n    {%   endif %}\n    {% endfor %}\n    {{ return(ns.dbt_updated_at_data_type or none)  }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9803872, "supported_languages": null}, "macro.dbt.check_time_data_types": {"name": "check_time_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.check_time_data_types", "macro_sql": "{% macro check_time_data_types(sql) %}\n  {% set dbt_updated_at_data_type = get_updated_at_column_data_type(sql) %}\n  {% set snapshot_get_time_data_type = get_snapshot_get_time_data_type() %}\n  {% if snapshot_get_time_data_type is not none and dbt_updated_at_data_type is not none and snapshot_get_time_data_type != dbt_updated_at_data_type %}\n  {%   if exceptions.warn_snapshot_timestamp_data_types %}\n  {{     exceptions.warn_snapshot_timestamp_data_types(snapshot_get_time_data_type, dbt_updated_at_data_type) }}\n  {%   endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_updated_at_column_data_type", "macro.dbt.get_snapshot_get_time_data_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9809296, "supported_languages": null}, "macro.dbt.get_fixture_sql": {"name": "get_fixture_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_fixture_sql", "macro_sql": "{% macro get_fixture_sql(rows, column_name_to_data_types) %}\n-- Fixture for {{ model.name }}\n{% set default_row = {} %}\n\n{%- if not column_name_to_data_types -%}\n{#-- Use defer_relation IFF it is available in the manifest and 'this' is missing from the database --#}\n{%-   set this_or_defer_relation = defer_relation if (defer_relation and not load_relation(this)) else this -%}\n{%-   set columns_in_relation = adapter.get_columns_in_relation(this_or_defer_relation) -%}\n\n{%-   set column_name_to_data_types = {} -%}\n{%-   for column in columns_in_relation -%}\n{#-- This needs to be a case-insensitive comparison --#}\n{%-     do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n{%-   endfor -%}\n{%- endif -%}\n\n{%- if not column_name_to_data_types -%}\n    {{ exceptions.raise_compiler_error(\"Not able to get columns for unit test '\" ~ model.name ~ \"' from relation \" ~ this ~ \" because the relation doesn't exist\") }}\n{%- endif -%}\n\n{%- for column_name, column_type in column_name_to_data_types.items() -%}\n    {%- do default_row.update({column_name: (safe_cast(\"null\", column_type) | trim )}) -%}\n{%- endfor -%}\n\n{{ validate_fixture_rows(rows, row_number) }}\n\n{%- for row in rows -%}\n{%-   set formatted_row = format_row(row, column_name_to_data_types) -%}\n{%-   set default_row_copy = default_row.copy() -%}\n{%-   do default_row_copy.update(formatted_row) -%}\nselect\n{%-   for column_name, column_value in default_row_copy.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%-   endfor %}\n{%-   if not loop.last %}\nunion all\n{%    endif %}\n{%- endfor -%}\n\n{%- if (rows | length) == 0 -%}\n    select\n    {%- for column_name, column_value in default_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%},{%- endif %}\n    {%- endfor %}\n    limit 0\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.safe_cast", "macro.dbt.validate_fixture_rows", "macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9845788, "supported_languages": null}, "macro.dbt.get_expected_sql": {"name": "get_expected_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_expected_sql", "macro_sql": "{% macro get_expected_sql(rows, column_name_to_data_types) %}\n\n{%- if (rows | length) == 0 -%}\n    select * from dbt_internal_unit_test_actual\n    limit 0\n{%- else -%}\n{%- for row in rows -%}\n{%- set formatted_row = format_row(row, column_name_to_data_types) -%}\nselect\n{%- for column_name, column_value in formatted_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%- endfor %}\n{%- if not loop.last %}\nunion all\n{% endif %}\n{%- endfor -%}\n{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9852018, "supported_languages": null}, "macro.dbt.format_row": {"name": "format_row", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.format_row", "macro_sql": "\n\n{%- macro format_row(row, column_name_to_data_types) -%}\n    {#-- generate case-insensitive formatted row --#}\n    {% set formatted_row = {} %}\n    {%- for column_name, column_value in row.items() -%}\n        {% set column_name = column_name|lower %}\n\n        {%- if column_name not in column_name_to_data_types %}\n            {#-- if user-provided row contains column name that relation does not contain, raise an error --#}\n            {% set fixture_name = \"expected output\" if model.resource_type == 'unit_test' else (\"'\" ~ model.name ~ \"'\") %}\n            {{ exceptions.raise_compiler_error(\n                \"Invalid column name: '\" ~ column_name ~ \"' in unit test fixture for \" ~ fixture_name ~ \".\"\n                \"\\nAccepted columns for \" ~ fixture_name ~ \" are: \" ~ (column_name_to_data_types.keys()|list)\n            ) }}\n        {%- endif -%}\n\n        {%- set column_type = column_name_to_data_types[column_name] %}\n\n        {#-- sanitize column_value: wrap yaml strings in quotes, apply cast --#}\n        {%- set column_value_clean = column_value -%}\n        {%- if column_value is string -%}\n            {%- set column_value_clean = dbt.string_literal(dbt.escape_single_quotes(column_value)) -%}\n        {%- elif column_value is none -%}\n            {%- set column_value_clean = 'null' -%}\n        {%- endif -%}\n\n        {%- set row_update = {column_name: safe_cast(column_value_clean, column_type) } -%}\n        {%- do formatted_row.update(row_update) -%}\n    {%- endfor -%}\n    {{ return(formatted_row) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.escape_single_quotes", "macro.dbt.safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9864395, "supported_languages": null}, "macro.dbt.validate_fixture_rows": {"name": "validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.validate_fixture_rows", "macro_sql": "{%- macro validate_fixture_rows(rows, row_number) -%}\n  {{ return(adapter.dispatch('validate_fixture_rows', 'dbt')(rows, row_number)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__validate_fixture_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9866836, "supported_languages": null}, "macro.dbt.default__validate_fixture_rows": {"name": "default__validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.default__validate_fixture_rows", "macro_sql": "{%- macro default__validate_fixture_rows(rows, row_number) -%}\n  {# This is an abstract method for adapter overrides as needed #}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9867947, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9873402, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9876208, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9879713, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9882915, "supported_languages": null}, "macro.dbt_date.get_base_dates": {"name": "get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.get_base_dates", "macro_sql": "{% macro get_base_dates(start_date=None, end_date=None, n_dateparts=None, datepart=\"day\") %}\n    {{ adapter.dispatch('get_base_dates', 'dbt_date') (start_date, end_date, n_dateparts, datepart) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__get_base_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9897714, "supported_languages": null}, "macro.dbt_date.default__get_base_dates": {"name": "default__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.default__get_base_dates", "macro_sql": "{% macro default__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"  -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_date.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp", "macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9906135, "supported_languages": null}, "macro.dbt_date.bigquery__get_base_dates": {"name": "bigquery__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.bigquery__get_base_dates", "macro_sql": "{% macro bigquery__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as datetime )\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as datetime )\" -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_date.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9914377, "supported_languages": null}, "macro.dbt_date.trino__get_base_dates": {"name": "trino__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.trino__get_base_dates", "macro_sql": "{% macro trino__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"  -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.now()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_date.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp", "macro.dbt.dateadd", "macro.dbt_date.now", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9922733, "supported_languages": null}, "macro.dbt_date.get_date_dimension": {"name": "get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.get_date_dimension", "macro_sql": "{% macro get_date_dimension(start_date, end_date) %}\n    {{ adapter.dispatch('get_date_dimension', 'dbt_date') (start_date, end_date) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_date_dimension"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271770.9991193, "supported_languages": null}, "macro.dbt_date.default__get_date_dimension": {"name": "default__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.default__get_date_dimension", "macro_sql": "{% macro default__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=false) }} as day_of_week,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week_iso,\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt.type_int() }}) as quarter_of_year,\n    cast({{ dbt.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    cast({{ last_day('d.date_day', 'quarter') }} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt.type_int() }}) as year_number,\n    cast({{ dbt.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0015645, "supported_languages": null}, "macro.dbt_date.postgres__get_date_dimension": {"name": "postgres__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.postgres__get_date_dimension", "macro_sql": "{% macro postgres__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week,\n\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt.type_int() }}) as quarter_of_year,\n    cast({{ dbt.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    {# last_day does not support quarter because postgresql does not support quarter interval. #}\n    cast({{dbt.dateadd('day', '-1', dbt.dateadd('month', '3', dbt.date_trunc('quarter', 'd.date_day')))}} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt.type_int() }}) as year_number,\n    cast({{ dbt.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0041406, "supported_languages": null}, "macro.dbt_date.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_date')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0049381, "supported_languages": null}, "macro.dbt_date.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.005406, "supported_languages": null}, "macro.dbt_date.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_date')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0056224, "supported_languages": null}, "macro.dbt_date.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_date.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0062056, "supported_languages": null}, "macro.dbt_date.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_date')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0068798, "supported_languages": null}, "macro.dbt_date.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0075402, "supported_languages": null}, "macro.dbt_date.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_date')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0077927, "supported_languages": null}, "macro.dbt_date.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{\n        dbt_date.generate_series(\n            dbt_date.get_intervals_between(start_date, end_date, datepart)\n        )\n    }}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"(row_number() over (order by 1) - 1)\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.generate_series", "macro.dbt_date.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0081913, "supported_languages": null}, "macro.dbt_date.date": {"name": "date", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.date", "macro_sql": "{% macro date(year, month, day) %}\n    {{ return(modules.datetime.date(year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0085301, "supported_languages": null}, "macro.dbt_date.datetime": {"name": "datetime", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.datetime", "macro_sql": "{% macro datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0, tz=None) %}\n    {% set tz = tz if tz else var(\"dbt_date:time_zone\") %}\n    {{ return(\n        modules.datetime.datetime(\n            year=year, month=month, day=day, hour=hour,\n            minute=minute, second=second, microsecond=microsecond,\n            tzinfo=modules.pytz.timezone(tz)\n        )\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0091221, "supported_languages": null}, "macro.dbt_date.n_days_ago": {"name": "n_days_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_ago.sql", "original_file_path": "macros/calendar_date/n_days_ago.sql", "unique_id": "macro.dbt_date.n_days_ago", "macro_sql": "{%- macro n_days_ago(n, date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{%- set n = n|int -%}\ncast({{ dbt.dateadd('day', -1 * n, dt) }} as date)\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.009571, "supported_languages": null}, "macro.dbt_date.today": {"name": "today", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/today.sql", "original_file_path": "macros/calendar_date/today.sql", "unique_id": "macro.dbt_date.today", "macro_sql": "{%- macro today(tz=None) -%}\ncast({{ dbt_date.now(tz) }} as date)\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.009779, "supported_languages": null}, "macro.dbt_date.week_end": {"name": "week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.week_end", "macro_sql": "{%- macro week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0103211, "supported_languages": null}, "macro.dbt_date.default__week_end": {"name": "default__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.default__week_end", "macro_sql": "{%- macro default__week_end(date) -%}\n{{ last_day(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0104842, "supported_languages": null}, "macro.dbt_date.snowflake__week_end": {"name": "snowflake__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.snowflake__week_end", "macro_sql": "\n\n{%- macro snowflake__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0107214, "supported_languages": null}, "macro.dbt_date.postgres__week_end": {"name": "postgres__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.postgres__week_end", "macro_sql": "\n\n{%- macro postgres__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.010961, "supported_languages": null}, "macro.dbt_date.duckdb__week_end": {"name": "duckdb__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.duckdb__week_end", "macro_sql": "\n\n{%- macro duckdb__week_end(date) -%}\n{{ return(dbt_date.postgres__week_end(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0111299, "supported_languages": null}, "macro.dbt_date.n_months_ago": {"name": "n_months_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_ago.sql", "original_file_path": "macros/calendar_date/n_months_ago.sql", "unique_id": "macro.dbt_date.n_months_ago", "macro_sql": "{%- macro n_months_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('month',\n    dbt.dateadd('month', -1 * n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.011541, "supported_languages": null}, "macro.dbt_date.n_days_away": {"name": "n_days_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_away.sql", "original_file_path": "macros/calendar_date/n_days_away.sql", "unique_id": "macro.dbt_date.n_days_away", "macro_sql": "{%- macro n_days_away(n, date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(-1 * n, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0119019, "supported_languages": null}, "macro.dbt_date.next_week": {"name": "next_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_week.sql", "original_file_path": "macros/calendar_date/next_week.sql", "unique_id": "macro.dbt_date.next_week", "macro_sql": "{%- macro next_week(tz=None) -%}\n{{ dbt_date.n_weeks_away(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.012133, "supported_languages": null}, "macro.dbt_date.last_week": {"name": "last_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_week.sql", "original_file_path": "macros/calendar_date/last_week.sql", "unique_id": "macro.dbt_date.last_week", "macro_sql": "{%- macro last_week(tz=None) -%}\n{{ dbt_date.n_weeks_ago(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.012342, "supported_languages": null}, "macro.dbt_date.iso_week_end": {"name": "iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.iso_week_end", "macro_sql": "{%- macro iso_week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0128155, "supported_languages": null}, "macro.dbt_date._iso_week_end": {"name": "_iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date._iso_week_end", "macro_sql": "{%- macro _iso_week_end(date, week_type) -%}\n{%- set dt = dbt_date.iso_week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.iso_week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.013067, "supported_languages": null}, "macro.dbt_date.default__iso_week_end": {"name": "default__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.default__iso_week_end", "macro_sql": "\n\n{%- macro default__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0132287, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_end": {"name": "snowflake__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_end", "macro_sql": "\n\n{%- macro snowflake__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'weekiso') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0133848, "supported_languages": null}, "macro.dbt_date.n_weeks_ago": {"name": "n_weeks_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_ago.sql", "original_file_path": "macros/calendar_date/n_weeks_ago.sql", "unique_id": "macro.dbt_date.n_weeks_ago", "macro_sql": "{%- macro n_weeks_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('week',\n    dbt.dateadd('week', -1 * n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0137877, "supported_languages": null}, "macro.dbt_date.to_unixtimestamp": {"name": "to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.to_unixtimestamp", "macro_sql": "{%- macro to_unixtimestamp(timestamp) -%}\n    {{ adapter.dispatch('to_unixtimestamp', 'dbt_date') (timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__to_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.014201, "supported_languages": null}, "macro.dbt_date.default__to_unixtimestamp": {"name": "default__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__to_unixtimestamp", "macro_sql": "\n\n{%- macro default__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch', timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.014359, "supported_languages": null}, "macro.dbt_date.snowflake__to_unixtimestamp": {"name": "snowflake__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__to_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch_seconds', timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0145156, "supported_languages": null}, "macro.dbt_date.bigquery__to_unixtimestamp": {"name": "bigquery__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__to_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__to_unixtimestamp(timestamp) -%}\n    unix_seconds({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0146334, "supported_languages": null}, "macro.dbt_date.spark__to_unixtimestamp": {"name": "spark__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.spark__to_unixtimestamp", "macro_sql": "\n\n{%- macro spark__to_unixtimestamp(timestamp) -%}\n    unix_timestamp({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0147493, "supported_languages": null}, "macro.dbt_date.trino__to_unixtimestamp": {"name": "trino__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.trino__to_unixtimestamp", "macro_sql": "\n\n{%- macro trino__to_unixtimestamp(timestamp) -%}\n    to_unixtime({{ timestamp }} AT TIME ZONE 'UTC')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0148695, "supported_languages": null}, "macro.dbt_date.day_name": {"name": "day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.day_name", "macro_sql": "{%- macro day_name(date, short=True) -%}\n    {{ adapter.dispatch('day_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__day_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0156662, "supported_languages": null}, "macro.dbt_date.default__day_name": {"name": "default__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.default__day_name", "macro_sql": "\n\n{%- macro default__day_name(date, short) -%}\n{%- set f = 'Dy' if short else 'Day' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0159063, "supported_languages": null}, "macro.dbt_date.snowflake__day_name": {"name": "snowflake__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.snowflake__day_name", "macro_sql": "\n\n{%- macro snowflake__day_name(date, short) -%}\n    {%- if short -%}\n    dayname({{ date }})\n    {%- else -%}\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname({{ date }})\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0161507, "supported_languages": null}, "macro.dbt_date.bigquery__day_name": {"name": "bigquery__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.bigquery__day_name", "macro_sql": "\n\n{%- macro bigquery__day_name(date, short) -%}\n{%- set f = '%a' if short else '%A' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0163777, "supported_languages": null}, "macro.dbt_date.postgres__day_name": {"name": "postgres__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.postgres__day_name", "macro_sql": "\n\n{%- macro postgres__day_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMDy' if short else 'FMDay' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0166836, "supported_languages": null}, "macro.dbt_date.duckdb__day_name": {"name": "duckdb__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.duckdb__day_name", "macro_sql": "\n\n{%- macro duckdb__day_name(date, short) -%}\n    {%- if short -%}\n    substr(dayname({{ date }}), 1, 3)\n    {%- else -%}\n    dayname({{ date }})\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0169113, "supported_languages": null}, "macro.dbt_date.spark__day_name": {"name": "spark__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.spark__day_name", "macro_sql": "\n\n{%- macro spark__day_name(date, short) -%}\n{%- set f = 'E' if short else 'EEEE' -%}\n    date_format({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0171378, "supported_languages": null}, "macro.dbt_date.trino__day_name": {"name": "trino__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.trino__day_name", "macro_sql": "\n\n{%- macro trino__day_name(date, short) -%}\n{%- set f = 'a' if short else 'W' -%}\n    date_format({{ date }}, '%{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.017358, "supported_languages": null}, "macro.dbt_date.next_month_number": {"name": "next_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_number.sql", "original_file_path": "macros/calendar_date/next_month_number.sql", "unique_id": "macro.dbt_date.next_month_number", "macro_sql": "{%- macro next_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.next_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0176005, "supported_languages": null}, "macro.dbt_date.day_of_week": {"name": "day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.day_of_week", "macro_sql": "{%- macro day_of_week(date, isoweek=true) -%}\n{{ adapter.dispatch('day_of_week', 'dbt_date') (date, isoweek) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0198739, "supported_languages": null}, "macro.dbt_date.default__day_of_week": {"name": "default__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.default__day_of_week", "macro_sql": "\n\n{%- macro default__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else {{ dow }}\n    end\n    {%- else -%}\n    {{ dow }} + 1\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0202065, "supported_languages": null}, "macro.dbt_date.snowflake__day_of_week": {"name": "snowflake__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.snowflake__day_of_week", "macro_sql": "\n\n{%- macro snowflake__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'dayofweekiso' -%}\n        {{ dbt_date.date_part(dow_part, date) }}\n    {%- else -%}\n        {%- set dow_part = 'dayofweek' -%}\n        case\n            when {{ dbt_date.date_part(dow_part, date) }} = 7 then 1\n            else {{ dbt_date.date_part(dow_part, date) }} + 1\n        end\n    {%- endif -%}\n\n\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.020663, "supported_languages": null}, "macro.dbt_date.bigquery__day_of_week": {"name": "bigquery__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.bigquery__day_of_week", "macro_sql": "\n\n{%- macro bigquery__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (1) to Monday (2)\n        when {{ dow }} = 1 then 7\n        else {{ dow }} - 1\n    end\n    {%- else -%}\n    {{ dow }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0209954, "supported_languages": null}, "macro.dbt_date.postgres__day_of_week": {"name": "postgres__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.postgres__day_of_week", "macro_sql": "\n\n\n{%- macro postgres__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'isodow' -%}\n        -- Monday(1) to Sunday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} as {{ dbt.type_int() }})\n    {%- else -%}\n        {%- set dow_part = 'dow' -%}\n        -- Sunday(1) to Saturday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} + 1 as {{ dbt.type_int() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.02149, "supported_languages": null}, "macro.dbt_date.redshift__day_of_week": {"name": "redshift__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.redshift__day_of_week", "macro_sql": "\n\n\n{%- macro redshift__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else cast({{ dow }} as {{ dbt.type_bigint() }})\n    end\n    {%- else -%}\n    cast({{ dow }} + 1 as {{ dbt.type_bigint() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0219238, "supported_languages": null}, "macro.dbt_date.duckdb__day_of_week": {"name": "duckdb__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.duckdb__day_of_week", "macro_sql": "\n\n{%- macro duckdb__day_of_week(date, isoweek) -%}\n{{ return(dbt_date.postgres__day_of_week(date, isoweek)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0221283, "supported_languages": null}, "macro.dbt_date.spark__day_of_week": {"name": "spark__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.spark__day_of_week", "macro_sql": "\n\n\n{%- macro spark__day_of_week(date, isoweek) -%}\n\n    {%- set dow = \"dayofweek_iso\" if isoweek else \"dayofweek\" -%}\n\n    {{ dbt_date.date_part(dow, date) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0223782, "supported_languages": null}, "macro.dbt_date.trino__day_of_week": {"name": "trino__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.trino__day_of_week", "macro_sql": "\n\n\n{%- macro trino__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('day_of_week', date) -%}\n\n    {%- if isoweek -%}\n        {{ dow }}\n    {%- else -%}\n        case\n            when {{ dow }} = 7 then 1\n            else {{ dow }} + 1\n        end\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0227013, "supported_languages": null}, "macro.dbt_date.week_of_year": {"name": "week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.week_of_year", "macro_sql": "{%- macro week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0231786, "supported_languages": null}, "macro.dbt_date.default__week_of_year": {"name": "default__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.default__week_of_year", "macro_sql": "{%- macro default__week_of_year(date) -%}\ncast({{ dbt_date.date_part('week', date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0233822, "supported_languages": null}, "macro.dbt_date.postgres__week_of_year": {"name": "postgres__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.postgres__week_of_year", "macro_sql": "\n\n{%- macro postgres__week_of_year(date) -%}\n{# postgresql 'week' returns isoweek. Use to_char instead.\n   WW = the first week starts on the first day of the year #}\ncast(to_char({{ date }}, 'WW') as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0235484, "supported_languages": null}, "macro.dbt_date.duckdb__week_of_year": {"name": "duckdb__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__week_of_year", "macro_sql": "\n\n{%- macro duckdb__week_of_year(date) -%}\ncast(ceil(dayofyear({{ date }}) / 7) as int)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0236695, "supported_languages": null}, "macro.dbt_date.convert_timezone": {"name": "convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.convert_timezone", "macro_sql": "{%- macro convert_timezone(column, target_tz=None, source_tz=None) -%}\n{%- set source_tz = \"UTC\" if not source_tz else source_tz -%}\n{%- set target_tz = var(\"dbt_date:time_zone\") if not target_tz else target_tz -%}\n{{ adapter.dispatch('convert_timezone', 'dbt_date') (column, target_tz, source_tz) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.bigquery__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0249197, "supported_languages": null}, "macro.dbt_date.default__convert_timezone": {"name": "default__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.default__convert_timezone", "macro_sql": "{% macro default__convert_timezone(column, target_tz, source_tz) -%}\nconvert_timezone('{{ source_tz }}', '{{ target_tz }}',\n    cast({{ column }} as {{ dbt.type_timestamp() }})\n)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0252316, "supported_languages": null}, "macro.dbt_date.bigquery__convert_timezone": {"name": "bigquery__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.bigquery__convert_timezone", "macro_sql": "{%- macro bigquery__convert_timezone(column, target_tz, source_tz=None) -%}\ntimestamp(datetime({{ column }}, '{{ target_tz}}'))\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.025412, "supported_languages": null}, "macro.dbt_date.postgres__convert_timezone": {"name": "postgres__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.postgres__convert_timezone", "macro_sql": "{% macro postgres__convert_timezone(column, target_tz, source_tz) -%}\ncast(\n    cast({{ column }} as {{ dbt.type_timestamp() }})\n        at time zone '{{ source_tz }}' at time zone '{{ target_tz }}' as {{ dbt.type_timestamp() }}\n)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0256863, "supported_languages": null}, "macro.dbt_date.redshift__convert_timezone": {"name": "redshift__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.redshift__convert_timezone", "macro_sql": "{%- macro redshift__convert_timezone(column, target_tz, source_tz) -%}\n{{ return(dbt_date.default__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.025909, "supported_languages": null}, "macro.dbt_date.duckdb__convert_timezone": {"name": "duckdb__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.duckdb__convert_timezone", "macro_sql": "{% macro duckdb__convert_timezone(column, target_tz, source_tz) -%}\n{{ return(dbt_date.postgres__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.postgres__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0261176, "supported_languages": null}, "macro.dbt_date.spark__convert_timezone": {"name": "spark__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.spark__convert_timezone", "macro_sql": "{%- macro spark__convert_timezone(column, target_tz, source_tz) -%}\nfrom_utc_timestamp(\n        to_utc_timestamp({{ column }}, '{{ source_tz }}'),\n        '{{ target_tz }}'\n        )\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0263026, "supported_languages": null}, "macro.dbt_date.trino__convert_timezone": {"name": "trino__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.trino__convert_timezone", "macro_sql": "{%- macro trino__convert_timezone(column, target_tz, source_tz) -%}\n    cast((at_timezone(with_timezone(cast({{ column }} as {{ dbt.type_timestamp() }}), '{{ source_tz }}'), '{{ target_tz }}')) as {{ dbt.type_timestamp() }})\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0265577, "supported_languages": null}, "macro.dbt_date.now": {"name": "now", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/now.sql", "original_file_path": "macros/calendar_date/now.sql", "unique_id": "macro.dbt_date.now", "macro_sql": "{%- macro now(tz=None) -%}\n{{ dbt_date.convert_timezone(dbt.current_timestamp(), tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.convert_timezone", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.026783, "supported_languages": null}, "macro.dbt_date.n_weeks_away": {"name": "n_weeks_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_away.sql", "original_file_path": "macros/calendar_date/n_weeks_away.sql", "unique_id": "macro.dbt_date.n_weeks_away", "macro_sql": "{%- macro n_weeks_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('week',\n    dbt.dateadd('week', n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0271716, "supported_languages": null}, "macro.dbt_date.month_name": {"name": "month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.month_name", "macro_sql": "{%- macro month_name(date, short=True) -%}\n    {{ adapter.dispatch('month_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__month_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0278413, "supported_languages": null}, "macro.dbt_date.default__month_name": {"name": "default__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.default__month_name", "macro_sql": "\n\n{%- macro default__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MONTH' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0280702, "supported_languages": null}, "macro.dbt_date.bigquery__month_name": {"name": "bigquery__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.bigquery__month_name", "macro_sql": "\n\n{%- macro bigquery__month_name(date, short) -%}\n{%- set f = '%b' if short else '%B' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.02829, "supported_languages": null}, "macro.dbt_date.snowflake__month_name": {"name": "snowflake__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.snowflake__month_name", "macro_sql": "\n\n{%- macro snowflake__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MMMM' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.028505, "supported_languages": null}, "macro.dbt_date.postgres__month_name": {"name": "postgres__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.postgres__month_name", "macro_sql": "\n\n{%- macro postgres__month_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMMon' if short else 'FMMonth' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0287254, "supported_languages": null}, "macro.dbt_date.duckdb__month_name": {"name": "duckdb__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.duckdb__month_name", "macro_sql": "\n\n\n{%- macro duckdb__month_name(date, short) -%}\n    {%- if short -%}\n    substr(monthname({{ date }}), 1, 3)\n    {%- else -%}\n    monthname({{ date }})\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0289388, "supported_languages": null}, "macro.dbt_date.spark__month_name": {"name": "spark__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.spark__month_name", "macro_sql": "\n\n{%- macro spark__month_name(date, short) -%}\n{%- set f = 'MMM' if short else 'MMMM' -%}\n    date_format({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0291612, "supported_languages": null}, "macro.dbt_date.trino__month_name": {"name": "trino__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.trino__month_name", "macro_sql": "\n\n{%- macro trino__month_name(date, short) -%}\n{%- set f = 'b' if short else 'M' -%}\n    date_format({{ date }}, '%{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0293794, "supported_languages": null}, "macro.dbt_date.round_timestamp": {"name": "round_timestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/round_timestamp.sql", "original_file_path": "macros/calendar_date/round_timestamp.sql", "unique_id": "macro.dbt_date.round_timestamp", "macro_sql": "{% macro round_timestamp(timestamp) %}\n    {{ dbt.date_trunc(\"day\", dbt.dateadd(\"hour\", 12, timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.029646, "supported_languages": null}, "macro.dbt_date.week_start": {"name": "week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.week_start", "macro_sql": "{%- macro week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0301654, "supported_languages": null}, "macro.dbt_date.default__week_start": {"name": "default__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.default__week_start", "macro_sql": "{%- macro default__week_start(date) -%}\ncast({{ dbt.date_trunc('week', date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0303323, "supported_languages": null}, "macro.dbt_date.snowflake__week_start": {"name": "snowflake__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.snowflake__week_start", "macro_sql": "\n\n{%- macro snowflake__week_start(date) -%}\n    {#\n        Get the day of week offset: e.g. if the date is a Sunday,\n        dbt_date.day_of_week returns 1, so we subtract 1 to get a 0 offset\n    #}\n    {% set off_set = dbt_date.day_of_week(date, isoweek=False) ~ \" - 1\" %}\n    cast({{ dbt.dateadd(\"day\", \"-1 * (\" ~ off_set ~ \")\", date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.day_of_week", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0307307, "supported_languages": null}, "macro.dbt_date.postgres__week_start": {"name": "postgres__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.postgres__week_start", "macro_sql": "\n\n{%- macro postgres__week_start(date) -%}\n-- Sunday as week start date\ncast({{ dbt.dateadd('day', -1, dbt.date_trunc('week', dbt.dateadd('day', 1, date))) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.031026, "supported_languages": null}, "macro.dbt_date.duckdb__week_start": {"name": "duckdb__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.duckdb__week_start", "macro_sql": "\n\n{%- macro duckdb__week_start(date) -%}\n{{ return(dbt_date.postgres__week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0311909, "supported_languages": null}, "macro.dbt_date.iso_week_start": {"name": "iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.iso_week_start", "macro_sql": "{%- macro iso_week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0318387, "supported_languages": null}, "macro.dbt_date._iso_week_start": {"name": "_iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date._iso_week_start", "macro_sql": "{%- macro _iso_week_start(date, week_type) -%}\ncast({{ dbt.date_trunc(week_type, date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.032015, "supported_languages": null}, "macro.dbt_date.default__iso_week_start": {"name": "default__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.default__iso_week_start", "macro_sql": "\n\n{%- macro default__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.032168, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_start": {"name": "snowflake__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_start", "macro_sql": "\n\n{%- macro snowflake__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.03232, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_start": {"name": "postgres__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.postgres__iso_week_start", "macro_sql": "\n\n{%- macro postgres__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0324721, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_start": {"name": "duckdb__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_start", "macro_sql": "\n\n{%- macro duckdb__iso_week_start(date) -%}\n{{ return(dbt_date.postgres__iso_week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0326316, "supported_languages": null}, "macro.dbt_date.spark__iso_week_start": {"name": "spark__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.spark__iso_week_start", "macro_sql": "\n\n{%- macro spark__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.032786, "supported_languages": null}, "macro.dbt_date.trino__iso_week_start": {"name": "trino__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.trino__iso_week_start", "macro_sql": "\n\n{%- macro trino__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.032941, "supported_languages": null}, "macro.dbt_date.next_month_name": {"name": "next_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_name.sql", "original_file_path": "macros/calendar_date/next_month_name.sql", "unique_id": "macro.dbt_date.next_month_name", "macro_sql": "{%- macro next_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.next_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0332024, "supported_languages": null}, "macro.dbt_date.from_unixtimestamp": {"name": "from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.from_unixtimestamp", "macro_sql": "{%- macro from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {{ adapter.dispatch('from_unixtimestamp', 'dbt_date') (epochs, format) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__from_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0354695, "supported_languages": null}, "macro.dbt_date.default__from_unixtimestamp": {"name": "default__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__from_unixtimestamp", "macro_sql": "\n\n{%- macro default__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp({{ epochs }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.03576, "supported_languages": null}, "macro.dbt_date.postgres__from_unixtimestamp": {"name": "postgres__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.postgres__from_unixtimestamp", "macro_sql": "\n\n{%- macro postgres__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    cast(to_timestamp({{ epochs }}) at time zone 'UTC' as timestamp)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.036053, "supported_languages": null}, "macro.dbt_date.snowflake__from_unixtimestamp": {"name": "snowflake__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__from_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n    {%- set scale = 0 -%}\n    {%- elif format == \"milliseconds\" -%}\n    {%- set scale = 3 -%}\n    {%- elif format == \"microseconds\" -%}\n    {%- set scale = 6 -%}\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp_ntz({{ epochs }}, {{ scale }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.036574, "supported_languages": null}, "macro.dbt_date.bigquery__from_unixtimestamp": {"name": "bigquery__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__from_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n        timestamp_seconds({{ epochs }})\n    {%- elif format == \"milliseconds\" -%}\n        timestamp_millis({{ epochs }})\n    {%- elif format == \"microseconds\" -%}\n        timestamp_micros({{ epochs }})\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.037071, "supported_languages": null}, "macro.dbt_date.trino__from_unixtimestamp": {"name": "trino__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.trino__from_unixtimestamp", "macro_sql": "\n\n{%- macro trino__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n        cast(from_unixtime({{ epochs }}) AT TIME ZONE 'UTC' as {{ dbt.type_timestamp() }})\n    {%- elif format == \"milliseconds\" -%}\n        cast(from_unixtime_nanos({{ epochs }} * pow(10, 6)) AT TIME ZONE 'UTC' as {{ dbt.type_timestamp() }})\n    {%- elif format == \"microseconds\" -%}\n        cast(from_unixtime_nanos({{ epochs }} * pow(10, 3)) AT TIME ZONE 'UTC' as {{ dbt.type_timestamp() }})\n    {%- elif format == \"nanoseconds\" -%}\n        cast(from_unixtime_nanos({{ epochs }}) AT TIME ZONE 'UTC' as {{ dbt.type_timestamp() }})\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0377235, "supported_languages": null}, "macro.dbt_date.duckdb__from_unixtimestamp": {"name": "duckdb__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.duckdb__from_unixtimestamp", "macro_sql": "\n\n\n{%- macro duckdb__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    cast(to_timestamp({{ epochs }}) at time zone 'UTC' as timestamp)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0380158, "supported_languages": null}, "macro.dbt_date.tomorrow": {"name": "tomorrow", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/tomorrow.sql", "original_file_path": "macros/calendar_date/tomorrow.sql", "unique_id": "macro.dbt_date.tomorrow", "macro_sql": "{%- macro tomorrow(date=None, tz=None) -%}\n{{ dbt_date.n_days_away(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0382683, "supported_languages": null}, "macro.dbt_date.last_month_name": {"name": "last_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_name.sql", "original_file_path": "macros/calendar_date/last_month_name.sql", "unique_id": "macro.dbt_date.last_month_name", "macro_sql": "{%- macro last_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.last_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0385313, "supported_languages": null}, "macro.dbt_date.next_month": {"name": "next_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month.sql", "original_file_path": "macros/calendar_date/next_month.sql", "unique_id": "macro.dbt_date.next_month", "macro_sql": "{%- macro next_month(tz=None) -%}\n{{ dbt_date.n_months_away(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0387285, "supported_languages": null}, "macro.dbt_date.day_of_month": {"name": "day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.day_of_month", "macro_sql": "{%- macro day_of_month(date) -%}\n{{ dbt_date.date_part('day', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0389547, "supported_languages": null}, "macro.dbt_date.redshift__day_of_month": {"name": "redshift__day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.redshift__day_of_month", "macro_sql": "\n\n{%- macro redshift__day_of_month(date) -%}\ncast({{ dbt_date.date_part('day', date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.039162, "supported_languages": null}, "macro.dbt_date.date_part": {"name": "date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.date_part", "macro_sql": "{% macro date_part(datepart, date) -%}\n    {{ adapter.dispatch('date_part', 'dbt_date') (datepart, date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.039544, "supported_languages": null}, "macro.dbt_date.default__date_part": {"name": "default__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.default__date_part", "macro_sql": "{% macro default__date_part(datepart, date) -%}\n    date_part('{{ datepart }}', {{  date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0397024, "supported_languages": null}, "macro.dbt_date.bigquery__date_part": {"name": "bigquery__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.bigquery__date_part", "macro_sql": "{% macro bigquery__date_part(datepart, date) -%}\n    extract({{ datepart }} from {{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0398602, "supported_languages": null}, "macro.dbt_date.trino__date_part": {"name": "trino__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.trino__date_part", "macro_sql": "{% macro trino__date_part(datepart, date) -%}\n    extract({{ datepart }} from {{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0400128, "supported_languages": null}, "macro.dbt_date.last_month": {"name": "last_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month.sql", "original_file_path": "macros/calendar_date/last_month.sql", "unique_id": "macro.dbt_date.last_month", "macro_sql": "{%- macro last_month(tz=None) -%}\n{{ dbt_date.n_months_ago(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.04022, "supported_languages": null}, "macro.dbt_date.periods_since": {"name": "periods_since", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/periods_since.sql", "original_file_path": "macros/calendar_date/periods_since.sql", "unique_id": "macro.dbt_date.periods_since", "macro_sql": "{%- macro periods_since(date_col, period_name='day', tz=None) -%}\n{{ dbt.datediff(date_col, dbt_date.now(tz), period_name) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.datediff", "macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.040506, "supported_languages": null}, "macro.dbt_date.n_months_away": {"name": "n_months_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_away.sql", "original_file_path": "macros/calendar_date/n_months_away.sql", "unique_id": "macro.dbt_date.n_months_away", "macro_sql": "{%- macro n_months_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('month',\n    dbt.dateadd('month', n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0408857, "supported_languages": null}, "macro.dbt_date.last_month_number": {"name": "last_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_number.sql", "original_file_path": "macros/calendar_date/last_month_number.sql", "unique_id": "macro.dbt_date.last_month_number", "macro_sql": "{%- macro last_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.last_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.041125, "supported_languages": null}, "macro.dbt_date.iso_week_of_year": {"name": "iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.iso_week_of_year", "macro_sql": "{%- macro iso_week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0418534, "supported_languages": null}, "macro.dbt_date._iso_week_of_year": {"name": "_iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date._iso_week_of_year", "macro_sql": "{%- macro _iso_week_of_year(date, week_type) -%}\ncast({{ dbt_date.date_part(week_type, date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0420685, "supported_languages": null}, "macro.dbt_date.default__iso_week_of_year": {"name": "default__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.default__iso_week_of_year", "macro_sql": "\n\n{%- macro default__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0422275, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_of_year": {"name": "snowflake__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_of_year", "macro_sql": "\n\n{%- macro snowflake__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'weekiso') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0423899, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_of_year": {"name": "postgres__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.postgres__iso_week_of_year", "macro_sql": "\n\n{%- macro postgres__iso_week_of_year(date) -%}\n-- postgresql week is isoweek, the first week of a year containing January 4 of that year.\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0425572, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_of_year": {"name": "duckdb__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_of_year", "macro_sql": "\n\n{%- macro duckdb__iso_week_of_year(date) -%}\n{{ return(dbt_date.postgres__iso_week_of_year(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0427918, "supported_languages": null}, "macro.dbt_date.spark__iso_week_of_year": {"name": "spark__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.spark__iso_week_of_year", "macro_sql": "\n\n{%- macro spark__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0429535, "supported_languages": null}, "macro.dbt_date.trino__iso_week_of_year": {"name": "trino__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.trino__iso_week_of_year", "macro_sql": "\n\n{%- macro trino__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0431077, "supported_languages": null}, "macro.dbt_date.day_of_year": {"name": "day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.day_of_year", "macro_sql": "{%- macro day_of_year(date) -%}\n{{ adapter.dispatch('day_of_year', 'dbt_date') (date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__day_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0435143, "supported_languages": null}, "macro.dbt_date.default__day_of_year": {"name": "default__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.default__day_of_year", "macro_sql": "\n\n{%- macro default__day_of_year(date) -%}\n    {{ dbt_date.date_part('dayofyear', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0436678, "supported_languages": null}, "macro.dbt_date.postgres__day_of_year": {"name": "postgres__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.postgres__day_of_year", "macro_sql": "\n\n{%- macro postgres__day_of_year(date) -%}\n    {{ dbt_date.date_part('doy', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0438213, "supported_languages": null}, "macro.dbt_date.redshift__day_of_year": {"name": "redshift__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.redshift__day_of_year", "macro_sql": "\n\n{%- macro redshift__day_of_year(date) -%}\n    cast({{ dbt_date.date_part('dayofyear', date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0440238, "supported_languages": null}, "macro.dbt_date.spark__day_of_year": {"name": "spark__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.spark__day_of_year", "macro_sql": "\n\n{%- macro spark__day_of_year(date) -%}\n    dayofyear({{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0441391, "supported_languages": null}, "macro.dbt_date.trino__day_of_year": {"name": "trino__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.trino__day_of_year", "macro_sql": "\n\n{%- macro trino__day_of_year(date) -%}\n    {{ dbt_date.date_part('day_of_year', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0442905, "supported_languages": null}, "macro.dbt_date.yesterday": {"name": "yesterday", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/yesterday.sql", "original_file_path": "macros/calendar_date/yesterday.sql", "unique_id": "macro.dbt_date.yesterday", "macro_sql": "{%- macro yesterday(date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0445287, "supported_languages": null}, "macro.dbt_date.get_fiscal_periods": {"name": "get_fiscal_periods", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_periods.sql", "original_file_path": "macros/fiscal_date/get_fiscal_periods.sql", "unique_id": "macro.dbt_date.get_fiscal_periods", "macro_sql": "{% macro get_fiscal_periods(dates, year_end_month, week_start_day, shift_year=1) %}\n{#\nThis macro requires you to pass in a ref to a date dimension, created via\ndbt_date.get_date_dimension()s\n#}\nwith fscl_year_dates_for_periods as (\n    {{ dbt_date.get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) }}\n),\nfscl_year_w13 as (\n\n    select\n        f.*,\n        -- We count the weeks in a 13 week period\n        -- and separate the 4-5-4 week sequences\n        mod(cast(\n            (f.fiscal_week_of_year-1) as {{ dbt.type_int() }}\n            ), 13) as w13_number,\n        -- Chop weeks into 13 week merch quarters\n        cast(\n            least(\n                floor((f.fiscal_week_of_year-1)/13.0)\n                , 3)\n            as {{ dbt.type_int() }}) as quarter_number\n    from\n        fscl_year_dates_for_periods f\n\n),\nfscl_periods as (\n\n    select\n        f.date_day,\n        f.fiscal_year_number,\n        f.week_start_date,\n        f.week_end_date,\n        f.fiscal_week_of_year,\n        case\n            -- we move week 53 into the 3rd period of the quarter\n            when f.fiscal_week_of_year = 53 then 3\n            when f.w13_number between 0 and 3 then 1\n            when f.w13_number between 4 and 8 then 2\n            when f.w13_number between 9 and 12 then 3\n        end as period_of_quarter,\n        f.quarter_number\n    from\n        fscl_year_w13 f\n\n),\nfscl_periods_quarters as (\n\n    select\n        f.*,\n        cast((\n            (f.quarter_number * 3) + f.period_of_quarter\n         ) as {{ dbt.type_int() }}) as fiscal_period_number\n    from\n        fscl_periods f\n\n)\nselect\n    date_day,\n    fiscal_year_number,\n    week_start_date,\n    week_end_date,\n    fiscal_week_of_year,\n    dense_rank() over(partition by fiscal_period_number order by fiscal_week_of_year) as fiscal_week_of_period,\n    fiscal_period_number,\n    quarter_number+1 as fiscal_quarter_number,\n    period_of_quarter as fiscal_period_of_quarter\nfrom\n    fscl_periods_quarters\norder by 1,2\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_fiscal_year_dates", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0453708, "supported_languages": null}, "macro.dbt_date.get_fiscal_year_dates": {"name": "get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.get_fiscal_year_dates", "macro_sql": "{% macro get_fiscal_year_dates(dates, year_end_month=12, week_start_day=1, shift_year=1) %}\n{{ adapter.dispatch('get_fiscal_year_dates', 'dbt_date') (dates, year_end_month, week_start_day, shift_year) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_fiscal_year_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.0468974, "supported_languages": null}, "macro.dbt_date.default__get_fiscal_year_dates": {"name": "default__get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.default__get_fiscal_year_dates", "macro_sql": "{% macro default__get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) %}\n-- this gets all the dates within a fiscal year\n-- determined by the given year-end-month\n-- ending on the saturday closest to that month's end date\nwith fsc_date_dimension as (\n    select * from {{ dates }}\n),\nyear_month_end as (\n\n    select\n       d.year_number - {{ shift_year }} as fiscal_year_number,\n       d.month_end_date\n    from\n        fsc_date_dimension d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by 1,2\n\n),\nweeks as (\n\n    select\n        d.year_number,\n        d.month_of_year,\n        d.date_day as week_start_date,\n        cast({{ dbt.dateadd('day', 6, 'd.date_day') }} as date) as week_end_date\n    from\n        fsc_date_dimension d\n    where\n        d.day_of_week = {{ week_start_day }}\n\n),\n-- get all the weeks that start in the month the year ends\nyear_week_ends as (\n\n    select\n        d.year_number - {{ shift_year }} as fiscal_year_number,\n        d.week_end_date\n    from\n        weeks d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by\n        1,2\n\n),\n-- then calculate which Saturday is closest to month end\nweeks_at_month_end as (\n\n    select\n        d.fiscal_year_number,\n        d.week_end_date,\n        m.month_end_date,\n        rank() over\n            (partition by d.fiscal_year_number\n                order by\n                abs({{ dbt.datediff('d.week_end_date', 'm.month_end_date', 'day') }})\n\n            ) as closest_to_month_end\n    from\n        year_week_ends d\n        join\n        year_month_end m on d.fiscal_year_number = m.fiscal_year_number\n),\nfiscal_year_range as (\n\n    select\n        w.fiscal_year_number,\n        cast(\n            {{ dbt.dateadd('day', 1,\n            'lag(w.week_end_date) over(order by w.week_end_date)') }}\n            as date) as fiscal_year_start_date,\n        w.week_end_date as fiscal_year_end_date\n    from\n        weeks_at_month_end w\n    where\n        w.closest_to_month_end = 1\n\n),\nfiscal_year_dates as (\n\n    select\n        d.date_day,\n        m.fiscal_year_number,\n        m.fiscal_year_start_date,\n        m.fiscal_year_end_date,\n        w.week_start_date,\n        w.week_end_date,\n        -- we reset the weeks of the year starting with the merch year start date\n        dense_rank()\n            over(\n                partition by m.fiscal_year_number\n                order by w.week_start_date\n                ) as fiscal_week_of_year\n    from\n        fsc_date_dimension d\n        join\n        fiscal_year_range m on d.date_day between m.fiscal_year_start_date and m.fiscal_year_end_date\n        join\n        weeks w on d.date_day between w.week_start_date and w.week_end_date\n\n)\nselect * from fiscal_year_dates order by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1728271771.047549, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.project_dbt.T0202_credit_transfers": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.T0202_credit_transfers_TPP_check": ["source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED"], "model.project_dbt.T0401_misc": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS_DECRYPTED"], "model.project_dbt.T0402_AIS_ASPSP_API": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"], "model.project_dbt.T0402_AIS_PXG": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT"], "model.project_dbt.T0401_nr_of_accounts": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.KMS_C": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.KMS_P21_Inbound_transactions": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.KMS_P11_Outgoing_transactions": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.KMS_MRA": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_MERCHANTS_CURRENT"], "model.project_dbt.KMS_P6a_number_of_AIS": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT"], "model.project_dbt.KMS_P17_PIS": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED"], "model.project_dbt.KMS_P7a_number_of_accounts": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.KMS_C_non_euro_transactions": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.PAY_TROP_5845_IBIS": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.PAY_CPCL": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT"], "model.project_dbt.PAY_CPNC": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES"], "model.project_dbt.PAY_TROP_5845": ["model.project_dbt.PAY_TROP_5845_CMD", "model.project_dbt.PAY_TROP_5845_IBIS", "model.project_dbt.PAY_TROP_5845_PIS"], "model.project_dbt.PAY_CPMC": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS"], "model.project_dbt.PAY_TROP_5845_PIS": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED"], "model.project_dbt.PAY_CPCA": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO", "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT"], "model.project_dbt.PAY_TROP_5845_CMD": ["source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED"], "model.project_dbt.PAY_TRRT_5845": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_UNMATCHED_ACCOUNT_TRANSACTIONS"], "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals": ["model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo"], "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"], "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED"], "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.Banque_en_ligne": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.Cross_join": ["model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals", "source.project_dbt.source_dm_PPST_FR.COUNTRIES", "source.project_dbt.source_dm_PPST_FR.MCC_CODES"], "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V1230_number_of_accounts": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT"], "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V121_customer_credit_transfers_received": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V1222_stock_of_accessed_accounts": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT"], "model.project_dbt.V140_SEPA_R_transactions": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V1220_stock_of_accounts": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs": ["source.project_dbt.source_dwh_STRP.D_CI_CARD", "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT"], "model.project_dbt.V120_customer_credit_transfers_sent": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs": ["source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V1110_payment_initiation_services": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V142_intermediated_payment_transactions": ["source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.PI_FINAL_QUERY": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], "model.project_dbt.PCP_ATM": ["source.project_dbt.source_dwh_STRP.D_CI_CARD", "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT"], "model.project_dbt.PCP_BREAKDOWN_BY_SCA": ["model.project_dbt.PCP_MERCHANT_ACCT_TRX"], "model.project_dbt.PCT_INITIATED_BY_PISP": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_ASPSP_PAYMENT_INITIATION"], "model.project_dbt.PCP": ["model.project_dbt.SCA_MAPPING_TABLE", "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.SCA_MAPPING_TABLE": [], "model.project_dbt.PI_PXG_APPLICATION_MAPPING": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], "model.project_dbt.PCP_BREAKDOWN_BY_CARD": ["model.project_dbt.PCP_MERCHANT_ACCT_TRX"], "model.project_dbt.PCP_ALBATROS_CMD_OCS": ["source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_CURRENT", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED"], "model.project_dbt.PCT_IDEAL": ["source.project_dbt.source_dl_P1_PSTA.dwh_transaction_properties_current", "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS", "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS", "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS", "source.project_dbt.source_keyset__.merged"], "model.project_dbt.PCP_POS_ONLINE": ["source.project_dbt.source_dm_PPST_BE.PST3_MAPPING", "source.project_dbt.source_dwh_STRP.D_CI_CARD", "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION", "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT"], "model.project_dbt.NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"], "model.project_dbt.PCP_MERCHANT_ACCT_TRX": ["model.project_dbt.PCP", "model.project_dbt.PCP_ALBATROS_CMD_OCS", "source.project_dbt.source_dm_PPST_BE.PST3_MAPPING"], "model.project_dbt.PI_NUMBER_OF_PAYMENT_ACCOUNTS": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.PCT_OUTBOUND": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.PIS": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED"], "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], "model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES"], "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES"], "model.project_dbt.52525_FLOW_OF_NEW_CONTRACTS": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.58746_PAYMENT_INITIATIONS": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED"], "model.project_dbt.58788_AIS_USERS_AND_ACCOUNT": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT"], "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT"], "model.project_dbt.52505_NR_OF_ACCOUNTS": ["source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE"], "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK": ["source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED"], "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.Cuardro4_credit_transers_sent": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.Cuardro4_credit_transers_received": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.Cuadro1_accounts": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.Cuadro9_Credit_transfers_sent": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.Cuardro4_PIS": ["source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO", "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT", "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED"], "model.project_dbt.Cuadro1_number_of_AIS_PSUs": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT"], "model.project_dbt.Cuardro1_number_of_AISPs_accessing_UPP_accounts": ["source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP"], "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP": ["source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO", "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS", "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED"], "model.project_dbt.A1_Number_of_payment_accounts": ["source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT"], "model.project_dbt.ZVS9_PCT": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.ZVS41_Outbound_credit_transfers": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.A11_Number_of_payment_accounts_accessed_by_AISPs": ["source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED"], "model.project_dbt.ZVS41_Inbound_credit_transfers": ["source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT", "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED", "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT", "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED"], "model.project_dbt.dwh_strh_D_LEGAL_ENTITY_CURRENT": ["model.project_dbt.dwh_strh_D_LEGAL_ENTITY"], "model.project_dbt.dwh_strh_D_LEGAL_ENTITY": ["model.project_dbt.stg_strh_D_LEGAL_ENTITY"], "model.project_dbt.dwh_strh_D_ENTERPRISE_CURRENT": ["model.project_dbt.dwh_strh_D_ENTERPRISE"], "model.project_dbt.dwh_strh_D_ENTERPRISE": ["model.project_dbt.stg_strh_D_ENTERPRISE"], "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON_CURRENT": ["model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON"], "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON": ["model.project_dbt.stg_strh_D_AUTHORIZED_PERSON"], "model.project_dbt.stg_strh_D_LEGAL_ENTITY": ["source.project_dbt.stg_dl_h3_hkvk.public_RequestCache_current"], "model.project_dbt.stg_strh_D_ENTERPRISE": ["model.project_dbt.dwh_strh_D_LEGAL_ENTITY_CURRENT", "source.project_dbt.stg_dl_h3_hklc.public_tblKlantSysAttr_current", "source.project_dbt.stg_dl_h3_hklc.public_tblKlant_current", "source.project_dbt.stg_dl_h3_hklc.public_tblLand_current", "source.project_dbt.stg_dl_h3_hklc.public_tblSysteemAttribuut_current"], "model.project_dbt.stg_strh_D_AUTHORIZED_PERSON": ["source.project_dbt.stg_dl_h3_hehe.public_PersonAttribute_current", "source.project_dbt.stg_dl_h3_hehe.public_Person_current"], "model.project_dbt.dl_h1_hkvk_public_RequestCache_current": ["model.project_dbt.dl_h1_hkvk_public_RequestCache"], "model.project_dbt.dl_h1_hkvk_public_RequestCache": ["source.project_dbt.h1_hkvk.public_RequestCache"], "model.project_dbt.dl_h3_hklc_public_tblKlantDienst": ["source.project_dbt.h3_hklc.public_tblKlantDienst"], "model.project_dbt.dl_h3_hklc_public_tblKlantDienst_current": ["model.project_dbt.dl_h3_hklc_public_tblKlantDienst"], "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr_current": ["model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr"], "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr": ["source.project_dbt.h3_hklc.public_tblKlantSysAttr"], "model.project_dbt.dl_h3_hklc_public_DA_relationrole": ["source.project_dbt.h3_hklc.public_DA_relationrole"], "model.project_dbt.dl_h3_hklc_public_DA_relationrole_current": ["model.project_dbt.dl_h3_hklc_public_DA_relationrole"], "model.project_dbt.dl_h3_hklc_public_tblKlant_current": ["model.project_dbt.dl_h3_hklc_public_tblKlant"], "model.project_dbt.dl_h3_hklc_public_tblKlant": ["source.project_dbt.h3_hklc.public_tblKlant"], "model.project_dbt.dl_h3_hklc_public_tblAbonnement_current": ["model.project_dbt.dl_h3_hklc_public_tblAbonnement"], "model.project_dbt.dl_h3_hklc_public_tblAbonnement": ["source.project_dbt.h3_hklc.public_tblAbonnement"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement_current": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement": ["source.project_dbt.h3_hklc.public_tblKlantAbonnement"], "model.project_dbt.dl_h3_hklc_public_tblOrganisatie": ["source.project_dbt.h3_hklc.public_tblOrganisatie"], "model.project_dbt.dl_h3_hklc_public_tblOrganisatie_current": ["model.project_dbt.dl_h3_hklc_public_tblOrganisatie"], "model.project_dbt.dl_h3_hklc_public_tblFactType_current": ["model.project_dbt.dl_h3_hklc_public_tblFactType"], "model.project_dbt.dl_h3_hklc_public_tblFactType": ["source.project_dbt.h3_hklc.public_tblFactType"], "model.project_dbt.dl_h3_hklc_public_tblDienstType_current": ["model.project_dbt.dl_h3_hklc_public_tblDienstType"], "model.project_dbt.dl_h3_hklc_public_tblDienstType": ["source.project_dbt.h3_hklc.public_tblDienstType"], "model.project_dbt.dl_h3_hklc_public_DA_relation": ["source.project_dbt.h3_hklc.public_DA_relation"], "model.project_dbt.dl_h3_hklc_public_DA_relation_current": ["model.project_dbt.dl_h3_hklc_public_DA_relation"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik": ["source.project_dbt.h3_hklc.public_tblKlantAbonnementGebruik"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik_current": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr_current": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr": ["source.project_dbt.h3_hklc.public_tblKlantAbonnementSysAttr"], "model.project_dbt.dl_h3_hklc_public_tblAbonnementType_current": ["model.project_dbt.dl_h3_hklc_public_tblAbonnementType"], "model.project_dbt.dl_h3_hklc_public_tblAbonnementType": ["source.project_dbt.h3_hklc.public_tblAbonnementType"], "model.project_dbt.dl_h3_hklc_public_tblLand_current": ["model.project_dbt.dl_h3_hklc_public_tblLand"], "model.project_dbt.dl_h3_hklc_public_tblLand": ["source.project_dbt.h3_hklc.public_tblLand"], "model.project_dbt.dl_h3_hklc_public_tblDienst_current": ["model.project_dbt.dl_h3_hklc_public_tblDienst"], "model.project_dbt.dl_h3_hklc_public_tblDienst": ["source.project_dbt.h3_hklc.public_tblDienst"], "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory": ["source.project_dbt.h3_hklc.public_aselect_loginhistory"], "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory_current": ["model.project_dbt.dl_h3_hklc_public_aselect_loginhistory"], "model.project_dbt.dl_h3_hklc_public_tblBTW_current": ["model.project_dbt.dl_h3_hklc_public_tblBTW"], "model.project_dbt.dl_h3_hklc_public_tblBTW": ["source.project_dbt.h3_hklc.public_tblBTW"], "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging_current": ["model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging"], "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging": ["source.project_dbt.h3_hklc.public_tblKlantBankMachtiging"], "model.project_dbt.dl_h3_hklc_public_tblGrootboek": ["source.project_dbt.h3_hklc.public_tblGrootboek"], "model.project_dbt.dl_h3_hklc_public_tblGrootboek_current": ["model.project_dbt.dl_h3_hklc_public_tblGrootboek"], "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut_current": ["model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut"], "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut": ["source.project_dbt.h3_hklc.public_tblSysteemAttribuut"], "model.project_dbt.dl_h3_hklc_public_DA_relation_audit_current": ["model.project_dbt.dl_h3_hklc_public_DA_relation_audit"], "model.project_dbt.dl_h3_hklc_public_DA_relation_audit": ["source.project_dbt.h3_hklc.public_DA_relation_audit"], "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation_current": ["model.project_dbt.dl_h3_hehe_public_ChainedOrganisation"], "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation": ["source.project_dbt.h3_hehe.public_ChainedOrganisation"], "model.project_dbt.dl_h3_hehe_public_PersonAttribute_current": ["model.project_dbt.dl_h3_hehe_public_PersonAttribute"], "model.project_dbt.dl_h3_hehe_public_PersonAttribute": ["source.project_dbt.h3_hehe.public_PersonAttribute"], "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet": ["source.project_dbt.h3_hehe.public_AuditAuthenticationSet"], "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet_current": ["model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet"], "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject_current": ["model.project_dbt.dl_h3_hehe_public_AuthorizationSubject"], "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject": ["source.project_dbt.h3_hehe.public_AuthorizationSubject"], "model.project_dbt.dl_h3_hehe_public_AuthenticationSet": ["source.project_dbt.h3_hehe.public_AuthenticationSet"], "model.project_dbt.dl_h3_hehe_public_AuthenticationSet_current": ["model.project_dbt.dl_h3_hehe_public_AuthenticationSet"], "model.project_dbt.dl_h3_hehe_public_ChainAuthorization_current": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorization"], "model.project_dbt.dl_h3_hehe_public_ChainAuthorization": ["source.project_dbt.h3_hehe.public_ChainAuthorization"], "model.project_dbt.dl_h3_hehe_public_Group_current": ["model.project_dbt.dl_h3_hehe_public_Group"], "model.project_dbt.dl_h3_hehe_public_Group": ["source.project_dbt.h3_hehe.public_Group"], "model.project_dbt.dl_h3_hehe_public_ISO_Country": ["source.project_dbt.h3_hehe.public_ISO_Country"], "model.project_dbt.dl_h3_hehe_public_ISO_Country_current": ["model.project_dbt.dl_h3_hehe_public_ISO_Country"], "model.project_dbt.dl_h3_hehe_public_GroupUser": ["source.project_dbt.h3_hehe.public_GroupUser"], "model.project_dbt.dl_h3_hehe_public_GroupUser_current": ["model.project_dbt.dl_h3_hehe_public_GroupUser"], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink_current": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink"], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink": ["source.project_dbt.h3_hehe.public_PersonOrganisationLink"], "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13_current": ["model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13"], "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13": ["source.project_dbt.h3_hehe.public_ServiceAuthorization_1_13"], "model.project_dbt.dl_h3_hehe_public_Urn": ["source.project_dbt.h3_hehe.public_Urn"], "model.project_dbt.dl_h3_hehe_public_Urn_current": ["model.project_dbt.dl_h3_hehe_public_Urn"], "model.project_dbt.dl_h3_hehe_public_RegistrationLevel_current": ["model.project_dbt.dl_h3_hehe_public_RegistrationLevel"], "model.project_dbt.dl_h3_hehe_public_RegistrationLevel": ["source.project_dbt.h3_hehe.public_RegistrationLevel"], "model.project_dbt.dl_h3_hehe_public_Organisation_current": ["model.project_dbt.dl_h3_hehe_public_Organisation"], "model.project_dbt.dl_h3_hehe_public_Organisation": ["source.project_dbt.h3_hehe.public_Organisation"], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole": ["source.project_dbt.h3_hehe.public_PersonOrganisationRole"], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole_current": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole"], "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService": ["source.project_dbt.h3_hehe.public_IntermediateAuthorizationService"], "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService_current": ["model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService"], "model.project_dbt.dl_h3_hehe_public_ServiceProvider_current": ["model.project_dbt.dl_h3_hehe_public_ServiceProvider"], "model.project_dbt.dl_h3_hehe_public_ServiceProvider": ["source.project_dbt.h3_hehe.public_ServiceProvider"], "model.project_dbt.dl_h3_hehe_public_Service": ["source.project_dbt.h3_hehe.public_Service"], "model.project_dbt.dl_h3_hehe_public_Service_current": ["model.project_dbt.dl_h3_hehe_public_Service"], "model.project_dbt.dl_h3_hehe_public_Person_current": ["model.project_dbt.dl_h3_hehe_public_Person"], "model.project_dbt.dl_h3_hehe_public_Person": ["source.project_dbt.h3_hehe.public_Person"], "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions": ["source.project_dbt.h3_hehe.public_PersonUsageTransactions"], "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions_current": ["model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions"], "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService": ["source.project_dbt.h3_hehe.public_ChainAuthorizationService"], "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService_current": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService"], "model.project_dbt.dl_h3_hehe_public_Roles": ["source.project_dbt.h3_hehe.public_Roles"], "model.project_dbt.dl_h3_hehe_public_Roles_current": ["model.project_dbt.dl_h3_hehe_public_Roles"], "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO": [], "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS": [], "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO": [], "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP": [], "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO": [], "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS": [], "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS": [], "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS": [], "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS": [], "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_CI_CARD": [], "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION": [], "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT": [], "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT": [], "source.project_dbt.source_dwh_STRP.F_ASPSP_PAYMENT_INITIATION": [], "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE": [], "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT": [], "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES": [], "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT": [], "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED": [], "source.project_dbt.source_dwh_STRP.F_UNMATCHED_ACCOUNT_TRANSACTIONS": [], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS": [], "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT": [], "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT": [], "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS": [], "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO": [], "source.project_dbt.source_dwh_STRP.D_MERCHANTS_CURRENT": [], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS_DECRYPTED": [], "source.project_dbt.source_dm_PPST_BE.SCA_MAPPING_TABLE": [], "source.project_dbt.source_dm_PPST_BE.PCP": [], "source.project_dbt.source_dm_PPST_BE.PCP_ALBATROS_CMD_OCS": [], "source.project_dbt.source_dm_PPST_BE.PST3_MAPPING": [], "source.project_dbt.source_dm_PPST_BE.PCP_MERCHANT_ACCT_TRX": [], "source.project_dbt.source_dm_PPST_BE.PCP_POS_ONLINE": [], "source.project_dbt.source_dl_P1_PSTA.dwh_transaction_properties_current": [], "source.project_dbt.source_keyset__.merged": [], "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_IBIS": [], "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_CMD": [], "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_PIS": [], "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo": [], "source.project_dbt.source_dm_PPST_FR.COUNTRIES": [], "source.project_dbt.source_dm_PPST_FR.MCC_CODES": [], "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals": [], "source.project_dbt.dwh_strh.D_AUTHORIZED_PERSON": [], "source.project_dbt.dwh_strh.D_ENTERPRISE": [], "source.project_dbt.dwh_strh.D_LEGAL_ENTITY": [], "source.project_dbt.stg_dl_h3_hehe.public_Person_current": [], "source.project_dbt.stg_dl_h3_hehe.public_PersonAttribute_current": [], "source.project_dbt.stg_dl_h3_hklc.public_tblKlantSysAttr_current": [], "source.project_dbt.stg_dl_h3_hklc.public_tblSysteemAttribuut_current": [], "source.project_dbt.stg_dl_h3_hklc.public_tblLand_current": [], "source.project_dbt.stg_dl_h3_hklc.public_tblKlant_current": [], "source.project_dbt.stg_dl_h3_hkvk.public_RequestCache_current": [], "source.project_dbt.h1_hkvk.public_RequestCache": [], "source.project_dbt.h3_hklc.public_aselect_loginhistory": [], "source.project_dbt.h3_hklc.public_DA_relation": [], "source.project_dbt.h3_hklc.public_DA_relation_audit": [], "source.project_dbt.h3_hklc.public_DA_relationrole": [], "source.project_dbt.h3_hklc.public_tblAbonnement": [], "source.project_dbt.h3_hklc.public_tblAbonnementType": [], "source.project_dbt.h3_hklc.public_tblDienst": [], "source.project_dbt.h3_hklc.public_tblDienstType": [], "source.project_dbt.h3_hklc.public_tblFactType": [], "source.project_dbt.h3_hklc.public_tblGrootboek": [], "source.project_dbt.h3_hklc.public_tblKlant": [], "source.project_dbt.h3_hklc.public_tblKlantAbonnement": [], "source.project_dbt.h3_hklc.public_tblKlantAbonnementGebruik": [], "source.project_dbt.h3_hklc.public_tblKlantAbonnementSysAttr": [], "source.project_dbt.h3_hklc.public_tblKlantBankMachtiging": [], "source.project_dbt.h3_hklc.public_tblKlantDienst": [], "source.project_dbt.h3_hklc.public_tblKlantSysAttr": [], "source.project_dbt.h3_hklc.public_tblLand": [], "source.project_dbt.h3_hklc.public_tblOrganisatie": [], "source.project_dbt.h3_hklc.public_tblSysteemAttribuut": [], "source.project_dbt.h3_hklc.public_tblBTW": [], "source.project_dbt.h3_hehe.public_AuditAuthenticationSet": [], "source.project_dbt.h3_hehe.public_AuthenticationSet": [], "source.project_dbt.h3_hehe.public_AuthorizationSubject": [], "source.project_dbt.h3_hehe.public_ChainAuthorization": [], "source.project_dbt.h3_hehe.public_ChainAuthorizationService": [], "source.project_dbt.h3_hehe.public_ChainedOrganisation": [], "source.project_dbt.h3_hehe.public_Group": [], "source.project_dbt.h3_hehe.public_GroupUser": [], "source.project_dbt.h3_hehe.public_IntermediateAuthorizationService": [], "source.project_dbt.h3_hehe.public_Organisation": [], "source.project_dbt.h3_hehe.public_Person": [], "source.project_dbt.h3_hehe.public_PersonAttribute": [], "source.project_dbt.h3_hehe.public_PersonOrganisationLink": [], "source.project_dbt.h3_hehe.public_PersonOrganisationRole": [], "source.project_dbt.h3_hehe.public_PersonUsageTransactions": [], "source.project_dbt.h3_hehe.public_ServiceAuthorization_1_13": [], "source.project_dbt.h3_hehe.public_Urn": [], "source.project_dbt.h3_hehe.public_ISO_Country": [], "source.project_dbt.h3_hehe.public_RegistrationLevel": [], "source.project_dbt.h3_hehe.public_Roles": [], "source.project_dbt.h3_hehe.public_Service": [], "source.project_dbt.h3_hehe.public_ServiceProvider": []}, "child_map": {"model.project_dbt.T0202_credit_transfers": [], "model.project_dbt.T0202_credit_transfers_TPP_check": [], "model.project_dbt.T0401_misc": [], "model.project_dbt.T0402_AIS_ASPSP_API": [], "model.project_dbt.T0402_AIS_PXG": [], "model.project_dbt.T0401_nr_of_accounts": [], "model.project_dbt.KMS_C": [], "model.project_dbt.KMS_P21_Inbound_transactions": [], "model.project_dbt.KMS_P11_Outgoing_transactions": [], "model.project_dbt.KMS_MRA": [], "model.project_dbt.KMS_P6a_number_of_AIS": [], "model.project_dbt.KMS_P17_PIS": [], "model.project_dbt.KMS_P7a_number_of_accounts": [], "model.project_dbt.KMS_C_non_euro_transactions": [], "model.project_dbt.PAY_TROP_5845_IBIS": ["model.project_dbt.PAY_TROP_5845"], "model.project_dbt.PAY_CPCL": [], "model.project_dbt.PAY_CPNC": [], "model.project_dbt.PAY_TROP_5845": [], "model.project_dbt.PAY_CPMC": [], "model.project_dbt.PAY_TROP_5845_PIS": ["model.project_dbt.PAY_TROP_5845"], "model.project_dbt.PAY_CPCA": [], "model.project_dbt.PAY_TROP_5845_CMD": ["model.project_dbt.PAY_TROP_5845"], "model.project_dbt.PAY_TRRT_5845": [], "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals": ["model.project_dbt.Cross_join"], "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI": [], "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU": [], "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE": [], "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG": [], "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo": ["model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals"], "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo": [], "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP": [], "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE": [], "model.project_dbt.Banque_en_ligne": [], "model.project_dbt.Cross_join": [], "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo": [], "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo": [], "model.project_dbt.V1230_number_of_accounts": [], "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP": [], "model.project_dbt.V121_customer_credit_transfers_received": [], "model.project_dbt.V1222_stock_of_accessed_accounts": [], "model.project_dbt.V140_SEPA_R_transactions": [], "model.project_dbt.V1220_stock_of_accounts": [], "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs": [], "model.project_dbt.V120_customer_credit_transfers_sent": [], "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs": [], "model.project_dbt.V1110_payment_initiation_services": [], "model.project_dbt.V142_intermediated_payment_transactions": [], "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP": [], "model.project_dbt.PI_FINAL_QUERY": [], "model.project_dbt.PCP_ATM": [], "model.project_dbt.PCP_BREAKDOWN_BY_SCA": [], "model.project_dbt.PCT_INITIATED_BY_PISP": [], "model.project_dbt.PCP": ["model.project_dbt.PCP_MERCHANT_ACCT_TRX"], "model.project_dbt.SCA_MAPPING_TABLE": ["model.project_dbt.PCP"], "model.project_dbt.PI_PXG_APPLICATION_MAPPING": [], "model.project_dbt.PCP_BREAKDOWN_BY_CARD": [], "model.project_dbt.PCP_ALBATROS_CMD_OCS": ["model.project_dbt.PCP_MERCHANT_ACCT_TRX"], "model.project_dbt.PCT_IDEAL": [], "model.project_dbt.PCP_POS_ONLINE": [], "model.project_dbt.NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS": [], "model.project_dbt.PCP_MERCHANT_ACCT_TRX": ["model.project_dbt.PCP_BREAKDOWN_BY_CARD", "model.project_dbt.PCP_BREAKDOWN_BY_SCA"], "model.project_dbt.PI_NUMBER_OF_PAYMENT_ACCOUNTS": [], "model.project_dbt.PCT_OUTBOUND": [], "model.project_dbt.PIS": [], "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN": [], "model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS": [], "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS": [], "model.project_dbt.52525_FLOW_OF_NEW_CONTRACTS": [], "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS": [], "model.project_dbt.58746_PAYMENT_INITIATIONS": [], "model.project_dbt.58788_AIS_USERS_AND_ACCOUNT": [], "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT": [], "model.project_dbt.52505_NR_OF_ACCOUNTS": [], "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK": [], "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN": [], "model.project_dbt.Cuardro4_credit_transers_sent": [], "model.project_dbt.Cuardro4_credit_transers_received": [], "model.project_dbt.Cuadro1_accounts": [], "model.project_dbt.Cuadro9_Credit_transfers_sent": [], "model.project_dbt.Cuardro4_PIS": [], "model.project_dbt.Cuadro1_number_of_AIS_PSUs": [], "model.project_dbt.Cuardro1_number_of_AISPs_accessing_UPP_accounts": [], "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP": [], "model.project_dbt.A1_Number_of_payment_accounts": [], "model.project_dbt.ZVS9_PCT": [], "model.project_dbt.ZVS41_Outbound_credit_transfers": [], "model.project_dbt.A11_Number_of_payment_accounts_accessed_by_AISPs": [], "model.project_dbt.ZVS41_Inbound_credit_transfers": [], "model.project_dbt.dwh_strh_D_LEGAL_ENTITY_CURRENT": ["model.project_dbt.stg_strh_D_ENTERPRISE"], "model.project_dbt.dwh_strh_D_LEGAL_ENTITY": ["model.project_dbt.dwh_strh_D_LEGAL_ENTITY_CURRENT"], "model.project_dbt.dwh_strh_D_ENTERPRISE_CURRENT": [], "model.project_dbt.dwh_strh_D_ENTERPRISE": ["model.project_dbt.dwh_strh_D_ENTERPRISE_CURRENT"], "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON_CURRENT": [], "model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON": ["model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON_CURRENT"], "model.project_dbt.stg_strh_D_LEGAL_ENTITY": ["model.project_dbt.dwh_strh_D_LEGAL_ENTITY"], "model.project_dbt.stg_strh_D_ENTERPRISE": ["model.project_dbt.dwh_strh_D_ENTERPRISE"], "model.project_dbt.stg_strh_D_AUTHORIZED_PERSON": ["model.project_dbt.dwh_strh_D_AUTHORIZED_PERSON"], "model.project_dbt.dl_h1_hkvk_public_RequestCache_current": [], "model.project_dbt.dl_h1_hkvk_public_RequestCache": ["model.project_dbt.dl_h1_hkvk_public_RequestCache_current"], "model.project_dbt.dl_h3_hklc_public_tblKlantDienst": ["model.project_dbt.dl_h3_hklc_public_tblKlantDienst_current"], "model.project_dbt.dl_h3_hklc_public_tblKlantDienst_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr": ["model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr_current"], "model.project_dbt.dl_h3_hklc_public_DA_relationrole": ["model.project_dbt.dl_h3_hklc_public_DA_relationrole_current"], "model.project_dbt.dl_h3_hklc_public_DA_relationrole_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlant_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlant": ["model.project_dbt.dl_h3_hklc_public_tblKlant_current"], "model.project_dbt.dl_h3_hklc_public_tblAbonnement_current": [], "model.project_dbt.dl_h3_hklc_public_tblAbonnement": ["model.project_dbt.dl_h3_hklc_public_tblAbonnement_current"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement_current"], "model.project_dbt.dl_h3_hklc_public_tblOrganisatie": ["model.project_dbt.dl_h3_hklc_public_tblOrganisatie_current"], "model.project_dbt.dl_h3_hklc_public_tblOrganisatie_current": [], "model.project_dbt.dl_h3_hklc_public_tblFactType_current": [], "model.project_dbt.dl_h3_hklc_public_tblFactType": ["model.project_dbt.dl_h3_hklc_public_tblFactType_current"], "model.project_dbt.dl_h3_hklc_public_tblDienstType_current": [], "model.project_dbt.dl_h3_hklc_public_tblDienstType": ["model.project_dbt.dl_h3_hklc_public_tblDienstType_current"], "model.project_dbt.dl_h3_hklc_public_DA_relation": ["model.project_dbt.dl_h3_hklc_public_DA_relation_current"], "model.project_dbt.dl_h3_hklc_public_DA_relation_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik_current"], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr_current"], "model.project_dbt.dl_h3_hklc_public_tblAbonnementType_current": [], "model.project_dbt.dl_h3_hklc_public_tblAbonnementType": ["model.project_dbt.dl_h3_hklc_public_tblAbonnementType_current"], "model.project_dbt.dl_h3_hklc_public_tblLand_current": [], "model.project_dbt.dl_h3_hklc_public_tblLand": ["model.project_dbt.dl_h3_hklc_public_tblLand_current"], "model.project_dbt.dl_h3_hklc_public_tblDienst_current": [], "model.project_dbt.dl_h3_hklc_public_tblDienst": ["model.project_dbt.dl_h3_hklc_public_tblDienst_current"], "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory": ["model.project_dbt.dl_h3_hklc_public_aselect_loginhistory_current"], "model.project_dbt.dl_h3_hklc_public_aselect_loginhistory_current": [], "model.project_dbt.dl_h3_hklc_public_tblBTW_current": [], "model.project_dbt.dl_h3_hklc_public_tblBTW": ["model.project_dbt.dl_h3_hklc_public_tblBTW_current"], "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging_current": [], "model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging": ["model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging_current"], "model.project_dbt.dl_h3_hklc_public_tblGrootboek": ["model.project_dbt.dl_h3_hklc_public_tblGrootboek_current"], "model.project_dbt.dl_h3_hklc_public_tblGrootboek_current": [], "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut_current": [], "model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut": ["model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut_current"], "model.project_dbt.dl_h3_hklc_public_DA_relation_audit_current": [], "model.project_dbt.dl_h3_hklc_public_DA_relation_audit": ["model.project_dbt.dl_h3_hklc_public_DA_relation_audit_current"], "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation_current": [], "model.project_dbt.dl_h3_hehe_public_ChainedOrganisation": ["model.project_dbt.dl_h3_hehe_public_ChainedOrganisation_current"], "model.project_dbt.dl_h3_hehe_public_PersonAttribute_current": [], "model.project_dbt.dl_h3_hehe_public_PersonAttribute": ["model.project_dbt.dl_h3_hehe_public_PersonAttribute_current"], "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet": ["model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet_current"], "model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet_current": [], "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject_current": [], "model.project_dbt.dl_h3_hehe_public_AuthorizationSubject": ["model.project_dbt.dl_h3_hehe_public_AuthorizationSubject_current"], "model.project_dbt.dl_h3_hehe_public_AuthenticationSet": ["model.project_dbt.dl_h3_hehe_public_AuthenticationSet_current"], "model.project_dbt.dl_h3_hehe_public_AuthenticationSet_current": [], "model.project_dbt.dl_h3_hehe_public_ChainAuthorization_current": [], "model.project_dbt.dl_h3_hehe_public_ChainAuthorization": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorization_current"], "model.project_dbt.dl_h3_hehe_public_Group_current": [], "model.project_dbt.dl_h3_hehe_public_Group": ["model.project_dbt.dl_h3_hehe_public_Group_current"], "model.project_dbt.dl_h3_hehe_public_ISO_Country": ["model.project_dbt.dl_h3_hehe_public_ISO_Country_current"], "model.project_dbt.dl_h3_hehe_public_ISO_Country_current": [], "model.project_dbt.dl_h3_hehe_public_GroupUser": ["model.project_dbt.dl_h3_hehe_public_GroupUser_current"], "model.project_dbt.dl_h3_hehe_public_GroupUser_current": [], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink_current": [], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink_current"], "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13_current": [], "model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13": ["model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13_current"], "model.project_dbt.dl_h3_hehe_public_Urn": ["model.project_dbt.dl_h3_hehe_public_Urn_current"], "model.project_dbt.dl_h3_hehe_public_Urn_current": [], "model.project_dbt.dl_h3_hehe_public_RegistrationLevel_current": [], "model.project_dbt.dl_h3_hehe_public_RegistrationLevel": ["model.project_dbt.dl_h3_hehe_public_RegistrationLevel_current"], "model.project_dbt.dl_h3_hehe_public_Organisation_current": [], "model.project_dbt.dl_h3_hehe_public_Organisation": ["model.project_dbt.dl_h3_hehe_public_Organisation_current"], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole_current"], "model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole_current": [], "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService": ["model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService_current"], "model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService_current": [], "model.project_dbt.dl_h3_hehe_public_ServiceProvider_current": [], "model.project_dbt.dl_h3_hehe_public_ServiceProvider": ["model.project_dbt.dl_h3_hehe_public_ServiceProvider_current"], "model.project_dbt.dl_h3_hehe_public_Service": ["model.project_dbt.dl_h3_hehe_public_Service_current"], "model.project_dbt.dl_h3_hehe_public_Service_current": [], "model.project_dbt.dl_h3_hehe_public_Person_current": [], "model.project_dbt.dl_h3_hehe_public_Person": ["model.project_dbt.dl_h3_hehe_public_Person_current"], "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions": ["model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions_current"], "model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions_current": [], "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService_current"], "model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService_current": [], "model.project_dbt.dl_h3_hehe_public_Roles": ["model.project_dbt.dl_h3_hehe_public_Roles_current"], "model.project_dbt.dl_h3_hehe_public_Roles_current": [], "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT_CURRENT": ["model.project_dbt.52505_NR_OF_ACCOUNTS", "model.project_dbt.52525_FLOW_OF_NEW_CONTRACTS", "model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS", "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "model.project_dbt.A1_Number_of_payment_accounts", "model.project_dbt.Banque_en_ligne", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "model.project_dbt.Cuadro1_accounts", "model.project_dbt.Cuadro9_Credit_transfers_sent", "model.project_dbt.Cuardro4_credit_transers_received", "model.project_dbt.Cuardro4_credit_transers_sent", "model.project_dbt.KMS_C", "model.project_dbt.KMS_C_non_euro_transactions", "model.project_dbt.KMS_P11_Outgoing_transactions", "model.project_dbt.KMS_P21_Inbound_transactions", "model.project_dbt.KMS_P7a_number_of_accounts", "model.project_dbt.PAY_CPNC", "model.project_dbt.PAY_TROP_5845_IBIS", "model.project_dbt.PAY_TRRT_5845", "model.project_dbt.PCT_INITIATED_BY_PISP", "model.project_dbt.PCT_OUTBOUND", "model.project_dbt.PI_NUMBER_OF_PAYMENT_ACCOUNTS", "model.project_dbt.T0202_credit_transfers", "model.project_dbt.T0401_misc", "model.project_dbt.T0401_nr_of_accounts", "model.project_dbt.V120_customer_credit_transfers_sent", "model.project_dbt.V121_customer_credit_transfers_received", "model.project_dbt.V1220_stock_of_accounts", "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP", "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP", "model.project_dbt.V140_SEPA_R_transactions", "model.project_dbt.ZVS41_Inbound_credit_transfers", "model.project_dbt.ZVS41_Outbound_credit_transfers", "model.project_dbt.ZVS9_PCT"], "source.project_dbt.source_dwh_STRP.D_BANK_ACCOUNTS_DECRYPTED": ["model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS", "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.A1_Number_of_payment_accounts", "model.project_dbt.Banque_en_ligne", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "model.project_dbt.Cuadro1_accounts", "model.project_dbt.Cuadro9_Credit_transfers_sent", "model.project_dbt.Cuardro4_PIS", "model.project_dbt.Cuardro4_credit_transers_received", "model.project_dbt.Cuardro4_credit_transers_sent", "model.project_dbt.KMS_C", "model.project_dbt.KMS_C_non_euro_transactions", "model.project_dbt.KMS_MRA", "model.project_dbt.KMS_P11_Outgoing_transactions", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.KMS_P21_Inbound_transactions", "model.project_dbt.KMS_P7a_number_of_accounts", "model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPMC", "model.project_dbt.PAY_TROP_5845_IBIS", "model.project_dbt.PAY_TROP_5845_PIS", "model.project_dbt.PAY_TRRT_5845", "model.project_dbt.PCT_INITIATED_BY_PISP", "model.project_dbt.PCT_OUTBOUND", "model.project_dbt.PIS", "model.project_dbt.PI_NUMBER_OF_PAYMENT_ACCOUNTS", "model.project_dbt.T0202_credit_transfers", "model.project_dbt.T0401_misc", "model.project_dbt.T0401_nr_of_accounts", "model.project_dbt.V1110_payment_initiation_services", "model.project_dbt.V120_customer_credit_transfers_sent", "model.project_dbt.V121_customer_credit_transfers_received", "model.project_dbt.V1220_stock_of_accounts", "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP", "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP", "model.project_dbt.V140_SEPA_R_transactions", "model.project_dbt.ZVS41_Inbound_credit_transfers", "model.project_dbt.ZVS41_Outbound_credit_transfers", "model.project_dbt.ZVS9_PCT"], "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO": ["model.project_dbt.Cuadro1_number_of_AIS_PSUs", "model.project_dbt.KMS_P6a_number_of_AIS", "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "model.project_dbt.T0402_AIS_PXG", "model.project_dbt.V1222_stock_of_accessed_accounts", "model.project_dbt.V1230_number_of_accounts"], "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_CURRENT": ["model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "model.project_dbt.Cuadro1_number_of_AIS_PSUs", "model.project_dbt.KMS_P6a_number_of_AIS", "model.project_dbt.T0402_AIS_PXG", "model.project_dbt.V1222_stock_of_accessed_accounts", "model.project_dbt.V1230_number_of_accounts"], "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS_DECRYPTED": ["model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "model.project_dbt.Cuadro1_number_of_AIS_PSUs", "model.project_dbt.Cuardro4_PIS", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.KMS_P6a_number_of_AIS", "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "model.project_dbt.PAY_TROP_5845_PIS", "model.project_dbt.PIS", "model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "model.project_dbt.PI_PXG_APPLICATION_MAPPING", "model.project_dbt.T0402_AIS_PXG", "model.project_dbt.V1110_payment_initiation_services", "model.project_dbt.V1222_stock_of_accessed_accounts", "model.project_dbt.V1230_number_of_accounts"], "source.project_dbt.source_dwh_STRP.D_FINANCIAL_INSTITUTIONS": ["model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "model.project_dbt.Cuadro1_number_of_AIS_PSUs", "model.project_dbt.Cuardro4_PIS", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.KMS_P6a_number_of_AIS", "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPCL", "model.project_dbt.PAY_TROP_5845_PIS", "model.project_dbt.PIS", "model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "model.project_dbt.PI_PXG_APPLICATION_MAPPING", "model.project_dbt.T0402_AIS_PXG", "model.project_dbt.V1110_payment_initiation_services", "model.project_dbt.V1222_stock_of_accessed_accounts", "model.project_dbt.V1230_number_of_accounts"], "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO": ["model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "model.project_dbt.Cuadro1_number_of_AIS_PSUs", "model.project_dbt.KMS_P6a_number_of_AIS", "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPCL", "model.project_dbt.T0402_AIS_PXG", "model.project_dbt.V1222_stock_of_accessed_accounts", "model.project_dbt.V1230_number_of_accounts"], "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO_DECRYPTED": ["model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "model.project_dbt.Cuadro1_number_of_AIS_PSUs", "model.project_dbt.KMS_P6a_number_of_AIS", "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "model.project_dbt.PI_PXG_APPLICATION_MAPPING", "model.project_dbt.T0402_AIS_PXG", "model.project_dbt.V1222_stock_of_accessed_accounts", "model.project_dbt.V1230_number_of_accounts"], "source.project_dbt.source_dwh_STRP.D_APPLICATIONS_DECRYPTED": ["model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "model.project_dbt.Cuadro1_number_of_AIS_PSUs", "model.project_dbt.Cuardro4_PIS", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.KMS_P6a_number_of_AIS", "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPCL", "model.project_dbt.PAY_TROP_5845_PIS", "model.project_dbt.PIS", "model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "model.project_dbt.PI_PXG_APPLICATION_MAPPING", "model.project_dbt.T0402_AIS_PXG", "model.project_dbt.V1110_payment_initiation_services", "model.project_dbt.V1222_stock_of_accessed_accounts", "model.project_dbt.V1230_number_of_accounts"], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_TRANSACTIONS_DECRYPTED": ["model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS", "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "model.project_dbt.Cuadro9_Credit_transfers_sent", "model.project_dbt.Cuardro4_credit_transers_received", "model.project_dbt.Cuardro4_credit_transers_sent", "model.project_dbt.KMS_C", "model.project_dbt.KMS_C_non_euro_transactions", "model.project_dbt.KMS_P11_Outgoing_transactions", "model.project_dbt.KMS_P21_Inbound_transactions", "model.project_dbt.PAY_TROP_5845_IBIS", "model.project_dbt.PAY_TRRT_5845", "model.project_dbt.PCT_INITIATED_BY_PISP", "model.project_dbt.PCT_OUTBOUND", "model.project_dbt.T0202_credit_transfers", "model.project_dbt.V120_customer_credit_transfers_sent", "model.project_dbt.V121_customer_credit_transfers_received", "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP", "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP", "model.project_dbt.V140_SEPA_R_transactions", "model.project_dbt.ZVS41_Inbound_credit_transfers", "model.project_dbt.ZVS41_Outbound_credit_transfers", "model.project_dbt.ZVS9_PCT"], "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_CURRENT": ["model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "model.project_dbt.58724_CREDIT_TRANSFERS_SINGLE_BASIS", "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_EMI", "model.project_dbt.C4_agMoyPaiTypeOpeZoneGeo_VIR_RECU", "model.project_dbt.C6B_agMoyPaiTypeOpeCanalTransactSchemaFctAuthZoneGeo", "model.project_dbt.C7_agMoyPaiTypeOpeSystZoneGeo", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_ELECTRONIQUE", "model.project_dbt.C8_agMoyPaiTypeOpeCanalTypeCanalZoneGeo_NON_ELECTRONIQUE", "model.project_dbt.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo", "model.project_dbt.Cuadro9_Credit_transfers_sent", "model.project_dbt.Cuardro4_credit_transers_received", "model.project_dbt.Cuardro4_credit_transers_sent", "model.project_dbt.KMS_C", "model.project_dbt.KMS_C_non_euro_transactions", "model.project_dbt.KMS_P11_Outgoing_transactions", "model.project_dbt.KMS_P21_Inbound_transactions", "model.project_dbt.PAY_TRRT_5845", "model.project_dbt.PCT_INITIATED_BY_PISP", "model.project_dbt.PCT_OUTBOUND", "model.project_dbt.T0202_credit_transfers", "model.project_dbt.V120_customer_credit_transfers_sent", "model.project_dbt.V121_customer_credit_transfers_received", "model.project_dbt.V130_direct_debits_reporting_as_creditors_PSP", "model.project_dbt.V131_direct_debits_reporting_as_debtors_PSP", "model.project_dbt.V140_SEPA_R_transactions", "model.project_dbt.ZVS41_Inbound_credit_transfers", "model.project_dbt.ZVS41_Outbound_credit_transfers", "model.project_dbt.ZVS9_PCT"], "source.project_dbt.source_dwh_STRP.D_ASPSP_CONSENT_DECRYPTED": ["model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "model.project_dbt.Cuardro1_number_of_AISPs_accessing_UPP_accounts", "model.project_dbt.NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "model.project_dbt.PAY_CPCA", "model.project_dbt.T0402_AIS_ASPSP_API", "model.project_dbt.V1222_stock_of_accessed_accounts"], "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP": ["model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG", "model.project_dbt.Cuardro1_number_of_AISPs_accessing_UPP_accounts", "model.project_dbt.NUMBER_OF_PAYMENT_ACCOUNTS_ACCESSED_BY_AISPS", "model.project_dbt.PAY_CPCA", "model.project_dbt.PCT_INITIATED_BY_PISP", "model.project_dbt.T0402_AIS_ASPSP_API", "model.project_dbt.V1222_stock_of_accessed_accounts"], "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_DECRYPTED": ["model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.Cuardro4_PIS", "model.project_dbt.PAY_TROP_5845_PIS"], "source.project_dbt.source_dwh_STRP.F_INBOUND_TRANSACTIONS_DECRYPTED": ["model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.Cuardro4_PIS", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.PAY_TROP_5845_PIS", "model.project_dbt.PIS", "model.project_dbt.V1110_payment_initiation_services"], "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO": ["model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.Cuardro4_PIS", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.PIS", "model.project_dbt.V1110_payment_initiation_services"], "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS_CURRENT": ["model.project_dbt.58746_PAYMENT_INITIATIONS", "model.project_dbt.Cuardro4_PIS"], "source.project_dbt.source_dwh_STRP.D_PAYMENT_ITEM_INFO_DECRYPTED": ["model.project_dbt.PCP", "model.project_dbt.PCT_IDEAL", "model.project_dbt.V142_intermediated_payment_transactions", "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs"], "source.project_dbt.source_dwh_STRP.F_PAYMENT_ITEMS": ["model.project_dbt.PCP", "model.project_dbt.PCT_IDEAL", "model.project_dbt.V142_intermediated_payment_transactions", "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs"], "source.project_dbt.source_dwh_STRP.D_MERCHANTS_DECRYPTED": ["model.project_dbt.PCP", "model.project_dbt.PCT_IDEAL", "model.project_dbt.V142_intermediated_payment_transactions", "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs"], "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS_DECRYPTED": ["model.project_dbt.PCP", "model.project_dbt.V142_intermediated_payment_transactions", "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs"], "source.project_dbt.source_dwh_STRP.D_PAYMENT_TRANSACTION_INFO_DECRYPTED": ["model.project_dbt.PCP", "model.project_dbt.PCT_IDEAL", "model.project_dbt.V142_intermediated_payment_transactions", "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs"], "source.project_dbt.source_dwh_STRP.D_PAYMENT_PRODUCTS": ["model.project_dbt.PCP", "model.project_dbt.PCT_IDEAL", "model.project_dbt.V142_intermediated_payment_transactions", "model.project_dbt.V152_card_transactions_acquired_by_resident_PSPs"], "source.project_dbt.source_dwh_STRP.F_PAYMENT_TRANSACTIONS": ["model.project_dbt.PCT_IDEAL"], "source.project_dbt.source_dwh_STRP.D_APPLICATION_OWNERS_DECRYPTED": ["model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "model.project_dbt.PI_PXG_APPLICATION_MAPPING"], "source.project_dbt.source_dwh_STRP.D_CONTRACT_INFO_CURRENT": ["model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "model.project_dbt.PI_PXG_APPLICATION_MAPPING"], "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT_DECRYPTED": ["model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "model.project_dbt.NC1_Number_of_payment_accounts_accessed_by_UPP", "model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN", "model.project_dbt.PI_PXG_APPLICATION_MAPPING"], "source.project_dbt.source_dwh_STRP.D_INBOUND_PAYMENT_INFO_CURRENT": ["model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.PIS", "model.project_dbt.V1110_payment_initiation_services"], "source.project_dbt.source_dwh_STRP.D_PAYMENT_INITIATIONS": ["model.project_dbt.C6_agMoyPaiTypeOpeCanalTransactAuthZoneGeo", "model.project_dbt.KMS_P17_PIS", "model.project_dbt.PAY_TROP_5845_PIS", "model.project_dbt.PIS", "model.project_dbt.V1110_payment_initiation_services"], "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_CURRENT": ["model.project_dbt.PCP_ALBATROS_CMD_OCS"], "source.project_dbt.source_dwh_STRP.D_LEGAL_ENTITY_DECRYPTED": ["model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "model.project_dbt.PAY_CPNC", "model.project_dbt.PAY_TROP_5845_CMD", "model.project_dbt.PCP_ALBATROS_CMD_OCS"], "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_CURRENT": ["model.project_dbt.58788_AIS_USERS_AND_ACCOUNT", "model.project_dbt.58789_AIS_USERS_AND_ACCOUNT", "model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPCL", "model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN"], "source.project_dbt.source_dwh_STRP.D_ACCESS_CONSENT_INFO_DECRYPTED": ["model.project_dbt.CPTE_PAIEMT_CONSULT_VIA_SERV_TIERS_AGREG_PSP", "model.project_dbt.PI_FINAL_QUERY", "model.project_dbt.PI_PXG_AIS_JeF_with_BE_IBIS_IBAN"], "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_DECRYPTED": ["model.project_dbt.PCP_ATM", "model.project_dbt.PCP_POS_ONLINE", "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs"], "source.project_dbt.source_dwh_STRP.D_CI_CARD": ["model.project_dbt.PCP_ATM", "model.project_dbt.PCP_POS_ONLINE", "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs"], "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION": ["model.project_dbt.PCP_ATM", "model.project_dbt.PCP_POS_ONLINE", "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs"], "source.project_dbt.source_dwh_STRP.F_CI_CARD_TRANSACTION_EVENT": ["model.project_dbt.PCP_ATM", "model.project_dbt.PCP_POS_ONLINE", "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs"], "source.project_dbt.source_dwh_STRP.D_CI_CARD_PRODUCT_DECRYPTED": ["model.project_dbt.PCP_ATM", "model.project_dbt.PCP_POS_ONLINE", "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs"], "source.project_dbt.source_dwh_STRP.D_CI_CARD_TRANSACTION_EVENT": ["model.project_dbt.PCP_POS_ONLINE", "model.project_dbt.V150_card_transactions_with_cards_issued_by resident_PSPs"], "source.project_dbt.source_dwh_STRP.F_ASPSP_PAYMENT_INITIATION": ["model.project_dbt.PCT_INITIATED_BY_PISP"], "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_DECRYPTED": ["model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "model.project_dbt.A11_Number_of_payment_accounts_accessed_by_AISPs", "model.project_dbt.T0202_credit_transfers_TPP_check"], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_BALANCE": ["model.project_dbt.52505_NR_OF_ACCOUNTS", "model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN"], "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_CURRENT": ["model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS"], "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES": ["model.project_dbt.58550_CREDIT_TRANSFERS_RECEIVED_BY_UPP_CUSTOMERS", "model.project_dbt.58550_CREDIT_TRANSFERS_SENT_BY_UPP_CUSTOMERS", "model.project_dbt.PAY_CPNC"], "source.project_dbt.source_dwh_STRP.D_ASPSP_TPP_CURRENT": ["model.project_dbt.58726_CREDIT_TRANSFERS_WITH_SCA_BREAKDOWN_TPPCHECK", "model.project_dbt.T0202_credit_transfers_TPP_check"], "source.project_dbt.source_dwh_STRP.D_ACCOUNT_TRANSACTION_DECRYPTED": ["model.project_dbt.PAY_TROP_5845_IBIS"], "source.project_dbt.source_dwh_STRP.D_INBOUND_TRANSACTION_INFO_DECRYPTED": ["model.project_dbt.PAY_TROP_5845_PIS"], "source.project_dbt.source_dwh_STRP.D_PAYMENT_ACCOUNT_DECRYPTED": ["model.project_dbt.PAY_CPNC", "model.project_dbt.PAY_TROP_5845_CMD"], "source.project_dbt.source_dwh_STRP.F_LEGAL_ENTITY_PAYMENT_ACCOUNT_ROLES_DECRYPTED": ["model.project_dbt.PAY_TROP_5845_CMD"], "source.project_dbt.source_dwh_STRP.F_UNMATCHED_ACCOUNT_TRANSACTIONS": ["model.project_dbt.PAY_TRRT_5845"], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS": ["model.project_dbt.PAY_CPMC"], "source.project_dbt.source_dwh_STRP.D_IBIS_ACCOUNT": ["model.project_dbt.PAY_CPMC"], "source.project_dbt.source_dwh_STRP.D_PXG_PAYMENT_ACCOUNT": ["model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPCL"], "source.project_dbt.source_dwh_STRP.D_FINANCIAL_PLATFORMS": ["model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPCL"], "source.project_dbt.source_dwh_STRP.D_APPLICATION_ACCOUNT_INFO": ["model.project_dbt.PAY_CPCA", "model.project_dbt.PAY_CPCL"], "source.project_dbt.source_dwh_STRP.D_MERCHANTS_CURRENT": ["model.project_dbt.KMS_MRA"], "source.project_dbt.source_dwh_STRP.F_ACCOUNT_MOVEMENTS_DECRYPTED": ["model.project_dbt.T0401_misc"], "source.project_dbt.source_dm_PPST_BE.SCA_MAPPING_TABLE": [], "source.project_dbt.source_dm_PPST_BE.PCP": [], "source.project_dbt.source_dm_PPST_BE.PCP_ALBATROS_CMD_OCS": [], "source.project_dbt.source_dm_PPST_BE.PST3_MAPPING": ["model.project_dbt.PCP_MERCHANT_ACCT_TRX", "model.project_dbt.PCP_POS_ONLINE"], "source.project_dbt.source_dm_PPST_BE.PCP_MERCHANT_ACCT_TRX": [], "source.project_dbt.source_dm_PPST_BE.PCP_POS_ONLINE": [], "source.project_dbt.source_dl_P1_PSTA.dwh_transaction_properties_current": ["model.project_dbt.PCT_IDEAL"], "source.project_dbt.source_keyset__.merged": ["model.project_dbt.PCT_IDEAL"], "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_IBIS": [], "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_CMD": [], "source.project_dbt.source_dm_PPST_PT.PAY_TROP_5845_PIS": [], "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo": [], "source.project_dbt.source_dm_PPST_FR.COUNTRIES": ["model.project_dbt.Cross_join"], "source.project_dbt.source_dm_PPST_FR.MCC_CODES": ["model.project_dbt.Cross_join"], "source.project_dbt.source_dm_PPST_FR.CT1_agMoyPaiTypeOpeCanalTransactZoneGeo_totals": [], "source.project_dbt.dwh_strh.D_AUTHORIZED_PERSON": [], "source.project_dbt.dwh_strh.D_ENTERPRISE": [], "source.project_dbt.dwh_strh.D_LEGAL_ENTITY": [], "source.project_dbt.stg_dl_h3_hehe.public_Person_current": ["model.project_dbt.stg_strh_D_AUTHORIZED_PERSON"], "source.project_dbt.stg_dl_h3_hehe.public_PersonAttribute_current": ["model.project_dbt.stg_strh_D_AUTHORIZED_PERSON"], "source.project_dbt.stg_dl_h3_hklc.public_tblKlantSysAttr_current": ["model.project_dbt.stg_strh_D_ENTERPRISE"], "source.project_dbt.stg_dl_h3_hklc.public_tblSysteemAttribuut_current": ["model.project_dbt.stg_strh_D_ENTERPRISE"], "source.project_dbt.stg_dl_h3_hklc.public_tblLand_current": ["model.project_dbt.stg_strh_D_ENTERPRISE"], "source.project_dbt.stg_dl_h3_hklc.public_tblKlant_current": ["model.project_dbt.stg_strh_D_ENTERPRISE"], "source.project_dbt.stg_dl_h3_hkvk.public_RequestCache_current": ["model.project_dbt.stg_strh_D_LEGAL_ENTITY"], "source.project_dbt.h1_hkvk.public_RequestCache": ["model.project_dbt.dl_h1_hkvk_public_RequestCache"], "source.project_dbt.h3_hklc.public_aselect_loginhistory": ["model.project_dbt.dl_h3_hklc_public_aselect_loginhistory"], "source.project_dbt.h3_hklc.public_DA_relation": ["model.project_dbt.dl_h3_hklc_public_DA_relation"], "source.project_dbt.h3_hklc.public_DA_relation_audit": ["model.project_dbt.dl_h3_hklc_public_DA_relation_audit"], "source.project_dbt.h3_hklc.public_DA_relationrole": ["model.project_dbt.dl_h3_hklc_public_DA_relationrole"], "source.project_dbt.h3_hklc.public_tblAbonnement": ["model.project_dbt.dl_h3_hklc_public_tblAbonnement"], "source.project_dbt.h3_hklc.public_tblAbonnementType": ["model.project_dbt.dl_h3_hklc_public_tblAbonnementType"], "source.project_dbt.h3_hklc.public_tblDienst": ["model.project_dbt.dl_h3_hklc_public_tblDienst"], "source.project_dbt.h3_hklc.public_tblDienstType": ["model.project_dbt.dl_h3_hklc_public_tblDienstType"], "source.project_dbt.h3_hklc.public_tblFactType": ["model.project_dbt.dl_h3_hklc_public_tblFactType"], "source.project_dbt.h3_hklc.public_tblGrootboek": ["model.project_dbt.dl_h3_hklc_public_tblGrootboek"], "source.project_dbt.h3_hklc.public_tblKlant": ["model.project_dbt.dl_h3_hklc_public_tblKlant"], "source.project_dbt.h3_hklc.public_tblKlantAbonnement": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnement"], "source.project_dbt.h3_hklc.public_tblKlantAbonnementGebruik": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementGebruik"], "source.project_dbt.h3_hklc.public_tblKlantAbonnementSysAttr": ["model.project_dbt.dl_h3_hklc_public_tblKlantAbonnementSysAttr"], "source.project_dbt.h3_hklc.public_tblKlantBankMachtiging": ["model.project_dbt.dl_h3_hklc_public_tblKlantBankMachtiging"], "source.project_dbt.h3_hklc.public_tblKlantDienst": ["model.project_dbt.dl_h3_hklc_public_tblKlantDienst"], "source.project_dbt.h3_hklc.public_tblKlantSysAttr": ["model.project_dbt.dl_h3_hklc_public_tblKlantSysAttr"], "source.project_dbt.h3_hklc.public_tblLand": ["model.project_dbt.dl_h3_hklc_public_tblLand"], "source.project_dbt.h3_hklc.public_tblOrganisatie": ["model.project_dbt.dl_h3_hklc_public_tblOrganisatie"], "source.project_dbt.h3_hklc.public_tblSysteemAttribuut": ["model.project_dbt.dl_h3_hklc_public_tblSysteemAttribuut"], "source.project_dbt.h3_hklc.public_tblBTW": ["model.project_dbt.dl_h3_hklc_public_tblBTW"], "source.project_dbt.h3_hehe.public_AuditAuthenticationSet": ["model.project_dbt.dl_h3_hehe_public_AuditAuthenticationSet"], "source.project_dbt.h3_hehe.public_AuthenticationSet": ["model.project_dbt.dl_h3_hehe_public_AuthenticationSet"], "source.project_dbt.h3_hehe.public_AuthorizationSubject": ["model.project_dbt.dl_h3_hehe_public_AuthorizationSubject"], "source.project_dbt.h3_hehe.public_ChainAuthorization": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorization"], "source.project_dbt.h3_hehe.public_ChainAuthorizationService": ["model.project_dbt.dl_h3_hehe_public_ChainAuthorizationService"], "source.project_dbt.h3_hehe.public_ChainedOrganisation": ["model.project_dbt.dl_h3_hehe_public_ChainedOrganisation"], "source.project_dbt.h3_hehe.public_Group": ["model.project_dbt.dl_h3_hehe_public_Group"], "source.project_dbt.h3_hehe.public_GroupUser": ["model.project_dbt.dl_h3_hehe_public_GroupUser"], "source.project_dbt.h3_hehe.public_IntermediateAuthorizationService": ["model.project_dbt.dl_h3_hehe_public_IntermediateAuthorizationService"], "source.project_dbt.h3_hehe.public_Organisation": ["model.project_dbt.dl_h3_hehe_public_Organisation"], "source.project_dbt.h3_hehe.public_Person": ["model.project_dbt.dl_h3_hehe_public_Person"], "source.project_dbt.h3_hehe.public_PersonAttribute": ["model.project_dbt.dl_h3_hehe_public_PersonAttribute"], "source.project_dbt.h3_hehe.public_PersonOrganisationLink": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationLink"], "source.project_dbt.h3_hehe.public_PersonOrganisationRole": ["model.project_dbt.dl_h3_hehe_public_PersonOrganisationRole"], "source.project_dbt.h3_hehe.public_PersonUsageTransactions": ["model.project_dbt.dl_h3_hehe_public_PersonUsageTransactions"], "source.project_dbt.h3_hehe.public_ServiceAuthorization_1_13": ["model.project_dbt.dl_h3_hehe_public_ServiceAuthorization_1_13"], "source.project_dbt.h3_hehe.public_Urn": ["model.project_dbt.dl_h3_hehe_public_Urn"], "source.project_dbt.h3_hehe.public_ISO_Country": ["model.project_dbt.dl_h3_hehe_public_ISO_Country"], "source.project_dbt.h3_hehe.public_RegistrationLevel": ["model.project_dbt.dl_h3_hehe_public_RegistrationLevel"], "source.project_dbt.h3_hehe.public_Roles": ["model.project_dbt.dl_h3_hehe_public_Roles"], "source.project_dbt.h3_hehe.public_Service": ["model.project_dbt.dl_h3_hehe_public_Service"], "source.project_dbt.h3_hehe.public_ServiceProvider": ["model.project_dbt.dl_h3_hehe_public_ServiceProvider"]}, "group_map": {}, "saved_queries": {}, "semantic_models": {}, "unit_tests": {}}